{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport APIClient from './apiClient';\nimport React from 'react';\nimport { options } from \"Selection/MuseNetOptions\";\nimport { InputSelector } from \"Selection/Inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  _s();\n\n  const [generations, setGenerations] = React.useState(null);\n\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  };\n\n  const deleteGeneration = id => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    });\n  };\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const options = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {};\n      options.forEach(item => {\n        updatedSettings[item.id] = item.type === \"checkbox\" ? item.checked : item.value;\n      });\n      updatedSettings.parent = {\n        id: \"11\",\n        enc: \"\"\n      };\n      return updatedSettings;\n    };\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData();\n    });\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Generations, {\n      generations: generations,\n      deleteGeneration: deleteGeneration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionList, {\n      options: options,\n      createGeneration: createGeneration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ha5h+x/zoaBJ2o+jxdHgfcMgjkU=\");\n\n_c = App;\n\nconst OptionList = props => {\n  const unwrap = arr => {\n    return arr.map(child => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [child.title, /*#__PURE__*/_jsxDEV(InputSelector, {\n          data: child\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, child.toParam, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  let options = props.options.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), unwrap(item.children)]\n    }, item.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.createGeneration(),\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), options]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = OptionList;\n\nconst Generations = props => {\n  return !props.generations || props.generations.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [item.composer, \" | \", item.id, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteGeneration(item[\"_id\"][\"$oid\"]),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  });\n};\n\n_c3 = Generations;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"OptionList\");\n$RefreshReg$(_c3, \"Generations\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js"],"names":["APIClient","React","options","InputSelector","api","App","generations","setGenerations","useState","fetchData","result","data","deleteGeneration","id","then","r","createGeneration","prepSelections","document","querySelectorAll","updatedSettings","forEach","item","type","checked","value","parent","enc","useEffect","OptionList","props","unwrap","arr","map","child","title","toParam","children","Generations","index","composer"],"mappings":"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","sourcesContent":["import APIClient from './apiClient'\nimport React from 'react'\nimport {options} from \"Selection/MuseNetOptions\"\nimport {InputSelector} from \"Selection/Inputs\"\n\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  const [generations, setGenerations] = React.useState(null)\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  }\n\n  const deleteGeneration = (id) => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    })\n  }\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const options = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {}\n      options.forEach(item => {\n        updatedSettings[item.id] = item.type===\"checkbox\"\n                                      ? item.checked\n                                      : item.value\n      })\n      updatedSettings.parent = {id: \"11\", enc:\"\"}\n      return updatedSettings;\n    }\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData()\n    });\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Generations\n        generations={generations}\n        deleteGeneration={deleteGeneration}\n        />\n      <OptionList\n        options={options}\n        createGeneration={createGeneration}\n        />\n    </div>\n  );\n}\n\nconst OptionList = (props) => {\n  const unwrap = (arr) => {\n    return arr.map(child => {\n      return (\n      <div key={child.toParam}>\n        {child.title}\n        <InputSelector data={child} />\n      </div>);\n    })\n  }\n\n  let options = props.options.map(item => {\n    return(\n    <fieldset key={item.title}>\n      <legend>{item.title}</legend>\n      {unwrap(item.children)}\n    </fieldset>)\n  })\n\n  return (\n    <fieldset>\n      <legend>Options</legend>\n      <button onClick={() => props.createGeneration()}>create</button>\n      {options}\n    </fieldset>\n  );\n}\n\nconst Generations = (props) => {\n  return !props.generations || props.generations.map((item, index) => {\n    return (\n      <div key={index}>\n        {item.composer} | {item.id} <button onClick={() => props.deleteGeneration(item[\"_id\"][\"$oid\"])}>X</button>\n      </div>);\n  })\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}