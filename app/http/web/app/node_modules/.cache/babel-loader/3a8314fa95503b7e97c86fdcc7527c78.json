{"ast":null,"code":"import axios from 'axios';\n\nclass APIClient {\n  constructor(accessToken) {\n    this.BASE_URI = 'http://localhost:4433';\n    this.accessToken = accessToken;\n  }\n\n  createGeneration(data) {\n    console.log(\"creating \", data);\n    return this.perform('post', '/generation', data);\n  }\n\n  deleteGeneration(id) {\n    console.log(`deleting ${id} from api`);\n    return this.perform('delete', `/generation/${id}`);\n  }\n\n  generations() {\n    return this.perform('get', '/generations');\n  }\n\n  getGeneration(id) {\n    return this.perform('get', `/generation/${id}`);\n  }\n\n  createMediaForGeneration(item) {\n    return this.perform('get', `/generation/${item[\"_id\"][\"$oid\"]}/generate_midi`);\n  }\n\n  getTracks(id) {\n    return this.perform('get', `/generation/${id}/tracks`);\n  }\n\n  getMediaForGeneration(item, overwrite) {\n    return this.createMediaForGeneration(item).then(() => this.perform('get', `/generation/${item[\"_id\"][\"$oid\"]}/media`));\n  }\n\n  downloadMIDI(item) {\n    let res = this.getMediaForGeneration(item).then(res => {\n      console.log(\"res\", res.data[0].midi_location);\n      window.location = `${this.BASE_URI}/midifiles/${res.data[0].midi_location}`;\n    });\n  }\n\n  async perform(method, resource, data) {\n    // return client({\n    //   method,\n    //   url: resource,\n    //   data,\n    //   headers: {\n    //     Authorization: `Bearer ${this.accessToken}`\n    //   }\n    // }\n    return await axios({\n      method,\n      baseURL: this.BASE_URI,\n      url: resource,\n      json: true,\n      data\n    });\n  }\n\n}\n\nexport default APIClient;","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/apiClient.js"],"names":["axios","APIClient","constructor","accessToken","BASE_URI","createGeneration","data","console","log","perform","deleteGeneration","id","generations","getGeneration","createMediaForGeneration","item","getTracks","getMediaForGeneration","overwrite","then","downloadMIDI","res","midi_location","window","location","method","resource","baseURL","url","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,CAAgB;AACdC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACvB,SAAKC,QAAL,GAAgB,uBAAhB;AACA,SAAKD,WAAL,GAAmBA,WAAnB;AACD;;AAEDE,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AACA,WAAO,KAAKG,OAAL,CAAa,MAAb,EAAqB,aAArB,EAAoCH,IAApC,CAAP;AACD;;AAEDI,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWG,EAAG,WAA3B;AACA,WAAO,KAAKF,OAAL,CAAa,QAAb,EAAwB,eAAcE,EAAG,EAAzC,CAAP;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKH,OAAL,CAAa,KAAb,EAAoB,cAApB,CAAP;AACD;;AAEDI,EAAAA,aAAa,CAACF,EAAD,EAAK;AAChB,WAAO,KAAKF,OAAL,CAAa,KAAb,EAAqB,eAAcE,EAAG,EAAtC,CAAP;AACD;;AAEDG,EAAAA,wBAAwB,CAACC,IAAD,EAAO;AAC7B,WAAO,KAAKN,OAAL,CAAa,KAAb,EAAqB,eAAcM,IAAI,CAAC,KAAD,CAAJ,CAAY,MAAZ,CAAoB,gBAAvD,CAAP;AACD;;AAEDC,EAAAA,SAAS,CAACL,EAAD,EAAK;AACZ,WAAO,KAAKF,OAAL,CAAa,KAAb,EAAqB,eAAcE,EAAG,SAAtC,CAAP;AACD;;AAEDM,EAAAA,qBAAqB,CAACF,IAAD,EAAOG,SAAP,EAAkB;AACrC,WAAO,KAAKJ,wBAAL,CAA8BC,IAA9B,EACNI,IADM,CACD,MAAM,KAAKV,OAAL,CAAa,KAAb,EAAqB,eAAcM,IAAI,CAAC,KAAD,CAAJ,CAAY,MAAZ,CAAoB,QAAvD,CADL,CAAP;AAED;;AAEDK,EAAAA,YAAY,CAACL,IAAD,EAAM;AAChB,QAAIM,GAAG,GAAG,KAAKJ,qBAAL,CAA2BF,IAA3B,EACKI,IADL,CACUE,GAAG,IAAI;AACXd,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBa,GAAG,CAACf,IAAJ,CAAS,CAAT,EAAYgB,aAA/B;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAmB,GAAE,KAAKpB,QAAS,cAAaiB,GAAG,CAACf,IAAJ,CAAS,CAAT,EAAYgB,aAAc,EAA1E;AACD,KAJL,CAAV;AAKD;;AAEY,QAAPb,OAAO,CAAEgB,MAAF,EAAUC,QAAV,EAAoBpB,IAApB,EAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAO,MAAMN,KAAK,CAAC;AACjByB,MAAAA,MADiB;AAEjBE,MAAAA,OAAO,EAAE,KAAKvB,QAFG;AAGjBwB,MAAAA,GAAG,EAAEF,QAHY;AAIjBG,MAAAA,IAAI,EAAC,IAJY;AAKjBvB,MAAAA;AALiB,KAAD,CAAlB;AAOD;;AA7Da;;AAgEhB,eAAeL,SAAf","sourcesContent":["import axios from 'axios';\n\nclass APIClient {\n  constructor(accessToken) {\n    this.BASE_URI = 'http://localhost:4433';\n    this.accessToken = accessToken;\n  }\n\n  createGeneration(data) {\n    console.log(\"creating \", data)\n    return this.perform('post', '/generation', data);\n  }\n\n  deleteGeneration(id) {\n    console.log(`deleting ${id} from api`)\n    return this.perform('delete', `/generation/${id}`);\n  }\n\n  generations() {\n    return this.perform('get', '/generations')\n  }\n\n  getGeneration(id) {\n    return this.perform('get', `/generation/${id}`);\n  }\n\n  createMediaForGeneration(item) {\n    return this.perform('get', `/generation/${item[\"_id\"][\"$oid\"]}/generate_midi`)\n  }\n\n  getTracks(id) {\n    return this.perform('get', `/generation/${id}/tracks`)\n  }\n\n  getMediaForGeneration(item, overwrite) {\n    return this.createMediaForGeneration(item)\n    .then(() => this.perform('get', `/generation/${item[\"_id\"][\"$oid\"]}/media`));\n  }\n\n  downloadMIDI(item){\n    let res = this.getMediaForGeneration(item)\n                  .then(res => {\n                    console.log(\"res\", res.data[0].midi_location)\n                    window.location = `${this.BASE_URI}/midifiles/${res.data[0].midi_location}`\n                  })\n  }\n\n  async perform (method, resource, data) {\n    // return client({\n    //   method,\n    //   url: resource,\n    //   data,\n    //   headers: {\n    //     Authorization: `Bearer ${this.accessToken}`\n    //   }\n    // }\n    return await axios({\n      method,\n      baseURL: this.BASE_URI,\n      url: resource,\n      json:true,\n      data\n    })\n  }\n}\n\nexport default APIClient;\n"]},"metadata":{},"sourceType":"module"}