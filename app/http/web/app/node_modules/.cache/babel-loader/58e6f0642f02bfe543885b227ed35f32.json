{"ast":null,"code":"const calculateScore = data => {\n  let interval = 60 / data.tempo / data.subdivision;\n\n  let distance = i => Math.abs(Math.round(i) - i);\n\n  let startTimes = getMapFromArray(data.tracks).map(item => distance(item.time_on / interval));\n  return startTimes.reduce((a, b) => a + b, 0);\n};\n\nconst Score = props => {\n  return JSON.stringify(calculateScore({\n    tempo: props.bpm,\n    dawResolution: props.dawResolution,\n    subdivision: props.subdivision,\n    tracks: props.tracks\n  }));\n};\n\n_c = Score;\n\nvar _c;\n\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/Scorer.js"],"names":["calculateScore","data","interval","tempo","subdivision","distance","i","Math","abs","round","startTimes","getMapFromArray","tracks","map","item","time_on","reduce","a","b","Score","props","JSON","stringify","bpm","dawResolution"],"mappings":"AACA,MAAMA,cAAc,GAAIC,IAAD,IAAU;AAC/B,MAAIC,QAAQ,GAAI,KAAGD,IAAI,CAACE,KAAT,GAAgBF,IAAI,CAACG,WAApC;;AACA,MAAIC,QAAQ,GAAIC,CAAD,IAAOC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWH,CAAX,IAAgBA,CAAzB,CAAtB;;AACA,MAAII,UAAU,GAAGC,eAAe,CAACV,IAAI,CAACW,MAAN,CAAf,CAA6BC,GAA7B,CAAiCC,IAAI,IAAIT,QAAQ,CAACS,IAAI,CAACC,OAAL,GAAab,QAAd,CAAjD,CAAjB;AAEA,SAAOQ,UAAU,CAACM,MAAX,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAhC,EAAmC,CAAnC,CAAP;AACD,CAND;;AAQA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,SAAOC,IAAI,CAACC,SAAL,CAAetB,cAAc,CAAC;AACnCG,IAAAA,KAAK,EAAEiB,KAAK,CAACG,GADsB;AAEnCC,IAAAA,aAAa,EAAEJ,KAAK,CAACI,aAFc;AAGnCpB,IAAAA,WAAW,EAAEgB,KAAK,CAAChB,WAHgB;AAInCQ,IAAAA,MAAM,EAAEQ,KAAK,CAACR;AAJqB,GAAD,CAA7B,CAAP;AAMD,CAPD;;KAAMO,K","sourcesContent":["\nconst calculateScore = (data) => {\n  let interval = (60/data.tempo)/data.subdivision;\n  let distance = (i) => Math.abs(Math.round(i) - i);\n  let startTimes = getMapFromArray(data.tracks).map(item => distance(item.time_on/interval));\n\n  return startTimes.reduce((a, b) => a + b, 0)\n}\n\nconst Score = (props) => {\n  return JSON.stringify(calculateScore({\n    tempo: props.bpm,\n    dawResolution: props.dawResolution,\n    subdivision: props.subdivision,\n    tracks: props.tracks,\n  }))\n}\n"]},"metadata":{},"sourceType":"module"}