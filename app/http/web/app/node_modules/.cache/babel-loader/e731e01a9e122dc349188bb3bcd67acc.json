{"ast":null,"code":"import axios from 'axios';\nconst BASE_URI = 'http://localhost:4433';\nconst client = axios.create({\n  baseURL: BASE_URI,\n  json: true\n});\n\nclass APIClient {\n  constructor(accessToken) {\n    this.accessToken = accessToken;\n  }\n\n  createGeneration(repo) {\n    return this.perform('post', '/generations', repo);\n  }\n\n  deleteGeneration(repo) {\n    return this.perform('delete', `/generations/${repo.id}`);\n  }\n\n  generations() {\n    return this.perform('get', '/generations');\n  }\n\n  getGeneration(repo) {\n    return this.perform('get', `/generations/${repo.id}`);\n  }\n\n  async perform(method, resource, data) {\n    return client({\n      method,\n      url: resource,\n      data,\n      headers: {\n        Authorization: `Bearer ${this.accessToken}`\n      }\n    }).then(resp => {\n      return resp.data ? resp.data : [];\n    });\n  }\n\n}\n\nexport default APIClient;","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/apiClient.js"],"names":["axios","BASE_URI","client","create","baseURL","json","APIClient","constructor","accessToken","createGeneration","repo","perform","deleteGeneration","id","generations","getGeneration","method","resource","data","url","headers","Authorization","then","resp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,MAAMC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEH,QADkB;AAE3BI,EAAAA,IAAI,EAAE;AAFqB,CAAb,CAAf;;AAMA,MAAMC,SAAN,CAAgB;AACdC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACvB,SAAKA,WAAL,GAAmBA,WAAnB;AACD;;AAEDC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACrB,WAAO,KAAKC,OAAL,CAAa,MAAb,EAAqB,cAArB,EAAqCD,IAArC,CAAP;AACD;;AAEDE,EAAAA,gBAAgB,CAACF,IAAD,EAAO;AACrB,WAAO,KAAKC,OAAL,CAAa,QAAb,EAAwB,gBAAeD,IAAI,CAACG,EAAG,EAA/C,CAAP;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKH,OAAL,CAAa,KAAb,EAAoB,cAApB,CAAP;AACD;;AAEDI,EAAAA,aAAa,CAACL,IAAD,EAAO;AAClB,WAAO,KAAKC,OAAL,CAAa,KAAb,EAAqB,gBAAeD,IAAI,CAACG,EAAG,EAA5C,CAAP;AACD;;AAEY,QAAPF,OAAO,CAAEK,MAAF,EAAUC,QAAV,EAAoBC,IAApB,EAA0B;AACrC,WAAOhB,MAAM,CAAC;AACZc,MAAAA,MADY;AAEZG,MAAAA,GAAG,EAAEF,QAFO;AAGZC,MAAAA,IAHY;AAIZE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAAS,KAAKb,WAAY;AADnC;AAJG,KAAD,CAAN,CAOJc,IAPI,CAOCC,IAAI,IAAI;AACd,aAAOA,IAAI,CAACL,IAAL,GAAYK,IAAI,CAACL,IAAjB,GAAwB,EAA/B;AACD,KATM,CAAP;AAUD;;AAhCa;;AAmChB,eAAeZ,SAAf","sourcesContent":["import axios from 'axios';\n\nconst BASE_URI = 'http://localhost:4433';\n\nconst client = axios.create({\n baseURL: BASE_URI,\n json: true\n});\n\n\nclass APIClient {\n  constructor(accessToken) {\n    this.accessToken = accessToken;\n  }\n\n  createGeneration(repo) {\n    return this.perform('post', '/generations', repo);\n  }\n\n  deleteGeneration(repo) {\n    return this.perform('delete', `/generations/${repo.id}`);\n  }\n\n  generations() {\n    return this.perform('get', '/generations');\n  }\n\n  getGeneration(repo) {\n    return this.perform('get', `/generations/${repo.id}`);\n  }\n\n  async perform (method, resource, data) {\n    return client({\n      method,\n      url: resource,\n      data,\n      headers: {\n        Authorization: `Bearer ${this.accessToken}`\n      }\n    }).then(resp => {\n      return resp.data ? resp.data : [];\n    })\n  }\n}\n\nexport default APIClient;\n"]},"metadata":{},"sourceType":"module"}