{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport APIClient from './apiClient';\nimport React from 'react';\nimport { options } from \"Selection/MuseNetOptions\";\nimport { InputSelector } from \"Selection/Inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timidity = require(\"timidity\");\n\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  _s();\n\n  const [generations, setGenerations] = React.useState(null);\n  const [parentData, setParentData] = React.useState(null);\n\n  const fetchParentData = async parentId => {\n    console.log(\"updating parent data\");\n    let data = await api.getGeneration(parentId);\n    setParentData(data.data);\n  };\n\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  };\n\n  const deleteGeneration = id => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    });\n  };\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const selectedOptions = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {};\n      selectedOptions.forEach(item => {\n        updatedSettings[item.id] = item.type === \"checkbox\" ? item.checked : item.value;\n      });\n      updatedSettings.parent_enc = document.getElementById(\"parentEnc\").value;\n      updatedSettings.parent_id = document.getElementById(\"parentId\").value;\n      return updatedSettings;\n    };\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData();\n    });\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Generations, {\n      generations: generations,\n      deleteGeneration: deleteGeneration,\n      setParentData: fetchParentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionList, {\n      options: options,\n      createGeneration: createGeneration,\n      parent: parentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+nI0BwLRicVMKhAaX65lGwC/AHA=\");\n\n_c = App;\n\nconst ParentOptions = props => {\n  let enc = props.parent ? props.parent.enc : \"\";\n  let pid = props.parent ? props.parent[\"_id\"][\"$oid\"] : \"\";\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Parent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      id: \"parentEnc\",\n      value: enc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      id: \"parentId\",\n      value: pid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), \"parent: \", pid]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ParentOptions;\n\nconst OptionList = props => {\n  const unwrap = arr => {\n    return arr.map(child => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [child.title, /*#__PURE__*/_jsxDEV(InputSelector, {\n          data: child,\n          parent: props.parent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, child.toParam, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  let options = props.options.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), unwrap(item.children)]\n    }, item.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Parent Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.createGeneration(),\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParentOptions, {\n      parent: props.parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), options]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = OptionList;\n\nconst Generations = props => {\n  const player = new Timidity();\n  return !props.generations || props.generations.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [item.composer, \" | \", item.parent_id, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.setParentData(item[\"_id\"][\"$oid\"]),\n        children: \"parent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteGeneration(item[\"_id\"][\"$oid\"]),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  });\n};\n\n_c4 = Generations;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ParentOptions\");\n$RefreshReg$(_c3, \"OptionList\");\n$RefreshReg$(_c4, \"Generations\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js"],"names":["APIClient","React","options","InputSelector","Timidity","require","api","App","generations","setGenerations","useState","parentData","setParentData","fetchParentData","parentId","console","log","data","getGeneration","fetchData","result","deleteGeneration","id","then","r","createGeneration","prepSelections","selectedOptions","document","querySelectorAll","updatedSettings","forEach","item","type","checked","value","parent_enc","getElementById","parent_id","useEffect","ParentOptions","props","enc","parent","pid","OptionList","unwrap","arr","map","child","title","toParam","children","Generations","player","index","composer"],"mappings":"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","sourcesContent":["import APIClient from './apiClient'\nimport React from 'react'\nimport {options} from \"Selection/MuseNetOptions\"\nimport {InputSelector} from \"Selection/Inputs\"\nconst Timidity = require(\"timidity\")\n\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  const [generations, setGenerations] = React.useState(null)\n  const [parentData, setParentData] = React.useState(null)\n\n  const fetchParentData = async (parentId) => {\n    console.log(\"updating parent data\")\n    let data = await api.getGeneration(parentId)\n    setParentData(data.data);\n  }\n\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  }\n\n  const deleteGeneration = (id) => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    })\n  }\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const selectedOptions = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {}\n      selectedOptions.forEach(item => {\n        updatedSettings[item.id] = item.type===\"checkbox\"\n                                      ? item.checked\n                                      : item.value\n      })\n      updatedSettings.parent_enc = document.getElementById(\"parentEnc\").value\n      updatedSettings.parent_id = document.getElementById(\"parentId\").value\n      return updatedSettings;\n    }\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData()\n    });\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Generations\n        generations={generations}\n        deleteGeneration={deleteGeneration}\n        setParentData={fetchParentData}\n        />\n      <OptionList\n        options={options}\n        createGeneration={createGeneration}\n        parent={parentData}\n        />\n    </div>\n  );\n}\n\nconst ParentOptions = (props) => {\n  let enc = props.parent ? props.parent.enc : \"\";\n  let pid = props.parent ? props.parent[\"_id\"][\"$oid\"] : \"\";\n\n  return (\n    <fieldset>\n      <legend>Parent</legend>\n      <input\n        type=\"hidden\"\n        id=\"parentEnc\"\n        value={enc}/>\n      <input\n        type=\"hidden\"\n        id=\"parentId\"\n        value={pid}/>\n      parent: {pid}\n    </fieldset>\n  );\n}\n\nconst OptionList = (props) => {\n  const unwrap = (arr) => {\n    return arr.map(child => {\n      return (\n      <div key={child.toParam}>\n        {child.title}\n        <InputSelector data={child} parent={props.parent}/>\n      </div>);\n    })\n  }\n\n  let options = props.options.map(item => {\n    return(\n    <fieldset key={item.title}>\n      <legend>{item.title}</legend>\n      {unwrap(item.children)}\n    </fieldset>)\n  })\n\n  return (\n    <fieldset>\n      <legend>Parent Options</legend>\n      <button onClick={() => props.createGeneration()}>create</button>\n      <ParentOptions parent={props.parent} />\n      {options}\n    </fieldset>\n  );\n}\n\nconst Generations = (props) => {\n  const player = new Timidity();\n  return !props.generations || props.generations.map((item, index) => {\n    return (\n      <div key={index}>\n        {item.composer} | {item.parent_id}\n        <button onClick={() => props.setParentData(item[\"_id\"][\"$oid\"])}>parent</button>\n        <button onClick={() => props.deleteGeneration(item[\"_id\"][\"$oid\"])}>X</button>\n      </div>);\n  })\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}