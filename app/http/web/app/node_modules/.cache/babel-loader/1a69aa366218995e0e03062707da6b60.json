{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./daw.css\";\nimport { keymaps } from \"./keymaps\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst beatsPerMeasure = 4; // const dawResolution = .5; //measured in seconds\n// const BPMtoSPB = (BPM) => {\n//   60s/120b\n// }\n\nexport const SongEditor = props => {\n  _s();\n\n  const [bpm, setBPM] = React.useState(120);\n\n  if (props.current) {\n    let tracks = props.current.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Settings, {\n          setBPM: setBPM,\n          bpm: bpm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TrackViewer, {\n          tracks: tracks,\n          bpm: bpm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  } else {\n    return \"no parents\";\n  }\n};\n\n_s(SongEditor, \"5nPbBU8R1uJpvRyq8Wv6t6H2xDU=\");\n\n_c = SongEditor;\n\nconst Settings = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 50,\n      max: 150,\n      value: props.bpm,\n      onChange: e => props.setBPM(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), \" \", props.bpm]\n  }, void 0, true);\n};\n\n_c2 = Settings;\n\nconst TrackViewer = props => {\n  _s2();\n\n  const [activeTrack, setActiveTrack] = React.useState(0);\n  let tracks = props.tracks.map((item, idx) => {\n    console.log(\"tracking\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setActiveTrack(idx),\n      children: [item.instrument, \" | \", item.notes.length]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this); //.notes.length\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-area\",\n      children: tracks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-area\",\n      children: /*#__PURE__*/_jsxDEV(ActiveArea, {\n        active: props.tracks[activeTrack],\n        bpm: props.bpm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TrackViewer, \"xd5tPIV4RyVQCOI+NgzqfN3EuTg=\");\n\n_c3 = TrackViewer;\n\nconst ActiveArea = props => {\n  if (!props.active || !props.active.notes || props.active.notes.length === 0) {\n    return \"Select a track\";\n  }\n\n  let totalLengthInSeconds = 5;\n  let numBoxes = Math.round(totalLengthInSeconds * props.bpm / 60);\n  console.log(numBoxes);\n  let boxes = Array.from(Array(numBoxes).keys());\n  let notes = [...props.active.notes]; //.splice(0, 15) //#FIXME\n\n  let minNote = notes.reduce((min, b) => Math.min(min, b.pitch), notes[0].pitch);\n  let maxNote = notes.reduce((min, b) => Math.max(min, b.pitch), notes[0].pitch);\n  let filteredKeys = Object.keys(keymaps).filter(item => item >= minNote && item <= maxNote);\n\n  let header = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"key-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accidental keyNote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), boxes.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daw-cell\",\n        children: idx\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 30\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 16\n  }, this);\n\n  let body = filteredKeys.map((item, idx) => {\n    let b = boxes.map((item, idx) => {\n      // let cN = (item + 1) % beatsPerMeasure ? \"downbeat\" : \"beat\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: [\"background-cell\", \"daw-cell\"].join(\" \")\n      }, \"beats\" + idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key-row\",\n      children: b\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this);\n  });\n  let pianoKeys = filteredKeys.map((item, idx) => {\n    let c = keymaps[item].includes(\"#\") ? \"accidental\" : \"natural\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [c, \"keyNote\"].join(\" \"),\n      children: keymaps[item]\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }).reverse();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: pianoKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [body, /*#__PURE__*/_jsxDEV(Notes, {\n          minNote: minNote,\n          notes: notes,\n          offset: minNote,\n          tempo: props.bpm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true); // return notes.map((item, idx) => {\n  //   return <div key={idx}>{[keymaps[item.pitch], item.duration, item.time_on].join(\"|\")}</div>\n  // })\n};\n\n_c4 = ActiveArea;\n\nconst Notes = props => {\n  return props.notes.map((note, idx) => {\n    return /*#__PURE__*/_createElement(Note, { ...props,\n      note: note,\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 12\n      }\n    });\n  });\n};\n\n_c5 = Notes;\n\nconst Note = props => {\n  let unitCellWidth = 40;\n  let unitCellHeight = 30;\n  let cellHeight = unitCellHeight;\n  let cellWidth = props.tempo * props.note.duration / 60 * unitCellWidth;\n  let topOffset = unitCellHeight * (props.note.pitch - props.offset);\n  let leftOffset = props.tempo * props.note.time_on / 60 * unitCellWidth;\n  console.log(props.note);\n  let style = {\n    position: \"absolute\",\n    height: `${cellHeight}px`,\n    width: `${cellWidth}px`,\n    bot: `${topOffset}px`,\n    left: `${leftOffset}px`\n  };\n  console.log(style);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n};\n\n_c6 = Note;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SongEditor\");\n$RefreshReg$(_c2, \"Settings\");\n$RefreshReg$(_c3, \"TrackViewer\");\n$RefreshReg$(_c4, \"ActiveArea\");\n$RefreshReg$(_c5, \"Notes\");\n$RefreshReg$(_c6, \"Note\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js"],"names":["keymaps","React","beatsPerMeasure","SongEditor","props","bpm","setBPM","useState","current","tracks","data","Settings","e","target","value","TrackViewer","activeTrack","setActiveTrack","map","item","idx","console","log","instrument","notes","length","ActiveArea","active","totalLengthInSeconds","numBoxes","Math","round","boxes","Array","from","keys","minNote","reduce","min","b","pitch","maxNote","max","filteredKeys","Object","filter","header","body","join","pianoKeys","c","includes","reverse","position","Notes","note","Note","unitCellWidth","unitCellHeight","cellHeight","cellWidth","tempo","duration","topOffset","offset","leftOffset","time_on","style","height","width","bot","left"],"mappings":"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","sourcesContent":["import \"./daw.css\"\nimport {keymaps} from \"./keymaps\"\nimport React from 'react'\n\nconst beatsPerMeasure = 4;\n// const dawResolution = .5; //measured in seconds\n\n// const BPMtoSPB = (BPM) => {\n//   60s/120b\n// }\n\nexport const SongEditor = (props) => {\n  const [bpm, setBPM] = React.useState(120)\n  if(props.current){\n    let tracks = props.current.data\n    return <div className=\"grid-container\">\n    <div>Logo</div>\n    <div><Settings setBPM={setBPM} bpm={bpm}/></div>\n    <div>Sidebar</div>\n    <div><TrackViewer tracks={tracks} bpm={bpm} /></div>\n    </div>\n  } else {\n    return \"no parents\"\n  }\n}\n\nconst Settings = (props) => {\n  return <>\n    <input type=\"range\" min={50} max={150} value={props.bpm} onChange={(e) => props.setBPM(e.target.value)} /> {props.bpm}\n  </>\n}\n\nconst TrackViewer = (props) => {\n  const [activeTrack, setActiveTrack] = React.useState(0)\n  let tracks = props.tracks.map((item, idx) => {\n    console.log(\"tracking\")\n    return <div key={idx} onClick={() => setActiveTrack(idx)}>\n        {item.instrument} | {item.notes.length}\n        </div>//.notes.length\n  })\n\n  return <>\n  <div className=\"mini-area\">{tracks}</div>\n  <div className=\"active-area\"><ActiveArea active={props.tracks[activeTrack]} bpm={props.bpm}/></div>\n  </>\n}\n\nconst ActiveArea = (props) => {\n  if(!props.active || !props.active.notes || props.active.notes.length === 0) {return \"Select a track\"}\n  let totalLengthInSeconds = 5\n  let numBoxes = Math.round(totalLengthInSeconds*props.bpm/60);\n  console.log(numBoxes)\n  let boxes = Array.from(Array(numBoxes).keys())\n  let notes = [...props.active.notes]//.splice(0, 15) //#FIXME\n  let minNote = notes.reduce((min, b) => Math.min(min, b.pitch), notes[0].pitch);\n  let maxNote = notes.reduce((min, b) => Math.max(min, b.pitch), notes[0].pitch);\n  let filteredKeys = Object.keys(keymaps).filter((item) => (item >= minNote && item <= maxNote))\n\n  let header = <div className=\"key-row\">\n                  <div className=\"accidental keyNote\"></div>\n                    {boxes.map((item, idx) => {\n                      return <div className=\"daw-cell\" key={idx}>{idx}</div>\n                    })}\n                </div>\n\n  let body = filteredKeys.map((item, idx) => {\n      let b = boxes.map((item, idx) => {\n        // let cN = (item + 1) % beatsPerMeasure ? \"downbeat\" : \"beat\";\n        return <div className={[\"background-cell\", \"daw-cell\"].join(\" \")} key={\"beats\"+idx}></div>\n      })\n      return <div className=\"key-row\" key={idx}>\n        {b}\n      </div>\n  })\n\n  let pianoKeys = filteredKeys.map((item, idx) => {\n    let c = keymaps[item].includes(\"#\") ? \"accidental\" : \"natural\";\n    return <div className={[c, \"keyNote\"].join(\" \")} key={idx}>{keymaps[item]}</div>\n  }).reverse()\n\n  return <>\n            <div>\n              {header}\n            </div>\n            <div className=\"daw\">\n              <div>\n                {pianoKeys}\n              </div>\n              <div style={{position: \"relative\"}}>\n                {body}\n                <Notes\n                  minNote={minNote}\n                  notes={notes}\n                  offset={minNote}\n                  tempo={props.bpm}/>\n              </div>\n            </div>\n        </>\n  // return notes.map((item, idx) => {\n  //   return <div key={idx}>{[keymaps[item.pitch], item.duration, item.time_on].join(\"|\")}</div>\n  // })\n}\n\nconst Notes = (props) => {\n  return props.notes.map((note, idx) => {\n    return <Note {...props} note={note} key={idx} />\n  })\n}\n\nconst Note = (props) => {\n  let unitCellWidth = 40;\n  let unitCellHeight=30;\n\n  let cellHeight = unitCellHeight;\n  let cellWidth=(props.tempo*props.note.duration/60)*unitCellWidth;\n  let topOffset=unitCellHeight*(props.note.pitch - props.offset);\n  let leftOffset=props.tempo*(props.note.time_on)/60*unitCellWidth;\n\n  console.log(props.note)\n  let style = {\n    position: \"absolute\",\n    height:`${cellHeight}px`,\n    width:`${cellWidth}px`,\n    bot:`${topOffset}px`,\n    left:`${leftOffset}px`\n  }\n  console.log(style)\n  return <div className=\"note\" style={style}></div>\n}\n"]},"metadata":{},"sourceType":"module"}