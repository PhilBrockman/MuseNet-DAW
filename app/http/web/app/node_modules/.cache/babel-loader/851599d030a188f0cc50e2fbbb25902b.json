{"ast":null,"code":"//    abc_tunebook.js: splits a string representing ABC Music Notation into individual tunes.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*global document */\n\n/*global window, ABCJS, console */\nvar parseCommon = require('../parse/abc_common');\n\nvar Parse = require('../parse/abc_parse');\n\nvar tunebook = {};\n\n(function () {\n  \"use strict\";\n\n  tunebook.numberOfTunes = function (abc) {\n    var tunes = abc.split(\"\\nX:\");\n    var num = tunes.length;\n    if (num === 0) num = 1;\n    return num;\n  };\n\n  var TuneBook = tunebook.TuneBook = function (book) {\n    var This = this;\n    var directives = \"\";\n    book = parseCommon.strip(book);\n    var tunes = book.split(\"\\nX:\");\n\n    for (var i = 1; i < tunes.length; i++) // Put back the X: that we lost when splitting the tunes.\n    tunes[i] = \"X:\" + tunes[i]; // Keep track of the character position each tune starts with.\n\n\n    var pos = 0;\n    This.tunes = [];\n    parseCommon.each(tunes, function (tune) {\n      This.tunes.push({\n        abc: tune,\n        startPos: pos\n      });\n      pos += tune.length;\n    });\n\n    if (This.tunes.length > 1 && !parseCommon.startsWith(This.tunes[0].abc, 'X:')) {\n      // If there is only one tune, the X: might be missing, otherwise assume the top of the file is \"intertune\"\n      // There could be file-wide directives in this, if so, we need to insert it into each tune. We can probably get away with\n      // just looking for file-wide directives here (before the first tune) and inserting them at the bottom of each tune, since\n      // the tune is parsed all at once. The directives will be seen before the engraver begins processing.\n      var dir = This.tunes.shift();\n      var arrDir = dir.abc.split('\\n');\n      parseCommon.each(arrDir, function (line) {\n        if (parseCommon.startsWith(line, '%%')) directives += line + '\\n';\n      });\n    }\n\n    This.header = directives; // Now, the tune ends at a blank line, so truncate it if needed. There may be \"intertune\" stuff.\n\n    parseCommon.each(This.tunes, function (tune) {\n      var end = tune.abc.indexOf('\\n\\n');\n      if (end > 0) tune.abc = tune.abc.substring(0, end);\n      tune.pure = tune.abc;\n      tune.abc = directives + tune.abc; // for the user's convenience, parse and store the title separately. The title is between the first T: and the next \\n\n\n      var title = tune.pure.split(\"T:\");\n\n      if (title.length > 1) {\n        title = title[1].split(\"\\n\");\n        tune.title = title[0].replace(/^\\s+|\\s+$/g, '');\n      } else tune.title = \"\"; // for the user's convenience, parse and store the id separately. The id is between the first X: and the next \\n\n\n\n      var id = tune.pure.substring(2, tune.pure.indexOf(\"\\n\"));\n      tune.id = id.replace(/^\\s+|\\s+$/g, '');\n    });\n  };\n\n  TuneBook.prototype.getTuneById = function (id) {\n    for (var i = 0; i < this.tunes.length; i++) {\n      if (this.tunes[i].id === id) return this.tunes[i];\n    }\n\n    return null;\n  };\n\n  TuneBook.prototype.getTuneByTitle = function (title) {\n    for (var i = 0; i < this.tunes.length; i++) {\n      if (this.tunes[i].title === title) return this.tunes[i];\n    }\n\n    return null;\n  };\n\n  tunebook.renderEngine = function (callback, output, abc, params) {\n    var ret = [];\n\n    var isArray = function (testObject) {\n      return testObject && !testObject.propertyIsEnumerable('length') && typeof testObject === 'object' && typeof testObject.length === 'number';\n    }; // check and normalize input parameters\n\n\n    if (output === undefined || abc === undefined) return;\n    if (!isArray(output)) output = [output];\n    if (params === undefined) params = {};\n    var currentTune = params.startingTune ? parseInt(params.startingTune, 10) : 0; // parse the abc string\n\n    var book = new TuneBook(abc);\n    var abcParser = new Parse(); // output each tune, if it exists. Otherwise clear the div.\n\n    for (var i = 0; i < output.length; i++) {\n      var div = output[i];\n      if (typeof div === \"string\") div = document.getElementById(div);\n\n      if (div) {\n        if (currentTune >= 0 && currentTune < book.tunes.length) {\n          abcParser.parse(book.tunes[currentTune].abc, params);\n          var tune = abcParser.getTune();\n          ret.push(tune);\n          callback(div, tune, i);\n        } else div.innerHTML = \"\";\n      }\n\n      currentTune++;\n    }\n\n    return ret;\n  };\n})();\n\nmodule.exports = tunebook;","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/node_modules/abcjs/src/api/abc_tunebook.js"],"names":["parseCommon","require","Parse","tunebook","numberOfTunes","abc","tunes","split","num","length","TuneBook","book","This","directives","strip","i","pos","each","tune","push","startPos","startsWith","dir","shift","arrDir","line","header","end","indexOf","substring","pure","title","replace","id","prototype","getTuneById","getTuneByTitle","renderEngine","callback","output","params","ret","isArray","testObject","propertyIsEnumerable","undefined","currentTune","startingTune","parseInt","abcParser","div","document","getElementById","parse","getTune","innerHTML","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAAnB;;AAEA,IAAIE,QAAQ,GAAG,EAAf;;AAEA,CAAC,YAAW;AACX;;AAEAA,EAAAA,QAAQ,CAACC,aAAT,GAAyB,UAASC,GAAT,EAAc;AACtC,QAAIC,KAAK,GAAGD,GAAG,CAACE,KAAJ,CAAU,MAAV,CAAZ;AACA,QAAIC,GAAG,GAAGF,KAAK,CAACG,MAAhB;AACA,QAAID,GAAG,KAAK,CAAZ,EAAeA,GAAG,GAAG,CAAN;AACf,WAAOA,GAAP;AACA,GALD;;AAOA,MAAIE,QAAQ,GAAGP,QAAQ,CAACO,QAAT,GAAoB,UAASC,IAAT,EAAe;AACjD,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAF,IAAAA,IAAI,GAAGX,WAAW,CAACc,KAAZ,CAAkBH,IAAlB,CAAP;AACA,QAAIL,KAAK,GAAGK,IAAI,CAACJ,KAAL,CAAW,MAAX,CAAZ;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAACG,MAA1B,EAAkCM,CAAC,EAAnC,EAAuC;AACtCT,IAAAA,KAAK,CAACS,CAAD,CAAL,GAAW,OAAOT,KAAK,CAACS,CAAD,CAAvB,CANgD,CAOjD;;;AACA,QAAIC,GAAG,GAAG,CAAV;AACAJ,IAAAA,IAAI,CAACN,KAAL,GAAa,EAAb;AACAN,IAAAA,WAAW,CAACiB,IAAZ,CAAiBX,KAAjB,EAAwB,UAASY,IAAT,EAAe;AACtCN,MAAAA,IAAI,CAACN,KAAL,CAAWa,IAAX,CAAgB;AAAEd,QAAAA,GAAG,EAAEa,IAAP;AAAaE,QAAAA,QAAQ,EAAEJ;AAAvB,OAAhB;AACAA,MAAAA,GAAG,IAAIE,IAAI,CAACT,MAAZ;AACA,KAHD;;AAIA,QAAIG,IAAI,CAACN,KAAL,CAAWG,MAAX,GAAoB,CAApB,IAAyB,CAACT,WAAW,CAACqB,UAAZ,CAAuBT,IAAI,CAACN,KAAL,CAAW,CAAX,EAAcD,GAArC,EAA0C,IAA1C,CAA9B,EAA+E;AAAE;AAChF;AACA;AACA;AACA,UAAIiB,GAAG,GAAGV,IAAI,CAACN,KAAL,CAAWiB,KAAX,EAAV;AACA,UAAIC,MAAM,GAAGF,GAAG,CAACjB,GAAJ,CAAQE,KAAR,CAAc,IAAd,CAAb;AACAP,MAAAA,WAAW,CAACiB,IAAZ,CAAiBO,MAAjB,EAAyB,UAASC,IAAT,EAAe;AACvC,YAAIzB,WAAW,CAACqB,UAAZ,CAAuBI,IAAvB,EAA6B,IAA7B,CAAJ,EACCZ,UAAU,IAAIY,IAAI,GAAG,IAArB;AACD,OAHD;AAIA;;AACDb,IAAAA,IAAI,CAACc,MAAL,GAAcb,UAAd,CAzBiD,CA2BjD;;AACAb,IAAAA,WAAW,CAACiB,IAAZ,CAAiBL,IAAI,CAACN,KAAtB,EAA6B,UAASY,IAAT,EAAe;AAC3C,UAAIS,GAAG,GAAGT,IAAI,CAACb,GAAL,CAASuB,OAAT,CAAiB,MAAjB,CAAV;AACA,UAAID,GAAG,GAAG,CAAV,EACCT,IAAI,CAACb,GAAL,GAAWa,IAAI,CAACb,GAAL,CAASwB,SAAT,CAAmB,CAAnB,EAAsBF,GAAtB,CAAX;AACDT,MAAAA,IAAI,CAACY,IAAL,GAAYZ,IAAI,CAACb,GAAjB;AACAa,MAAAA,IAAI,CAACb,GAAL,GAAWQ,UAAU,GAAGK,IAAI,CAACb,GAA7B,CAL2C,CAO3C;;AACA,UAAI0B,KAAK,GAAGb,IAAI,CAACY,IAAL,CAAUvB,KAAV,CAAgB,IAAhB,CAAZ;;AACA,UAAIwB,KAAK,CAACtB,MAAN,GAAe,CAAnB,EAAsB;AACrBsB,QAAAA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAL,CAASxB,KAAT,CAAe,IAAf,CAAR;AACAW,QAAAA,IAAI,CAACa,KAAL,GAAaA,KAAK,CAAC,CAAD,CAAL,CAASC,OAAT,CAAiB,YAAjB,EAA+B,EAA/B,CAAb;AACA,OAHD,MAICd,IAAI,CAACa,KAAL,GAAa,EAAb,CAb0C,CAe3C;;;AACA,UAAIE,EAAE,GAAGf,IAAI,CAACY,IAAL,CAAUD,SAAV,CAAoB,CAApB,EAAuBX,IAAI,CAACY,IAAL,CAAUF,OAAV,CAAkB,IAAlB,CAAvB,CAAT;AACAV,MAAAA,IAAI,CAACe,EAAL,GAAUA,EAAE,CAACD,OAAH,CAAW,YAAX,EAAyB,EAAzB,CAAV;AACA,KAlBD;AAmBA,GA/CD;;AAiDAtB,EAAAA,QAAQ,CAACwB,SAAT,CAAmBC,WAAnB,GAAiC,UAASF,EAAT,EAAa;AAC7C,SAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,KAAL,CAAWG,MAA/B,EAAuCM,CAAC,EAAxC,EAA4C;AAC3C,UAAI,KAAKT,KAAL,CAAWS,CAAX,EAAckB,EAAd,KAAqBA,EAAzB,EACC,OAAO,KAAK3B,KAAL,CAAWS,CAAX,CAAP;AACD;;AACD,WAAO,IAAP;AACA,GAND;;AAQAL,EAAAA,QAAQ,CAACwB,SAAT,CAAmBE,cAAnB,GAAoC,UAASL,KAAT,EAAgB;AACnD,SAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,KAAL,CAAWG,MAA/B,EAAuCM,CAAC,EAAxC,EAA4C;AAC3C,UAAI,KAAKT,KAAL,CAAWS,CAAX,EAAcgB,KAAd,KAAwBA,KAA5B,EACC,OAAO,KAAKzB,KAAL,CAAWS,CAAX,CAAP;AACD;;AACD,WAAO,IAAP;AACA,GAND;;AAQAZ,EAAAA,QAAQ,CAACkC,YAAT,GAAwB,UAAUC,QAAV,EAAoBC,MAApB,EAA4BlC,GAA5B,EAAiCmC,MAAjC,EAAyC;AAChE,QAAIC,GAAG,GAAG,EAAV;;AACA,QAAIC,OAAO,GAAG,UAASC,UAAT,EAAqB;AAClC,aAAOA,UAAU,IAAI,CAAEA,UAAU,CAACC,oBAAX,CAAgC,QAAhC,CAAhB,IAA8D,OAAOD,UAAP,KAAsB,QAApF,IAAgG,OAAOA,UAAU,CAAClC,MAAlB,KAA6B,QAApI;AACA,KAFD,CAFgE,CAMhE;;;AACA,QAAI8B,MAAM,KAAKM,SAAX,IAAwBxC,GAAG,KAAKwC,SAApC,EACC;AACD,QAAI,CAACH,OAAO,CAACH,MAAD,CAAZ,EACCA,MAAM,GAAG,CAAEA,MAAF,CAAT;AACD,QAAIC,MAAM,KAAKK,SAAf,EACCL,MAAM,GAAG,EAAT;AACD,QAAIM,WAAW,GAAGN,MAAM,CAACO,YAAP,GAAsBC,QAAQ,CAACR,MAAM,CAACO,YAAR,EAAsB,EAAtB,CAA9B,GAA0D,CAA5E,CAbgE,CAehE;;AACA,QAAIpC,IAAI,GAAG,IAAID,QAAJ,CAAaL,GAAb,CAAX;AACA,QAAI4C,SAAS,GAAG,IAAI/C,KAAJ,EAAhB,CAjBgE,CAmBhE;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,MAAM,CAAC9B,MAA3B,EAAmCM,CAAC,EAApC,EAAwC;AACvC,UAAImC,GAAG,GAAGX,MAAM,CAACxB,CAAD,CAAhB;AACA,UAAI,OAAOmC,GAAP,KAAgB,QAApB,EACCA,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwBF,GAAxB,CAAN;;AACD,UAAIA,GAAJ,EAAS;AACR,YAAIJ,WAAW,IAAI,CAAf,IAAoBA,WAAW,GAAGnC,IAAI,CAACL,KAAL,CAAWG,MAAjD,EAAyD;AACxDwC,UAAAA,SAAS,CAACI,KAAV,CAAgB1C,IAAI,CAACL,KAAL,CAAWwC,WAAX,EAAwBzC,GAAxC,EAA6CmC,MAA7C;AACA,cAAItB,IAAI,GAAG+B,SAAS,CAACK,OAAV,EAAX;AACAb,UAAAA,GAAG,CAACtB,IAAJ,CAASD,IAAT;AACAoB,UAAAA,QAAQ,CAACY,GAAD,EAAMhC,IAAN,EAAYH,CAAZ,CAAR;AACA,SALD,MAMCmC,GAAG,CAACK,SAAJ,GAAgB,EAAhB;AACD;;AACDT,MAAAA,WAAW;AACX;;AACD,WAAOL,GAAP;AACA,GApCD;AAsCA,CAjHD;;AAmHAe,MAAM,CAACC,OAAP,GAAiBtD,QAAjB","sourcesContent":["//    abc_tunebook.js: splits a string representing ABC Music Notation into individual tunes.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*global document */\n/*global window, ABCJS, console */\n\nvar parseCommon = require('../parse/abc_common');\nvar Parse = require('../parse/abc_parse');\n\nvar tunebook = {};\n\n(function() {\n\t\"use strict\";\n\n\ttunebook.numberOfTunes = function(abc) {\n\t\tvar tunes = abc.split(\"\\nX:\");\n\t\tvar num = tunes.length;\n\t\tif (num === 0) num = 1;\n\t\treturn num;\n\t};\n\n\tvar TuneBook = tunebook.TuneBook = function(book) {\n\t\tvar This = this;\n\t\tvar directives = \"\";\n\t\tbook = parseCommon.strip(book);\n\t\tvar tunes = book.split(\"\\nX:\");\n\t\tfor (var i = 1; i < tunes.length; i++)\t// Put back the X: that we lost when splitting the tunes.\n\t\t\ttunes[i] = \"X:\" + tunes[i];\n\t\t// Keep track of the character position each tune starts with.\n\t\tvar pos = 0;\n\t\tThis.tunes = [];\n\t\tparseCommon.each(tunes, function(tune) {\n\t\t\tThis.tunes.push({ abc: tune, startPos: pos});\n\t\t\tpos += tune.length;\n\t\t});\n\t\tif (This.tunes.length > 1 && !parseCommon.startsWith(This.tunes[0].abc, 'X:')) {\t// If there is only one tune, the X: might be missing, otherwise assume the top of the file is \"intertune\"\n\t\t\t// There could be file-wide directives in this, if so, we need to insert it into each tune. We can probably get away with\n\t\t\t// just looking for file-wide directives here (before the first tune) and inserting them at the bottom of each tune, since\n\t\t\t// the tune is parsed all at once. The directives will be seen before the engraver begins processing.\n\t\t\tvar dir = This.tunes.shift();\n\t\t\tvar arrDir = dir.abc.split('\\n');\n\t\t\tparseCommon.each(arrDir, function(line) {\n\t\t\t\tif (parseCommon.startsWith(line, '%%'))\n\t\t\t\t\tdirectives += line + '\\n';\n\t\t\t});\n\t\t}\n\t\tThis.header = directives;\n\n\t\t// Now, the tune ends at a blank line, so truncate it if needed. There may be \"intertune\" stuff.\n\t\tparseCommon.each(This.tunes, function(tune) {\n\t\t\tvar end = tune.abc.indexOf('\\n\\n');\n\t\t\tif (end > 0)\n\t\t\t\ttune.abc = tune.abc.substring(0, end);\n\t\t\ttune.pure = tune.abc;\n\t\t\ttune.abc = directives + tune.abc;\n\n\t\t\t// for the user's convenience, parse and store the title separately. The title is between the first T: and the next \\n\n\t\t\tvar title = tune.pure.split(\"T:\");\n\t\t\tif (title.length > 1) {\n\t\t\t\ttitle = title[1].split(\"\\n\");\n\t\t\t\ttune.title = title[0].replace(/^\\s+|\\s+$/g, '');\n\t\t\t} else\n\t\t\t\ttune.title = \"\";\n\n\t\t\t// for the user's convenience, parse and store the id separately. The id is between the first X: and the next \\n\n\t\t\tvar id = tune.pure.substring(2, tune.pure.indexOf(\"\\n\"));\n\t\t\ttune.id = id.replace(/^\\s+|\\s+$/g, '');\n\t\t});\n\t};\n\n\tTuneBook.prototype.getTuneById = function(id) {\n\t\tfor (var i = 0; i < this.tunes.length; i++) {\n\t\t\tif (this.tunes[i].id === id)\n\t\t\t\treturn this.tunes[i];\n\t\t}\n\t\treturn null;\n\t};\n\n\tTuneBook.prototype.getTuneByTitle = function(title) {\n\t\tfor (var i = 0; i < this.tunes.length; i++) {\n\t\t\tif (this.tunes[i].title === title)\n\t\t\t\treturn this.tunes[i];\n\t\t}\n\t\treturn null;\n\t};\n\n\ttunebook.renderEngine = function (callback, output, abc, params) {\n\t\tvar ret = [];\n\t\tvar isArray = function(testObject) {\n\t\t\treturn testObject && !(testObject.propertyIsEnumerable('length')) && typeof testObject === 'object' && typeof testObject.length === 'number';\n\t\t};\n\n\t\t// check and normalize input parameters\n\t\tif (output === undefined || abc === undefined)\n\t\t\treturn;\n\t\tif (!isArray(output))\n\t\t\toutput = [ output ];\n\t\tif (params === undefined)\n\t\t\tparams = {};\n\t\tvar currentTune = params.startingTune ? parseInt(params.startingTune, 10) : 0;\n\n\t\t// parse the abc string\n\t\tvar book = new TuneBook(abc);\n\t\tvar abcParser = new Parse();\n\n\t\t// output each tune, if it exists. Otherwise clear the div.\n\t\tfor (var i = 0; i < output.length; i++) {\n\t\t\tvar div = output[i];\n\t\t\tif (typeof(div) === \"string\")\n\t\t\t\tdiv = document.getElementById(div);\n\t\t\tif (div) {\n\t\t\t\tif (currentTune >= 0 && currentTune < book.tunes.length) {\n\t\t\t\t\tabcParser.parse(book.tunes[currentTune].abc, params);\n\t\t\t\t\tvar tune = abcParser.getTune();\n\t\t\t\t\tret.push(tune);\n\t\t\t\t\tcallback(div, tune, i);\n\t\t\t\t} else\n\t\t\t\t\tdiv.innerHTML = \"\";\n\t\t\t}\n\t\t\tcurrentTune++;\n\t\t}\n\t\treturn ret;\n\t}\n\n})();\n\nmodule.exports = tunebook;\n"]},"metadata":{},"sourceType":"script"}