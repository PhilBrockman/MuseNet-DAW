{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/Selection/Inputs.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SliderInput = props => {\n  _s();\n\n  const data = props.data;\n  const step_size = data.max < 3 ? .01 : 1;\n  const [value, setValue] = React.useState(data.default);\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: data.toParam,\n      type: \"range\",\n      min: data.min,\n      max: data.max,\n      value: data.defaultValue,\n      step: step_size,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), value]\n  }, void 0, true);\n};\n\n_s(SliderInput, \"DknvUS6wHYWb6ljkXGYy7AJ//Ww=\");\n\n_c = SliderInput;\n\nconst Checkbox = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Choice\"\n  }, void 0, false);\n};\n\n_c2 = Checkbox;\n\nconst Checkboxes = props => {\n  return props.data.options.map(item => /*#__PURE__*/_jsxDEV(Checkbox, {\n    data: item\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 41\n  }, this));\n};\n\n_c3 = Checkboxes;\nexport const InputSelector = props => {\n  const data = props.data;\n  const choice = data.inputType;\n\n  if (choice === \"select\") {\n    let options = data.options.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 44\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      id: data.toParam,\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  } else if (choice === \"slider\") {\n    return /*#__PURE__*/_jsxDEV(SliderInput, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  } else if (choice === \"checkboxinput\") {\n    return /*#__PURE__*/_jsxDEV(Checkboxes, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  } else {\n    return failed(\"failure\");\n  }\n};\n_c4 = InputSelector;\n\nconst failed = text => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: text\n}, void 0, false);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SliderInput\");\n$RefreshReg$(_c2, \"Checkbox\");\n$RefreshReg$(_c3, \"Checkboxes\");\n$RefreshReg$(_c4, \"InputSelector\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/Selection/Inputs.js"],"names":["React","SliderInput","props","data","step_size","max","value","setValue","useState","default","handleChange","e","target","toParam","min","defaultValue","Checkbox","Checkboxes","options","map","item","InputSelector","choice","inputType","failed","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMC,SAAS,GAAGD,IAAI,CAACE,GAAL,GAAW,CAAX,GAAe,GAAf,GAAqB,CAAvC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAeL,IAAI,CAACM,OAApB,CAA1B;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAwB;AACtBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACD;;AAED,sBACE;AAAA,4BACE;AACE,MAAA,EAAE,EAAEH,IAAI,CAACU,OADX;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,GAAG,EAAEV,IAAI,CAACW,GAHZ;AAIE,MAAA,GAAG,EAAEX,IAAI,CAACE,GAJZ;AAKE,MAAA,KAAK,EAAEF,IAAI,CAACY,YALd;AAME,MAAA,IAAI,EAAEX,SANR;AAOE,MAAA,QAAQ,EAAEM;AAPZ;AAAA;AAAA;AAAA;AAAA,YADF,EASGJ,KATH;AAAA,kBADF;AAaD,CAtBD;;GAAML,W;;KAAAA,W;;AAwBN,MAAMe,QAAQ,GAAId,KAAD,IAAU;AACzB,sBAAO;AAAA;AAAA,mBAAP;AACD,CAFD;;MAAMc,Q;;AAIN,MAAMC,UAAU,GAAIf,KAAD,IAAW;AAC5B,SAAOA,KAAK,CAACC,IAAN,CAAWe,OAAX,CAAmBC,GAAnB,CAAuBC,IAAI,iBAAI,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,UAA/B,CAAP;AACD,CAFD;;MAAMH,U;AAIN,OAAO,MAAMI,aAAa,GAAInB,KAAD,IAAW;AACtC,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMmB,MAAM,GAAGnB,IAAI,CAACoB,SAApB;;AAEA,MAAGD,MAAM,KAAK,QAAd,EAAuB;AACrB,QAAIJ,OAAO,GAAGf,IAAI,CAACe,OAAL,CAAaC,GAAb,CAAiBC,IAAI,iBAAI;AAAQ,MAAA,KAAK,EAAEA,IAAf;AAAA,gBAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAzB,CAAd;AACA,wBACE;AAAQ,MAAA,EAAE,EAAEjB,IAAI,CAACU,OAAjB;AAAA,gBACGK;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAPD,MAOO,IAAII,MAAM,KAAK,QAAf,EAAwB;AAC7B,wBACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEnB;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJM,MAIA,IAAImB,MAAM,KAAK,eAAf,EAA+B;AACpC,wBAAO,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEnB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,WAAOqB,MAAM,CAAC,SAAD,CAAb;AACD;AACF,CApBM;MAAMH,a;;AAsBb,MAAMG,MAAM,GAAIC,IAAD,iBAAU;AAAA,YAAGA;AAAH,iBAAzB","sourcesContent":["import React from 'react';\n\nconst SliderInput = (props) => {\n  const data = props.data\n  const step_size = data.max < 3 ? .01 : 1;\n  const [value, setValue] = React.useState(data.default)\n\n  function handleChange(e){\n    setValue(e.target.value)\n  }\n\n  return (\n    <>\n      <input\n        id={data.toParam}\n        type=\"range\"\n        min={data.min}\n        max={data.max}\n        value={data.defaultValue}\n        step={step_size}\n        onChange={handleChange}/>\n      {value}\n    </>\n  );\n}\n\nconst Checkbox = (props) =>{\n  return <>Choice</>\n}\n\nconst Checkboxes = (props) => {\n  return props.data.options.map(item => <Checkbox data={item} />);\n}\n\nexport const InputSelector = (props) => {\n  const data = props.data\n  const choice = data.inputType;\n\n  if(choice === \"select\"){\n    let options = data.options.map(item => <option value={item}>{item}</option> )\n    return (\n      <select id={data.toParam}>\n        {options}\n      </select>\n    );\n  } else if (choice === \"slider\"){\n    return (\n      <SliderInput data={data} />\n    );\n  } else if (choice === \"checkboxinput\"){\n    return <Checkboxes data={data} />\n  } else {\n    return failed(\"failure\")\n  }\n}\n\nconst failed = (text) => <>{text}</>;\n"]},"metadata":{},"sourceType":"module"}