{"ast":null,"code":"//    abc_triplet_element.js: Definition of the TripletElem class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar sprintf = require('./sprintf');\n\nvar TripletElem;\n\n(function () {\n  \"use strict\";\n\n  TripletElem = function TripletElem(number, anchor1) {\n    this.anchor1 = anchor1; // must have a .x and a .parent property or be null (means starts at the \"beginning\" of the line - after key signature)\n\n    this.number = number;\n  };\n\n  TripletElem.prototype.isClosed = function () {\n    return this.anchor2;\n  };\n\n  TripletElem.prototype.setCloseAnchor = function (anchor2) {\n    this.anchor2 = anchor2; // TODO-PER: Unfortunately, I don't know if there is a beam above until after the vertical positioning is done,\n    // so I don't know whether to leave room for the number above. Therefore, If there is a beam on the first note, I'll leave room just in case.\n\n    if (this.anchor1.parent.beam) this.endingHeightAbove = 4;\n  };\n\n  TripletElem.prototype.setUpperAndLowerElements = function ()\n  /*positionY*/\n  {};\n\n  TripletElem.prototype.layout = function () {\n    // TODO end and beginning of line (PER: P.S. I'm not sure this can happen: I think the parser will always specify both the start and end points.)\n    if (this.anchor1 && this.anchor2) {\n      this.hasBeam = this.anchor1.parent.beam && this.anchor1.parent.beam === this.anchor2.parent.beam;\n\n      if (this.hasBeam) {\n        // If there is a beam then we don't need to draw anything except the text. The beam could either be above or below.\n        var beam = this.anchor1.parent.beam;\n        var left = beam.isAbove() ? this.anchor1.x + this.anchor1.w : this.anchor1.x;\n        this.yTextPos = beam.heightAtMidpoint(left, this.anchor2.x);\n        this.yTextPos += beam.isAbove() ? 4 : -4; // This creates some space between the beam and the number.\n\n        if (beam.isAbove()) this.endingHeightAbove = 4;\n      } else {\n        // If there isn't a beam, then we need to draw the bracket and the text. The bracket is always above.\n        // The bracket is never lower than the 'a' line, but is 4 pitches above the first and last notes. If there is\n        // a tall note in the middle, the bracket is horizontal and above the highest note.\n        this.startNote = Math.max(this.anchor1.parent.top, 9) + 4;\n        this.endNote = Math.max(this.anchor2.parent.top, 9) + 4; // TODO-PER: Do the case where the middle note is really high.\n\n        this.yTextPos = this.startNote + (this.endNote - this.startNote) / 2;\n      }\n    }\n  };\n\n  TripletElem.prototype.draw = function (renderer) {\n    var xTextPos;\n\n    if (this.hasBeam) {\n      var left = this.anchor1.parent.beam.isAbove() ? this.anchor1.x + this.anchor1.w : this.anchor1.x;\n      xTextPos = this.anchor1.parent.beam.xAtMidpoint(left, this.anchor2.x);\n    } else {\n      xTextPos = this.anchor1.x + (this.anchor2.x + this.anchor2.w - this.anchor1.x) / 2;\n      drawBracket(renderer, this.anchor1.x, this.startNote, this.anchor2.x + this.anchor2.w, this.endNote);\n    }\n\n    renderer.renderText(xTextPos, renderer.calcY(this.yTextPos), \"\" + this.number, 'tripletfont', \"triplet\", \"middle\", true);\n  };\n\n  function drawLine(renderer, l, t, r, b) {\n    var pathString = sprintf(\"M %f %f L %f %f\", l, t, r, b);\n    renderer.printPath({\n      path: pathString,\n      stroke: \"#000000\",\n      'class': renderer.addClasses('triplet')\n    });\n  }\n\n  function drawBracket(renderer, x1, y1, x2, y2) {\n    y1 = renderer.calcY(y1);\n    y2 = renderer.calcY(y2);\n    var bracketHeight = 5; // Draw vertical lines at the beginning and end\n\n    drawLine(renderer, x1, y1, x1, y1 + bracketHeight);\n    drawLine(renderer, x2, y2, x2, y2 + bracketHeight); // figure out midpoints to draw the broken line.\n\n    var midX = x1 + (x2 - x1) / 2; //var midY = y1 + (y2-y1)/2;\n\n    var gapWidth = 8;\n    var slope = (y2 - y1) / (x2 - x1);\n    var leftEndX = midX - gapWidth;\n    var leftEndY = y1 + (leftEndX - x1) * slope;\n    drawLine(renderer, x1, y1, leftEndX, leftEndY);\n    var rightStartX = midX + gapWidth;\n    var rightStartY = y1 + (rightStartX - x1) * slope;\n    drawLine(renderer, rightStartX, rightStartY, x2, y2);\n  }\n})();\n\nmodule.exports = TripletElem;","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/node_modules/abcjs/src/write/abc_triplet_element.js"],"names":["sprintf","require","TripletElem","number","anchor1","prototype","isClosed","anchor2","setCloseAnchor","parent","beam","endingHeightAbove","setUpperAndLowerElements","layout","hasBeam","left","isAbove","x","w","yTextPos","heightAtMidpoint","startNote","Math","max","top","endNote","draw","renderer","xTextPos","xAtMidpoint","drawBracket","renderText","calcY","drawLine","l","t","r","b","pathString","printPath","path","stroke","addClasses","x1","y1","x2","y2","bracketHeight","midX","gapWidth","slope","leftEndX","leftEndY","rightStartX","rightStartY","module","exports"],"mappings":"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","sourcesContent":["//    abc_triplet_element.js: Definition of the TripletElem class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar sprintf = require('./sprintf');\n\nvar TripletElem;\n\n(function() {\n\t\"use strict\";\n\n\tTripletElem = function TripletElem(number, anchor1) {\n\t\tthis.anchor1 = anchor1; // must have a .x and a .parent property or be null (means starts at the \"beginning\" of the line - after key signature)\n\t\tthis.number = number;\n\t};\n\n\tTripletElem.prototype.isClosed = function() {\n\t\treturn this.anchor2;\n\t};\n\n\tTripletElem.prototype.setCloseAnchor = function(anchor2) {\n\t\tthis.anchor2 = anchor2;\n\t\t// TODO-PER: Unfortunately, I don't know if there is a beam above until after the vertical positioning is done,\n\t\t// so I don't know whether to leave room for the number above. Therefore, If there is a beam on the first note, I'll leave room just in case.\n\t\tif (this.anchor1.parent.beam)\n\t\t\tthis.endingHeightAbove = 4;\n\t};\n\n\tTripletElem.prototype.setUpperAndLowerElements = function(/*positionY*/) {\n\t};\n\n\tTripletElem.prototype.layout = function() {\n\t\t// TODO end and beginning of line (PER: P.S. I'm not sure this can happen: I think the parser will always specify both the start and end points.)\n\t\tif (this.anchor1 && this.anchor2) {\n\t\t\tthis.hasBeam = this.anchor1.parent.beam && this.anchor1.parent.beam === this.anchor2.parent.beam;\n\n\t\t\tif (this.hasBeam) {\n\t\t\t\t// If there is a beam then we don't need to draw anything except the text. The beam could either be above or below.\n\t\t\t\tvar beam = this.anchor1.parent.beam;\n\t\t\t\tvar left = beam.isAbove() ? this.anchor1.x + this.anchor1.w : this.anchor1.x;\n\t\t\t\tthis.yTextPos = beam.heightAtMidpoint(left,  this.anchor2.x);\n\t\t\t\tthis.yTextPos += beam.isAbove() ? 4 : -4; // This creates some space between the beam and the number.\n\t\t\t\tif (beam.isAbove())\n\t\t\t\t\tthis.endingHeightAbove = 4;\n\t\t\t} else {\n\t\t\t\t// If there isn't a beam, then we need to draw the bracket and the text. The bracket is always above.\n\t\t\t\t// The bracket is never lower than the 'a' line, but is 4 pitches above the first and last notes. If there is\n\t\t\t\t// a tall note in the middle, the bracket is horizontal and above the highest note.\n\t\t\t\tthis.startNote = Math.max(this.anchor1.parent.top, 9) + 4;\n\t\t\t\tthis.endNote = Math.max(this.anchor2.parent.top, 9) + 4;\n\t\t\t\t// TODO-PER: Do the case where the middle note is really high.\n\t\t\t\tthis.yTextPos = this.startNote + (this.endNote - this.startNote) / 2;\n\t\t\t}\n\n\t\t}\n\t};\n\n\tTripletElem.prototype.draw = function(renderer) {\n\t\tvar xTextPos;\n\t\tif (this.hasBeam) {\n\t\t\tvar left = this.anchor1.parent.beam.isAbove() ? this.anchor1.x + this.anchor1.w : this.anchor1.x;\n\t\t\txTextPos = this.anchor1.parent.beam.xAtMidpoint(left, this.anchor2.x);\n\t\t} else {\n\t\t\txTextPos = this.anchor1.x + (this.anchor2.x + this.anchor2.w - this.anchor1.x) / 2;\n\t\t\tdrawBracket(renderer, this.anchor1.x, this.startNote, this.anchor2.x + this.anchor2.w, this.endNote);\n\t\t}\n\t\trenderer.renderText(xTextPos, renderer.calcY(this.yTextPos), \"\" + this.number, 'tripletfont', \"triplet\", \"middle\", true);\n\t};\n\n\tfunction drawLine(renderer, l, t, r, b) {\n\t\tvar pathString = sprintf(\"M %f %f L %f %f\",\n\t\t\tl, t, r, b);\n\t\trenderer.printPath({path: pathString, stroke: \"#000000\", 'class': renderer.addClasses('triplet')});\n\t}\n\n\tfunction drawBracket(renderer, x1, y1, x2, y2) {\n\t\ty1 = renderer.calcY(y1);\n\t\ty2 = renderer.calcY(y2);\n\t\tvar bracketHeight = 5;\n\n\t\t// Draw vertical lines at the beginning and end\n\t\tdrawLine(renderer, x1, y1, x1, y1 + bracketHeight);\n\t\tdrawLine(renderer, x2, y2, x2, y2 + bracketHeight);\n\n\t\t// figure out midpoints to draw the broken line.\n\t\tvar midX = x1 + (x2-x1)/2;\n\t\t//var midY = y1 + (y2-y1)/2;\n\t\tvar gapWidth = 8;\n\t\tvar slope = (y2 - y1) / (x2 - x1);\n\t\tvar leftEndX = midX - gapWidth;\n\t\tvar leftEndY = y1 + (leftEndX - x1) * slope;\n\t\tdrawLine(renderer, x1, y1, leftEndX, leftEndY);\n\t\tvar rightStartX = midX + gapWidth;\n\t\tvar rightStartY = y1 + (rightStartX - x1) * slope;\n\t\tdrawLine(renderer, rightStartX, rightStartY, x2, y2);\n\t}\n})();\n\nmodule.exports = TripletElem;\n"]},"metadata":{},"sourceType":"script"}