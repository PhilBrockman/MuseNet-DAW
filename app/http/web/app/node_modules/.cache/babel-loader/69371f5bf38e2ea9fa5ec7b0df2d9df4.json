{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/Selection/OptionList.js\";\nimport { options } from \"Selection/MuseNetOptions\";\nimport { InputSelector } from \"Selection/Inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ParentOptions = props => {\n  let enc = props.parent ? props.parent.enc : \"\";\n  let pid = props.parent ? props.parent[\"_id\"][\"$oid\"] : \"\";\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Parent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      id: \"parentEnc\",\n      value: enc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      id: \"parentId\",\n      value: pid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), \"parent: \", pid]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ParentOptions;\nexport const OptionList = props => {\n  const unwrap = arr => {\n    return arr.map(child => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [child.title, /*#__PURE__*/_jsxDEV(InputSelector, {\n          data: child,\n          parent: props.parent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, child.toParam, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  let mappedOptions = options.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), unwrap(item.children)]\n    }, item.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Parent Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.createGeneration(),\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParentOptions, {\n      parent: props.parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), mappedOptions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c2 = OptionList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ParentOptions\");\n$RefreshReg$(_c2, \"OptionList\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/Selection/OptionList.js"],"names":["options","InputSelector","ParentOptions","props","enc","parent","pid","OptionList","unwrap","arr","map","child","title","toParam","mappedOptions","item","children","createGeneration"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,0BAAtB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,MAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAAN,CAAaD,GAA5B,GAAkC,EAA5C;AACA,MAAIE,GAAG,GAAGH,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAAN,CAAa,KAAb,EAAoB,MAApB,CAAf,GAA6C,EAAvD;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,KAAK,EAAED;AAHT;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,KAAK,EAAEE;AAHT;AAAA;AAAA;AAAA;AAAA,YANF,cAUWA,GAVX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlBD;;KAAMJ,a;AAoBN,OAAO,MAAMK,UAAU,GAAIJ,KAAD,IAAW;AACnC,QAAMK,MAAM,GAAIC,GAAD,IAAS;AACtB,WAAOA,GAAG,CAACC,GAAJ,CAAQC,KAAK,IAAI;AACtB,0BACA;AAAA,mBACGA,KAAK,CAACC,KADT,eAEE,QAAC,aAAD;AAAe,UAAA,IAAI,EAAED,KAArB;AAA4B,UAAA,MAAM,EAAER,KAAK,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUM,KAAK,CAACE,OAAhB;AAAA;AAAA;AAAA;AAAA,cADA;AAKD,KANM,CAAP;AAOD,GARD;;AAUA,MAAIC,aAAa,GAAGd,OAAO,CAACU,GAAR,CAAYK,IAAI,IAAI;AACtC,wBACA;AAAA,8BACE;AAAA,kBAASA,IAAI,CAACH;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,EAEGJ,MAAM,CAACO,IAAI,CAACC,QAAN,CAFT;AAAA,OAAeD,IAAI,CAACH,KAApB;AAAA;AAAA;AAAA;AAAA,YADA;AAKD,GANmB,CAApB;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMT,KAAK,CAACc,gBAAN,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEd,KAAK,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGS,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3BM;MAAMP,U","sourcesContent":["import {options} from \"Selection/MuseNetOptions\"\nimport {InputSelector} from \"Selection/Inputs\"\n\nconst ParentOptions = (props) => {\n  let enc = props.parent ? props.parent.enc : \"\";\n  let pid = props.parent ? props.parent[\"_id\"][\"$oid\"] : \"\";\n\n  return (\n    <fieldset>\n      <legend>Parent</legend>\n      <input\n        type=\"hidden\"\n        id=\"parentEnc\"\n        value={enc}/>\n      <input\n        type=\"hidden\"\n        id=\"parentId\"\n        value={pid}/>\n      parent: {pid}\n    </fieldset>\n  );\n}\n\nexport const OptionList = (props) => {\n  const unwrap = (arr) => {\n    return arr.map(child => {\n      return (\n      <div key={child.toParam}>\n        {child.title}\n        <InputSelector data={child} parent={props.parent}/>\n      </div>);\n    })\n  }\n\n  let mappedOptions = options.map(item => {\n    return(\n    <fieldset key={item.title}>\n      <legend>{item.title}</legend>\n      {unwrap(item.children)}\n    </fieldset>)\n  })\n\n  return (\n    <fieldset>\n      <legend>Parent Options</legend>\n      <button onClick={() => props.createGeneration()}>create</button>\n      <ParentOptions parent={props.parent} />\n      {mappedOptions}\n    </fieldset>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}