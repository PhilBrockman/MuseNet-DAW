{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport APIClient from './apiClient';\nimport React from 'react';\nimport { options } from \"Selection/MuseNetOptions\";\nimport { InputSelector } from \"Selection/Inputs\";\nimport usePromise from \"usePromise\";\nimport { Midi } from '@tonejs/midi';\nimport * as Tone from 'tone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  _s();\n\n  const [generations, setGenerations] = React.useState(null);\n  const [parentData, setParentData] = React.useState(null);\n\n  const fetchParentData = async parentId => {\n    console.log(\"updating parent data\");\n    let data = await api.getGeneration(parentId);\n    setParentData(data.data);\n  };\n\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  };\n\n  const deleteGeneration = id => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    });\n  };\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const selectedOptions = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {};\n      selectedOptions.forEach(item => {\n        updatedSettings[item.id] = item.type === \"checkbox\" ? item.checked : item.value;\n      });\n      updatedSettings.parent_enc = document.getElementById(\"parentEnc\").value;\n      updatedSettings.parent_id = document.getElementById(\"parentId\").value;\n      return updatedSettings;\n    };\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData();\n    });\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Generations, {\n      generations: generations,\n      deleteGeneration: deleteGeneration,\n      setParentData: fetchParentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionList, {\n      options: options,\n      createGeneration: createGeneration,\n      parent: parentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+nI0BwLRicVMKhAaX65lGwC/AHA=\");\n\n_c = App;\n\nconst ParentOptions = props => {\n  let enc = props.parent ? props.parent.enc : \"\";\n  let pid = props.parent ? props.parent[\"_id\"][\"$oid\"] : \"\";\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Parent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      id: \"parentEnc\",\n      value: enc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      id: \"parentId\",\n      value: pid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), \"parent: \", pid]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ParentOptions;\n\nconst OptionList = props => {\n  const unwrap = arr => {\n    return arr.map(child => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [child.title, /*#__PURE__*/_jsxDEV(InputSelector, {\n          data: child,\n          parent: props.parent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, child.toParam, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  let options = props.options.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), unwrap(item.children)]\n    }, item.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Parent Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.createGeneration(),\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParentOptions, {\n      parent: props.parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), options]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = OptionList;\n\nconst loadMidi = (item, overwrite) => {\n  return api.getMediaForGeneration(item, overwrite);\n};\n\nconst MIDIPlayer = props => {\n  _s2();\n\n  let p = api.BASE_URI + \"/midifiles/\" + props.filename;\n  const [currentMidi, error, state] = usePromise(Midi.fromUrl(p));\n  const [playing, setPlaying] = React.useState(false);\n  const synths = [];\n\n  const play = e => {\n    setPlaying(!playing, () => {\n      console.log(playing);\n    });\n\n    if (playing && currentMidi) {\n      const now = Tone.now() + 0.5;\n      currentMidi.tracks.forEach(track => {\n        //create a synth for each track\n        const synth = new Tone.PolySynth(Tone.Synth, {\n          envelope: {\n            attack: 0.02,\n            decay: 0.1,\n            sustain: 0.3,\n            release: 1\n          }\n        }).toDestination();\n        synths.push(synth); //schedule all of the events\n\n        track.notes.forEach(note => {\n          if (note.duration > 0) {\n            synth.triggerAttackRelease(note.name, note.duration, note.time + now, note.velocity);\n          }\n        });\n      });\n    } else {\n      //dispose the synth and make a new one\n      while (synths.length) {\n        const synth = synths.shift();\n        synth.disconnect();\n      }\n    }\n  };\n\n  return currentMidi ? /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: e => play(e),\n    children: \"Play\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 24\n  }, this) : \"loading\";\n};\n\n_s2(MIDIPlayer, \"WDm3q3HGcsps15G4Rhm66u6Eu3w=\", false, function () {\n  return [usePromise];\n});\n\n_c4 = MIDIPlayer;\n\nconst MIDI = props => {\n  _s3();\n\n  const [result, error, state] = usePromise(loadMidi(props.item, false));\n\n  if (result) {\n    if (result.data[0]) {\n      return /*#__PURE__*/_jsxDEV(MIDIPlayer, {\n        filename: result.data[0].midi_location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"loading...\"\n      }, void 0, false);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"uh oh...\"\n    }, void 0, false);\n  }\n};\n\n_s3(MIDI, \"xXO6QFaTVG2MMm19EpaJFBvZBZo=\", false, function () {\n  return [usePromise];\n});\n\n_c5 = MIDI;\n\nconst Generations = props => {\n  return !props.generations || props.generations.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [item.composer, \" | \", item.parent_id, \" | \", /*#__PURE__*/_jsxDEV(MIDI, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.setParentData(item[\"_id\"][\"$oid\"]),\n        children: \"parent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteGeneration(item[\"_id\"][\"$oid\"]),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => api.downloadMIDI(item),\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  });\n};\n\n_c6 = Generations;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ParentOptions\");\n$RefreshReg$(_c3, \"OptionList\");\n$RefreshReg$(_c4, \"MIDIPlayer\");\n$RefreshReg$(_c5, \"MIDI\");\n$RefreshReg$(_c6, \"Generations\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js"],"names":["APIClient","React","options","InputSelector","usePromise","Midi","Tone","api","App","generations","setGenerations","useState","parentData","setParentData","fetchParentData","parentId","console","log","data","getGeneration","fetchData","result","deleteGeneration","id","then","r","createGeneration","prepSelections","selectedOptions","document","querySelectorAll","updatedSettings","forEach","item","type","checked","value","parent_enc","getElementById","parent_id","useEffect","ParentOptions","props","enc","parent","pid","OptionList","unwrap","arr","map","child","title","toParam","children","loadMidi","overwrite","getMediaForGeneration","MIDIPlayer","p","BASE_URI","filename","currentMidi","error","state","fromUrl","playing","setPlaying","synths","play","e","now","tracks","track","synth","PolySynth","Synth","envelope","attack","decay","sustain","release","toDestination","push","notes","note","duration","triggerAttackRelease","name","time","velocity","length","shift","disconnect","MIDI","midi_location","Generations","index","composer","downloadMIDI"],"mappings":"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","sourcesContent":["import APIClient from './apiClient'\nimport React from 'react'\nimport {options} from \"Selection/MuseNetOptions\"\nimport {InputSelector} from \"Selection/Inputs\"\nimport usePromise from \"usePromise\"\nimport { Midi } from '@tonejs/midi'\nimport * as Tone from 'tone'\n\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  const [generations, setGenerations] = React.useState(null)\n  const [parentData, setParentData] = React.useState(null)\n\n  const fetchParentData = async (parentId) => {\n    console.log(\"updating parent data\")\n    let data = await api.getGeneration(parentId)\n    setParentData(data.data);\n  }\n\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  }\n\n  const deleteGeneration = (id) => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    })\n  }\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const selectedOptions = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {}\n      selectedOptions.forEach(item => {\n        updatedSettings[item.id] = item.type===\"checkbox\"\n                                      ? item.checked\n                                      : item.value\n      })\n      updatedSettings.parent_enc = document.getElementById(\"parentEnc\").value\n      updatedSettings.parent_id = document.getElementById(\"parentId\").value\n      return updatedSettings;\n    }\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData()\n    });\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Generations\n        generations={generations}\n        deleteGeneration={deleteGeneration}\n        setParentData={fetchParentData}\n        />\n      <OptionList\n        options={options}\n        createGeneration={createGeneration}\n        parent={parentData}\n        />\n    </div>\n  );\n}\n\nconst ParentOptions = (props) => {\n  let enc = props.parent ? props.parent.enc : \"\";\n  let pid = props.parent ? props.parent[\"_id\"][\"$oid\"] : \"\";\n\n  return (\n    <fieldset>\n      <legend>Parent</legend>\n      <input\n        type=\"hidden\"\n        id=\"parentEnc\"\n        value={enc}/>\n      <input\n        type=\"hidden\"\n        id=\"parentId\"\n        value={pid}/>\n      parent: {pid}\n    </fieldset>\n  );\n}\n\nconst OptionList = (props) => {\n  const unwrap = (arr) => {\n    return arr.map(child => {\n      return (\n      <div key={child.toParam}>\n        {child.title}\n        <InputSelector data={child} parent={props.parent}/>\n      </div>);\n    })\n  }\n\n  let options = props.options.map(item => {\n    return(\n    <fieldset key={item.title}>\n      <legend>{item.title}</legend>\n      {unwrap(item.children)}\n    </fieldset>)\n  })\n\n  return (\n    <fieldset>\n      <legend>Parent Options</legend>\n      <button onClick={() => props.createGeneration()}>create</button>\n      <ParentOptions parent={props.parent} />\n      {options}\n    </fieldset>\n  );\n}\n\nconst loadMidi = (item, overwrite) => {\n  return api.getMediaForGeneration(item, overwrite)\n}\n\nconst MIDIPlayer = (props) => {\n  let p = api.BASE_URI + \"/midifiles/\"+props.filename\n  const [currentMidi, error, state] = usePromise(Midi.fromUrl(p))\n  const [playing, setPlaying] = React.useState(false)\n  const synths = [];\n  const play = (e) => {\n    setPlaying(!playing, () => {console.log(playing)})\n\n\t\t\t\t\tif (playing && currentMidi) {\n\t\t\t\t\t\tconst now = Tone.now() + 0.5;\n\t\t\t\t\t\tcurrentMidi.tracks.forEach((track) => {\n\t\t\t\t\t\t\t//create a synth for each track\n\t\t\t\t\t\t\tconst synth = new Tone.PolySynth(Tone.Synth, {\n\t\t\t\t\t\t\t\tenvelope: {\n\t\t\t\t\t\t\t\t\tattack: 0.02,\n\t\t\t\t\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\t\t\t\t\tsustain: 0.3,\n\t\t\t\t\t\t\t\t\trelease: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}).toDestination();\n\t\t\t\t\t\t\tsynths.push(synth);\n\t\t\t\t\t\t\t//schedule all of the events\n\t\t\t\t\t\t\ttrack.notes.forEach((note) => {\n                if(note.duration > 0){\n  \t\t\t\t\t\t\t\tsynth.triggerAttackRelease(\n  \t\t\t\t\t\t\t\t\tnote.name,\n  \t\t\t\t\t\t\t\t\tnote.duration,\n  \t\t\t\t\t\t\t\t\tnote.time + now,\n  \t\t\t\t\t\t\t\t\tnote.velocity\n  \t\t\t\t\t\t\t\t);\n                  }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//dispose the synth and make a new one\n\t\t\t\t\t\twhile (synths.length) {\n\t\t\t\t\t\t\tconst synth = synths.shift();\n\t\t\t\t\t\t\tsynth.disconnect();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n  }\n  return currentMidi ? <button onClick={(e) => play(e)}>Play</button> : \"loading\"\n}\n\nconst MIDI = (props) => {\n  const [result, error, state] = usePromise(loadMidi(props.item, false))\n  if(result){\n    if(result.data[0]){\n      return <MIDIPlayer filename={result.data[0].midi_location} />\n    } else {\n      return <>loading...</>\n    }\n  } else {\n    return <>uh oh...</>\n  }\n}\n\nconst Generations = (props) => {\n  return !props.generations || props.generations.map((item, index) => {\n    return (\n      <div key={index}>\n        {item.composer} | {item.parent_id} | <MIDI item={item} />\n        <button onClick={() => props.setParentData(item[\"_id\"][\"$oid\"])}>parent</button>\n        <button onClick={() => props.deleteGeneration(item[\"_id\"][\"$oid\"])}>X</button>\n        <button onClick={() => api.downloadMIDI(item)}>Download</button>\n      </div>);\n  })\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}