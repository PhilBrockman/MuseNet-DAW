{"ast":null,"code":"//    abc_beam_element.js: Definition of the BeamElem class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar AbsoluteElement = require('./abc_absolute_element');\n\nvar RelativeElement = require('./abc_relative_element');\n\nvar spacing = require('./abc_spacing');\n\nvar getDurlog = function (duration) {\n  // TODO-PER: This is a hack to prevent a Chrome lockup. Duration should have been defined already,\n  // but there's definitely a case where it isn't. [Probably something to do with triplets.]\n  if (duration === undefined) {\n    return 0;\n  } //        console.log(\"getDurlog: \" + duration);\n\n\n  return Math.floor(Math.log(duration) / Math.log(2));\n}; // Most elements on the page are related to a particular absolute element -- notes, rests, bars, etc. Beams, however, span multiple elements.\n// This means that beams can't be laid out until the absolute elements are placed. There is the further complication that the stems for beamed\n// notes can't be laid out until the beams are because we don't know how long they will be until we know the slope of the beam and the horizontal\n// spacing of the absolute elements.\n//\n// So, when a beam is detected, a BeamElem is created, then all notes belonging to that beam are added to it. These notes are not given stems at that time.\n// Then, after the horizontal layout is complete, all of the BeamElem are iterated to set the beam position, then all of the notes that are beamed are given\n// stems. After that, we are ready for the drawing step.\n// There are three phases: the setup phase, when new elements are being discovered, the layout phase, when everything is calculated, and the drawing phase,\n// when the object is not changed, but is used to put the elements on the page.\n\n\nvar BeamElem;\n\n(function () {\n  \"use strict\"; //\n  // Setup phase\n  //\n\n  BeamElem = function BeamElem(stemHeight, type, flat) {\n    // type is \"grace\", \"up\", \"down\", or undefined. flat is used to force flat beams, as it commonly found in the grace notes of bagpipe music.\n    this.isflat = flat;\n    this.isgrace = type && type === \"grace\";\n    this.forceup = this.isgrace || type && type === \"up\";\n    this.forcedown = type && type === \"down\";\n    this.elems = []; // all the AbsoluteElements that this beam touches. It may include embedded rests.\n\n    this.total = 0;\n    this.allrests = true;\n    this.stemHeight = stemHeight;\n    this.beams = []; // During the layout phase, this will become a list of the beams that need to be drawn.\n  };\n\n  BeamElem.prototype.setHint = function () {\n    this.hint = true;\n  };\n\n  BeamElem.prototype.add = function (abselem) {\n    var pitch = abselem.abcelem.averagepitch;\n    if (pitch === undefined) return; // don't include elements like spacers in beams\n\n    this.allrests = this.allrests && abselem.abcelem.rest;\n    abselem.beam = this;\n    this.elems.push(abselem); //var pitch = abselem.abcelem.averagepitch;\n\n    this.total += pitch; // TODO CHORD (get pitches from abselem.heads)\n\n    if (!this.min || abselem.abcelem.minpitch < this.min) {\n      this.min = abselem.abcelem.minpitch;\n    }\n\n    if (!this.max || abselem.abcelem.maxpitch > this.max) {\n      this.max = abselem.abcelem.maxpitch;\n    }\n  };\n\n  var middleLine = 6; // hardcoded 6 is B\n\n  BeamElem.prototype.calcDir = function () {\n    if (this.forceup) return true;\n    if (this.forcedown) return false;\n    var average = calcAverage(this.total, this.elems.length);\n    return average < middleLine;\n  }; //\n  // layout phase\n  //\n\n\n  BeamElem.prototype.layout = function () {\n    if (this.elems.length === 0 || this.allrests) return;\n    this.stemsUp = this.calcDir(); // True means the stems are facing up.\n\n    var dy = calcDy(this.stemsUp, this.isgrace); // This is the width of the beam line.\n    // create the main beam\n\n    var firstElement = this.elems[0];\n    var lastElement = this.elems[this.elems.length - 1];\n    var minStemHeight = 0; // The following is to leave space for \"!///!\" marks.\n\n    var referencePitch = this.stemsUp ? firstElement.abcelem.maxpitch : firstElement.abcelem.minpitch;\n    minStemHeight = minStem(firstElement, this.stemsUp, referencePitch, minStemHeight);\n    minStemHeight = minStem(lastElement, this.stemsUp, referencePitch, minStemHeight);\n    minStemHeight = Math.max(this.stemHeight, minStemHeight + 3); // TODO-PER: The 3 is the width of a 16th beam. The actual height of the beam should be used instead.\n\n    var yPos = calcYPos(this.total, this.elems.length, minStemHeight, this.stemsUp, firstElement.abcelem.averagepitch, lastElement.abcelem.averagepitch, this.isflat, this.min, this.max, this.isgrace);\n    var xPos = calcXPos(this.stemsUp, firstElement, lastElement);\n    this.beams.push({\n      startX: xPos[0],\n      endX: xPos[1],\n      startY: yPos[0],\n      endY: yPos[1],\n      dy: dy\n    }); // create the rest of the beams (in the case of 1/16th notes, etc.\n\n    var beams = createAdditionalBeams(this.elems, this.stemsUp, this.beams[0], this.isgrace, dy);\n\n    for (var i = 0; i < beams.length; i++) this.beams.push(beams[i]); // Now that the main beam is defined, we know how tall the stems should be, so create them and attach them to the original notes.\n\n\n    createStems(this.elems, this.stemsUp, this.beams[0], dy, this.mainNote);\n  };\n\n  BeamElem.prototype.isAbove = function () {\n    return this.stemsUp;\n  }; // We can't just use the entire beam for the calculation. The range has to be passed in, because the beam might extend into some unrelated notes. for instance, (3_a'f'e'f'2 when L:16\n\n\n  BeamElem.prototype.heightAtMidpoint = function (startX, endX) {\n    if (this.beams.length === 0) return 0;\n    var beam = this.beams[0];\n    var midPoint = startX + (endX - startX) / 2;\n    return getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, midPoint);\n  };\n\n  BeamElem.prototype.yAtNote = function (element) {\n    var beam = this.beams[0];\n    return getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, element.x);\n  };\n\n  BeamElem.prototype.xAtMidpoint = function (startX, endX) {\n    return startX + (endX - startX) / 2;\n  }; //\n  // Drawing phase\n  //\n\n\n  BeamElem.prototype.draw = function (renderer) {\n    if (this.beams.length === 0) return;\n    renderer.beginGroup();\n\n    for (var i = 0; i < this.beams.length; i++) {\n      var beam = this.beams[i];\n      drawBeam(renderer, beam.startX, beam.startY, beam.endX, beam.endY, beam.dy, this.hint);\n    }\n\n    renderer.endGroup('beam-elem');\n  }; //\n  // private functions\n  //\n\n\n  function minStem(element, stemsUp, referencePitch, minStemHeight) {\n    if (!element.children) return minStemHeight;\n\n    for (var i = 0; i < element.children.length; i++) {\n      var elem = element.children[i];\n      if (stemsUp && elem.top !== undefined && elem.c === \"flags.ugrace\") minStemHeight = Math.max(minStemHeight, elem.top - referencePitch);else if (!stemsUp && elem.bottom !== undefined && elem.c === \"flags.ugrace\") minStemHeight = Math.max(minStemHeight, referencePitch - elem.bottom + 7); // The extra 7 is because we are measuring the slash from the top.\n    }\n\n    return minStemHeight;\n  }\n\n  function calcSlant(leftAveragePitch, rightAveragePitch, numStems, isFlat) {\n    if (isFlat) return 0;\n    var slant = leftAveragePitch - rightAveragePitch;\n    var maxSlant = numStems / 2;\n    if (slant > maxSlant) slant = maxSlant;\n    if (slant < -maxSlant) slant = -maxSlant;\n    return slant;\n  }\n\n  function calcAverage(total, numElements) {\n    if (!numElements) return 0;\n    return total / numElements;\n  }\n\n  function getBarYAt(startx, starty, endx, endy, x) {\n    return starty + (endy - starty) / (endx - startx) * (x - startx);\n  }\n\n  function calcDy(asc, isGrace) {\n    var dy = asc ? spacing.STEP : -spacing.STEP;\n    if (isGrace) dy = dy * 0.4;\n    return dy;\n  }\n\n  function drawBeam(renderer, startX, startY, endX, endY, dy, isHint) {\n    var klass = 'beam-elem';\n    if (isHint) klass += \" abcjs-hint\"; // the X coordinates are actual coordinates, but the Y coordinates are in pitches.\n\n    startY = renderer.calcY(startY);\n    endY = renderer.calcY(endY);\n    var pathString = \"M\" + startX + \" \" + startY + \" L\" + endX + \" \" + endY + \"L\" + endX + \" \" + (endY + dy) + \" L\" + startX + \" \" + (startY + dy) + \"z\";\n    renderer.printPath({\n      path: pathString,\n      stroke: \"none\",\n      fill: \"#000000\",\n      'class': renderer.addClasses(klass)\n    });\n  }\n\n  function calcXPos(asc, firstElement, lastElement) {\n    var starthead = firstElement.heads[asc ? 0 : firstElement.heads.length - 1];\n    var endhead = lastElement.heads[asc ? 0 : lastElement.heads.length - 1];\n    var startX = starthead.x;\n    if (asc) startX += starthead.w - 0.6;\n    var endX = endhead.x;\n    if (asc) endX += endhead.w;\n    return [startX, endX];\n  }\n\n  function calcYPos(total, numElements, stemHeight, asc, firstAveragePitch, lastAveragePitch, isFlat, minPitch, maxPitch, isGrace) {\n    var average = calcAverage(total, numElements); // This is the average pitch for the all the notes that will be beamed.\n\n    var barpos = stemHeight - 2; // (isGrace)? 5:7;\n\n    var barminpos = stemHeight - 2;\n    var pos = Math.round(asc ? Math.max(average + barpos, maxPitch + barminpos) : Math.min(average - barpos, minPitch - barminpos));\n    var slant = calcSlant(firstAveragePitch, lastAveragePitch, numElements, isFlat);\n    var startY = pos + Math.floor(slant / 2);\n    var endY = pos + Math.floor(-slant / 2); // If the notes are too high or too low, make the beam go down to the middle\n\n    if (!isGrace) {\n      if (asc && pos < 6) {\n        startY = 6;\n        endY = 6;\n      } else if (!asc && pos > 6) {\n        startY = 6;\n        endY = 6;\n      }\n    }\n\n    return [startY, endY];\n  }\n\n  function createStems(elems, asc, beam, dy, mainNote) {\n    for (var i = 0; i < elems.length; i++) {\n      var elem = elems[i];\n      if (elem.abcelem.rest) continue; // TODO-PER: This is odd. If it is a regular beam then elems is an array of AbsoluteElements, if it is a grace beam then it is an array of objects , so we directly attach the element to the parent. We tell it if is a grace note because they are passed in as a generic object instead of an AbsoluteElement.\n\n      var isGrace = elem.addExtra ? false : true;\n      var parent = isGrace ? mainNote : elem;\n      var furthestHead = elem.heads[asc ? 0 : elem.heads.length - 1];\n      var ovalDelta = 1 / 5; //(isGrace)?1/3:1/5;\n\n      var pitch = furthestHead.pitch + (asc ? ovalDelta : -ovalDelta);\n      var dx = asc ? furthestHead.w : 0; // down-pointing stems start on the left side of the note, up-pointing stems start on the right side, so we offset by the note width.\n\n      var x = furthestHead.x + dx; // this is now the actual x location in pixels.\n\n      var bary = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, x);\n      var lineWidth = asc ? -0.6 : 0.6;\n      if (!asc) bary -= dy / 2 / spacing.STEP; // TODO-PER: This is just a fudge factor so the down-pointing stems don't overlap.\n\n      if (isGrace) dx += elem.heads[0].dx; // TODO-PER-HACK: One type of note head has a different placement of the stem. This should be more generically calculated:\n\n      if (furthestHead.c === 'noteheads.slash.quarter') {\n        if (asc) pitch += 1;else pitch -= 1;\n      }\n\n      var stem = new RelativeElement(null, dx, 0, pitch, {\n        \"type\": \"stem\",\n        \"pitch2\": bary,\n        linewidth: lineWidth\n      });\n      stem.setX(parent.x); // This is after the x coordinates were set, so we have to set it directly.\n\n      parent.addExtra(stem);\n    }\n  }\n\n  function createAdditionalBeams(elems, asc, beam, isGrace, dy) {\n    var beams = [];\n    var auxBeams = []; // auxbeam will be {x, y, durlog, single} auxbeam[0] should match with durlog=-4 (16th) (j=-4-durlog)\n\n    for (var i = 0; i < elems.length; i++) {\n      var elem = elems[i];\n      if (elem.abcelem.rest) continue;\n      var furthestHead = elem.heads[asc ? 0 : elem.heads.length - 1];\n      var x = furthestHead.x + (asc ? furthestHead.w : 0);\n      var bary = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, x);\n      var sy = asc ? -1.5 : 1.5;\n      if (isGrace) sy = sy * 2 / 3; // This makes the second beam on grace notes closer to the first one.\n\n      var duration = elem.abcelem.duration; // get the duration via abcelem because of triplets\n\n      if (duration === 0) duration = 0.25; // if this is stemless, then we use quarter note as the duration.\n\n      for (var durlog = getDurlog(duration); durlog < -3; durlog++) {\n        if (auxBeams[-4 - durlog]) {\n          auxBeams[-4 - durlog].single = false;\n        } else {\n          auxBeams[-4 - durlog] = {\n            x: x + (asc ? -0.6 : 0),\n            y: bary + sy * (-4 - durlog + 1),\n            durlog: durlog,\n            single: true\n          };\n        }\n      }\n\n      for (var j = auxBeams.length - 1; j >= 0; j--) {\n        if (i === elems.length - 1 || getDurlog(elems[i + 1].abcelem.duration) > -j - 4) {\n          var auxBeamEndX = x;\n          var auxBeamEndY = bary + sy * (j + 1);\n\n          if (auxBeams[j].single) {\n            auxBeamEndX = i === 0 ? x + 5 : x - 5;\n            auxBeamEndY = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, auxBeamEndX) + sy * (j + 1);\n          }\n\n          beams.push({\n            startX: auxBeams[j].x,\n            endX: auxBeamEndX,\n            startY: auxBeams[j].y,\n            endY: auxBeamEndY,\n            dy: dy\n          });\n          auxBeams = auxBeams.slice(0, j);\n        }\n      }\n    }\n\n    return beams;\n  }\n})();\n\nmodule.exports = BeamElem;","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/node_modules/abcjs/src/write/abc_beam_element.js"],"names":["AbsoluteElement","require","RelativeElement","spacing","getDurlog","duration","undefined","Math","floor","log","BeamElem","stemHeight","type","flat","isflat","isgrace","forceup","forcedown","elems","total","allrests","beams","prototype","setHint","hint","add","abselem","pitch","abcelem","averagepitch","rest","beam","push","min","minpitch","max","maxpitch","middleLine","calcDir","average","calcAverage","length","layout","stemsUp","dy","calcDy","firstElement","lastElement","minStemHeight","referencePitch","minStem","yPos","calcYPos","xPos","calcXPos","startX","endX","startY","endY","createAdditionalBeams","i","createStems","mainNote","isAbove","heightAtMidpoint","midPoint","getBarYAt","yAtNote","element","x","xAtMidpoint","draw","renderer","beginGroup","drawBeam","endGroup","children","elem","top","c","bottom","calcSlant","leftAveragePitch","rightAveragePitch","numStems","isFlat","slant","maxSlant","numElements","startx","starty","endx","endy","asc","isGrace","STEP","isHint","klass","calcY","pathString","printPath","path","stroke","fill","addClasses","starthead","heads","endhead","w","firstAveragePitch","lastAveragePitch","minPitch","maxPitch","barpos","barminpos","pos","round","addExtra","parent","furthestHead","ovalDelta","dx","bary","lineWidth","stem","linewidth","setX","auxBeams","sy","durlog","single","y","j","auxBeamEndX","auxBeamEndY","slice","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,wBAAD,CAA7B;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,wBAAD,CAA7B;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIG,SAAS,GAAG,UAASC,QAAT,EAAmB;AAC3B;AACA;AACA,MAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AACpB,WAAO,CAAP;AACP,GAL0B,CAMnC;;;AACE,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASJ,QAAT,IAAmBE,IAAI,CAACE,GAAL,CAAS,CAAT,CAA9B,CAAP;AACD,CARD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,IAAIC,QAAJ;;AAEA,CAAC,YAAW;AACX,eADW,CAGX;AACA;AACA;;AACAA,EAAAA,QAAQ,GAAG,SAASA,QAAT,CAAkBC,UAAlB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AACpD;AACA,SAAKC,MAAL,GAAcD,IAAd;AACA,SAAKE,OAAL,GAAgBH,IAAI,IAAIA,IAAI,KAAK,OAAjC;AACA,SAAKI,OAAL,GAAe,KAAKD,OAAL,IAAiBH,IAAI,IAAIA,IAAI,KAAK,IAAjD;AACA,SAAKK,SAAL,GAAkBL,IAAI,IAAIA,IAAI,KAAK,MAAnC;AACA,SAAKM,KAAL,GAAa,EAAb,CANoD,CAMnC;;AACjB,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKT,UAAL,GAAkBA,UAAlB;AACA,SAAKU,KAAL,GAAa,EAAb,CAVoD,CAUnC;AACjB,GAXD;;AAaAX,EAAAA,QAAQ,CAACY,SAAT,CAAmBC,OAAnB,GAA6B,YAAY;AACxC,SAAKC,IAAL,GAAY,IAAZ;AACA,GAFD;;AAIAd,EAAAA,QAAQ,CAACY,SAAT,CAAmBG,GAAnB,GAAyB,UAASC,OAAT,EAAkB;AAC1C,QAAIC,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBC,YAA5B;AACA,QAAIF,KAAK,KAAKrB,SAAd,EAAyB,OAFiB,CAET;;AACjC,SAAKc,QAAL,GAAgB,KAAKA,QAAL,IAAiBM,OAAO,CAACE,OAAR,CAAgBE,IAAjD;AACAJ,IAAAA,OAAO,CAACK,IAAR,GAAe,IAAf;AACA,SAAKb,KAAL,CAAWc,IAAX,CAAgBN,OAAhB,EAL0C,CAM1C;;AACA,SAAKP,KAAL,IAAcQ,KAAd,CAP0C,CAOrB;;AACrB,QAAI,CAAC,KAAKM,GAAN,IAAaP,OAAO,CAACE,OAAR,CAAgBM,QAAhB,GAA2B,KAAKD,GAAjD,EAAsD;AACrD,WAAKA,GAAL,GAAWP,OAAO,CAACE,OAAR,CAAgBM,QAA3B;AACA;;AACD,QAAI,CAAC,KAAKC,GAAN,IAAaT,OAAO,CAACE,OAAR,CAAgBQ,QAAhB,GAA2B,KAAKD,GAAjD,EAAsD;AACrD,WAAKA,GAAL,GAAWT,OAAO,CAACE,OAAR,CAAgBQ,QAA3B;AACA;AACD,GAdD;;AAgBA,MAAIC,UAAU,GAAG,CAAjB,CAvCW,CAuCS;;AAEpB3B,EAAAA,QAAQ,CAACY,SAAT,CAAmBgB,OAAnB,GAA6B,YAAW;AACvC,QAAI,KAAKtB,OAAT,EAAkB,OAAO,IAAP;AAClB,QAAI,KAAKC,SAAT,EAAoB,OAAO,KAAP;AACpB,QAAIsB,OAAO,GAAGC,WAAW,CAAC,KAAKrB,KAAN,EAAa,KAAKD,KAAL,CAAWuB,MAAxB,CAAzB;AACA,WAAOF,OAAO,GAAGF,UAAjB;AACA,GALD,CAzCW,CAgDX;AACA;AACA;;;AACA3B,EAAAA,QAAQ,CAACY,SAAT,CAAmBoB,MAAnB,GAA4B,YAAW;AACtC,QAAI,KAAKxB,KAAL,CAAWuB,MAAX,KAAsB,CAAtB,IAA2B,KAAKrB,QAApC,EAA8C;AAE9C,SAAKuB,OAAL,GAAe,KAAKL,OAAL,EAAf,CAHsC,CAGP;;AAC/B,QAAIM,EAAE,GAAGC,MAAM,CAAC,KAAKF,OAAN,EAAe,KAAK5B,OAApB,CAAf,CAJsC,CAIO;AAE7C;;AACA,QAAI+B,YAAY,GAAG,KAAK5B,KAAL,CAAW,CAAX,CAAnB;AACA,QAAI6B,WAAW,GAAG,KAAK7B,KAAL,CAAW,KAAKA,KAAL,CAAWuB,MAAX,GAAoB,CAA/B,CAAlB;AACA,QAAIO,aAAa,GAAG,CAApB,CATsC,CASf;;AACvB,QAAIC,cAAc,GAAG,KAAKN,OAAL,GAAeG,YAAY,CAAClB,OAAb,CAAqBQ,QAApC,GAA+CU,YAAY,CAAClB,OAAb,CAAqBM,QAAzF;AACAc,IAAAA,aAAa,GAAGE,OAAO,CAACJ,YAAD,EAAe,KAAKH,OAApB,EAA6BM,cAA7B,EAA6CD,aAA7C,CAAvB;AACAA,IAAAA,aAAa,GAAGE,OAAO,CAACH,WAAD,EAAc,KAAKJ,OAAnB,EAA4BM,cAA5B,EAA4CD,aAA5C,CAAvB;AACAA,IAAAA,aAAa,GAAGzC,IAAI,CAAC4B,GAAL,CAAS,KAAKxB,UAAd,EAA0BqC,aAAa,GAAG,CAA1C,CAAhB,CAbsC,CAawB;;AAC9D,QAAIG,IAAI,GAAGC,QAAQ,CAAC,KAAKjC,KAAN,EAAa,KAAKD,KAAL,CAAWuB,MAAxB,EAAgCO,aAAhC,EAA+C,KAAKL,OAApD,EAA6DG,YAAY,CAAClB,OAAb,CAAqBC,YAAlF,EAAgGkB,WAAW,CAACnB,OAAZ,CAAoBC,YAApH,EAAkI,KAAKf,MAAvI,EAA+I,KAAKmB,GAApJ,EAAyJ,KAAKE,GAA9J,EAAmK,KAAKpB,OAAxK,CAAnB;AACA,QAAIsC,IAAI,GAAGC,QAAQ,CAAC,KAAKX,OAAN,EAAeG,YAAf,EAA6BC,WAA7B,CAAnB;AACA,SAAK1B,KAAL,CAAWW,IAAX,CAAgB;AAAEuB,MAAAA,MAAM,EAAEF,IAAI,CAAC,CAAD,CAAd;AAAmBG,MAAAA,IAAI,EAAEH,IAAI,CAAC,CAAD,CAA7B;AAAkCI,MAAAA,MAAM,EAAEN,IAAI,CAAC,CAAD,CAA9C;AAAmDO,MAAAA,IAAI,EAAEP,IAAI,CAAC,CAAD,CAA7D;AAAkEP,MAAAA,EAAE,EAAEA;AAAtE,KAAhB,EAhBsC,CAkBtC;;AACA,QAAIvB,KAAK,GAAGsC,qBAAqB,CAAC,KAAKzC,KAAN,EAAa,KAAKyB,OAAlB,EAA2B,KAAKtB,KAAL,CAAW,CAAX,CAA3B,EAA0C,KAAKN,OAA/C,EAAwD6B,EAAxD,CAAjC;;AACA,SAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvC,KAAK,CAACoB,MAA1B,EAAkCmB,CAAC,EAAnC,EACC,KAAKvC,KAAL,CAAWW,IAAX,CAAgBX,KAAK,CAACuC,CAAD,CAArB,EArBqC,CAuBtC;;;AACAC,IAAAA,WAAW,CAAC,KAAK3C,KAAN,EAAa,KAAKyB,OAAlB,EAA2B,KAAKtB,KAAL,CAAW,CAAX,CAA3B,EAA0CuB,EAA1C,EAA8C,KAAKkB,QAAnD,CAAX;AACA,GAzBD;;AA2BApD,EAAAA,QAAQ,CAACY,SAAT,CAAmByC,OAAnB,GAA6B,YAAW;AACvC,WAAO,KAAKpB,OAAZ;AACA,GAFD,CA9EW,CAkFX;;;AACAjC,EAAAA,QAAQ,CAACY,SAAT,CAAmB0C,gBAAnB,GAAsC,UAAST,MAAT,EAAiBC,IAAjB,EAAuB;AAC5D,QAAI,KAAKnC,KAAL,CAAWoB,MAAX,KAAsB,CAA1B,EACC,OAAO,CAAP;AACD,QAAIV,IAAI,GAAG,KAAKV,KAAL,CAAW,CAAX,CAAX;AACA,QAAI4C,QAAQ,GAAGV,MAAM,GAAG,CAACC,IAAI,GAAGD,MAAR,IAAkB,CAA1C;AACA,WAAOW,SAAS,CAACnC,IAAI,CAACwB,MAAN,EAAcxB,IAAI,CAAC0B,MAAnB,EAA2B1B,IAAI,CAACyB,IAAhC,EAAsCzB,IAAI,CAAC2B,IAA3C,EAAiDO,QAAjD,CAAhB;AACA,GAND;;AAQAvD,EAAAA,QAAQ,CAACY,SAAT,CAAmB6C,OAAnB,GAA6B,UAASC,OAAT,EAAkB;AAC9C,QAAIrC,IAAI,GAAG,KAAKV,KAAL,CAAW,CAAX,CAAX;AACA,WAAO6C,SAAS,CAACnC,IAAI,CAACwB,MAAN,EAAcxB,IAAI,CAAC0B,MAAnB,EAA2B1B,IAAI,CAACyB,IAAhC,EAAsCzB,IAAI,CAAC2B,IAA3C,EAAiDU,OAAO,CAACC,CAAzD,CAAhB;AACA,GAHD;;AAKA3D,EAAAA,QAAQ,CAACY,SAAT,CAAmBgD,WAAnB,GAAiC,UAASf,MAAT,EAAiBC,IAAjB,EAAuB;AACvD,WAAOD,MAAM,GAAG,CAACC,IAAI,GAAGD,MAAR,IAAgB,CAAhC;AACA,GAFD,CAhGW,CAoGX;AACA;AACA;;;AACA7C,EAAAA,QAAQ,CAACY,SAAT,CAAmBiD,IAAnB,GAA0B,UAASC,QAAT,EAAmB;AAC5C,QAAI,KAAKnD,KAAL,CAAWoB,MAAX,KAAsB,CAA1B,EAA6B;AAE7B+B,IAAAA,QAAQ,CAACC,UAAT;;AACA,SAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvC,KAAL,CAAWoB,MAA/B,EAAuCmB,CAAC,EAAxC,EAA4C;AAC3C,UAAI7B,IAAI,GAAG,KAAKV,KAAL,CAAWuC,CAAX,CAAX;AACAc,MAAAA,QAAQ,CAACF,QAAD,EAAWzC,IAAI,CAACwB,MAAhB,EAAwBxB,IAAI,CAAC0B,MAA7B,EAAqC1B,IAAI,CAACyB,IAA1C,EAAgDzB,IAAI,CAAC2B,IAArD,EAA2D3B,IAAI,CAACa,EAAhE,EAAoE,KAAKpB,IAAzE,CAAR;AACA;;AACDgD,IAAAA,QAAQ,CAACG,QAAT,CAAkB,WAAlB;AACA,GATD,CAvGW,CAkHX;AACA;AACA;;;AACA,WAASzB,OAAT,CAAiBkB,OAAjB,EAA0BzB,OAA1B,EAAmCM,cAAnC,EAAmDD,aAAnD,EAAkE;AACjE,QAAI,CAACoB,OAAO,CAACQ,QAAb,EACC,OAAO5B,aAAP;;AACD,SAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,OAAO,CAACQ,QAAR,CAAiBnC,MAArC,EAA6CmB,CAAC,EAA9C,EAAkD;AACjD,UAAIiB,IAAI,GAAGT,OAAO,CAACQ,QAAR,CAAiBhB,CAAjB,CAAX;AACA,UAAIjB,OAAO,IAAIkC,IAAI,CAACC,GAAL,KAAaxE,SAAxB,IAAqCuE,IAAI,CAACE,CAAL,KAAW,cAApD,EACC/B,aAAa,GAAGzC,IAAI,CAAC4B,GAAL,CAASa,aAAT,EAAwB6B,IAAI,CAACC,GAAL,GAAW7B,cAAnC,CAAhB,CADD,KAEK,IAAI,CAACN,OAAD,IAAYkC,IAAI,CAACG,MAAL,KAAgB1E,SAA5B,IAAyCuE,IAAI,CAACE,CAAL,KAAW,cAAxD,EACJ/B,aAAa,GAAGzC,IAAI,CAAC4B,GAAL,CAASa,aAAT,EAAwBC,cAAc,GAAG4B,IAAI,CAACG,MAAtB,GAA+B,CAAvD,CAAhB,CALgD,CAK2B;AAC5E;;AACD,WAAOhC,aAAP;AACA;;AAED,WAASiC,SAAT,CAAmBC,gBAAnB,EAAqCC,iBAArC,EAAwDC,QAAxD,EAAkEC,MAAlE,EAA0E;AACzE,QAAIA,MAAJ,EACC,OAAO,CAAP;AACD,QAAIC,KAAK,GAAGJ,gBAAgB,GAAGC,iBAA/B;AACA,QAAII,QAAQ,GAAGH,QAAQ,GAAG,CAA1B;AAEA,QAAIE,KAAK,GAAGC,QAAZ,EAAsBD,KAAK,GAAGC,QAAR;AACtB,QAAID,KAAK,GAAG,CAACC,QAAb,EAAuBD,KAAK,GAAG,CAACC,QAAT;AACvB,WAAOD,KAAP;AACA;;AAED,WAAS9C,WAAT,CAAqBrB,KAArB,EAA4BqE,WAA5B,EAAyC;AACxC,QAAI,CAACA,WAAL,EACC,OAAO,CAAP;AACD,WAAOrE,KAAK,GAAGqE,WAAf;AACA;;AAED,WAAStB,SAAT,CAAmBuB,MAAnB,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCC,IAAzC,EAA+CvB,CAA/C,EAAkD;AACjD,WAAOqB,MAAM,GAAG,CAACE,IAAI,GAAGF,MAAR,KAAmBC,IAAI,GAAGF,MAA1B,KAAqCpB,CAAC,GAAGoB,MAAzC,CAAhB;AACA;;AAED,WAAS5C,MAAT,CAAgBgD,GAAhB,EAAqBC,OAArB,EAA8B;AAC7B,QAAIlD,EAAE,GAAIiD,GAAD,GAAQ1F,OAAO,CAAC4F,IAAhB,GAAuB,CAAC5F,OAAO,CAAC4F,IAAzC;AACA,QAAID,OAAJ,EAAalD,EAAE,GAAGA,EAAE,GAAG,GAAV;AACb,WAAOA,EAAP;AACA;;AAED,WAAS8B,QAAT,CAAkBF,QAAlB,EAA4BjB,MAA5B,EAAoCE,MAApC,EAA4CD,IAA5C,EAAkDE,IAAlD,EAAwDd,EAAxD,EAA4DoD,MAA5D,EAAoE;AACnE,QAAIC,KAAK,GAAG,WAAZ;AACA,QAAID,MAAJ,EACCC,KAAK,IAAI,aAAT,CAHkE,CAKnE;;AACAxC,IAAAA,MAAM,GAAGe,QAAQ,CAAC0B,KAAT,CAAezC,MAAf,CAAT;AACAC,IAAAA,IAAI,GAAGc,QAAQ,CAAC0B,KAAT,CAAexC,IAAf,CAAP;AACA,QAAIyC,UAAU,GAAG,MAAM5C,MAAN,GAAe,GAAf,GAAqBE,MAArB,GAA8B,IAA9B,GAAqCD,IAArC,GAA4C,GAA5C,GAAkDE,IAAlD,GAChB,GADgB,GACVF,IADU,GACH,GADG,IACIE,IAAI,GAAGd,EADX,IACiB,IADjB,GACwBW,MADxB,GACiC,GADjC,IACwCE,MAAM,GAAGb,EADjD,IACuD,GADxE;AAEA4B,IAAAA,QAAQ,CAAC4B,SAAT,CAAmB;AAClBC,MAAAA,IAAI,EAAEF,UADY;AAElBG,MAAAA,MAAM,EAAE,MAFU;AAGlBC,MAAAA,IAAI,EAAE,SAHY;AAIlB,eAAS/B,QAAQ,CAACgC,UAAT,CAAoBP,KAApB;AAJS,KAAnB;AAMA;;AAED,WAAS3C,QAAT,CAAkBuC,GAAlB,EAAuB/C,YAAvB,EAAqCC,WAArC,EAAkD;AACjD,QAAI0D,SAAS,GAAG3D,YAAY,CAAC4D,KAAb,CAAmBb,GAAG,GAAG,CAAH,GAAO/C,YAAY,CAAC4D,KAAb,CAAmBjE,MAAnB,GAA4B,CAAzD,CAAhB;AACA,QAAIkE,OAAO,GAAG5D,WAAW,CAAC2D,KAAZ,CAAkBb,GAAG,GAAG,CAAH,GAAO9C,WAAW,CAAC2D,KAAZ,CAAkBjE,MAAlB,GAA2B,CAAvD,CAAd;AACA,QAAIc,MAAM,GAAGkD,SAAS,CAACpC,CAAvB;AACA,QAAIwB,GAAJ,EAAStC,MAAM,IAAIkD,SAAS,CAACG,CAAV,GAAc,GAAxB;AACT,QAAIpD,IAAI,GAAGmD,OAAO,CAACtC,CAAnB;AACA,QAAIwB,GAAJ,EAASrC,IAAI,IAAImD,OAAO,CAACC,CAAhB;AACT,WAAO,CAAErD,MAAF,EAAUC,IAAV,CAAP;AACA;;AAED,WAASJ,QAAT,CAAkBjC,KAAlB,EAAyBqE,WAAzB,EAAsC7E,UAAtC,EAAkDkF,GAAlD,EAAuDgB,iBAAvD,EAA0EC,gBAA1E,EAA4FzB,MAA5F,EAAoG0B,QAApG,EAA8GC,QAA9G,EAAwHlB,OAAxH,EAAiI;AAChI,QAAIvD,OAAO,GAAGC,WAAW,CAACrB,KAAD,EAAQqE,WAAR,CAAzB,CADgI,CACjF;;AAC/C,QAAIyB,MAAM,GAAGtG,UAAU,GAAG,CAA1B,CAFgI,CAEnG;;AAC7B,QAAIuG,SAAS,GAAGvG,UAAU,GAAG,CAA7B;AACA,QAAIwG,GAAG,GAAG5G,IAAI,CAAC6G,KAAL,CAAWvB,GAAG,GAAGtF,IAAI,CAAC4B,GAAL,CAASI,OAAO,GAAG0E,MAAnB,EAA2BD,QAAQ,GAAGE,SAAtC,CAAH,GAAsD3G,IAAI,CAAC0B,GAAL,CAASM,OAAO,GAAG0E,MAAnB,EAA2BF,QAAQ,GAAGG,SAAtC,CAApE,CAAV;AAEA,QAAI5B,KAAK,GAAGL,SAAS,CAAC4B,iBAAD,EAAoBC,gBAApB,EAAsCtB,WAAtC,EAAmDH,MAAnD,CAArB;AACA,QAAI5B,MAAM,GAAG0D,GAAG,GAAG5G,IAAI,CAACC,KAAL,CAAW8E,KAAK,GAAG,CAAnB,CAAnB;AACA,QAAI5B,IAAI,GAAGyD,GAAG,GAAG5G,IAAI,CAACC,KAAL,CAAW,CAAC8E,KAAD,GAAS,CAApB,CAAjB,CARgI,CAUhI;;AACA,QAAI,CAACQ,OAAL,EAAc;AACb,UAAID,GAAG,IAAIsB,GAAG,GAAG,CAAjB,EAAoB;AACnB1D,QAAAA,MAAM,GAAG,CAAT;AACAC,QAAAA,IAAI,GAAG,CAAP;AACA,OAHD,MAGO,IAAI,CAACmC,GAAD,IAAQsB,GAAG,GAAG,CAAlB,EAAqB;AAC3B1D,QAAAA,MAAM,GAAG,CAAT;AACAC,QAAAA,IAAI,GAAG,CAAP;AACA;AACD;;AAED,WAAO,CAAED,MAAF,EAAUC,IAAV,CAAP;AACA;;AAED,WAASG,WAAT,CAAqB3C,KAArB,EAA4B2E,GAA5B,EAAiC9D,IAAjC,EAAuCa,EAAvC,EAA2CkB,QAA3C,EAAqD;AACpD,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1C,KAAK,CAACuB,MAA1B,EAAkCmB,CAAC,EAAnC,EAAuC;AACtC,UAAIiB,IAAI,GAAG3D,KAAK,CAAC0C,CAAD,CAAhB;AACA,UAAIiB,IAAI,CAACjD,OAAL,CAAaE,IAAjB,EACC,SAHqC,CAItC;;AACA,UAAIgE,OAAO,GAAGjB,IAAI,CAACwC,QAAL,GAAgB,KAAhB,GAAwB,IAAtC;AACA,UAAIC,MAAM,GAAGxB,OAAO,GAAGhC,QAAH,GAAce,IAAlC;AACA,UAAI0C,YAAY,GAAG1C,IAAI,CAAC6B,KAAL,CAAYb,GAAD,GAAQ,CAAR,GAAYhB,IAAI,CAAC6B,KAAL,CAAWjE,MAAX,GAAoB,CAA3C,CAAnB;AACA,UAAI+E,SAAS,GAAG,IAAI,CAApB,CARsC,CAQhB;;AACtB,UAAI7F,KAAK,GAAG4F,YAAY,CAAC5F,KAAb,IAAuBkE,GAAD,GAAQ2B,SAAR,GAAoB,CAACA,SAA3C,CAAZ;AACA,UAAIC,EAAE,GAAG5B,GAAG,GAAG0B,YAAY,CAACX,CAAhB,GAAoB,CAAhC,CAVsC,CAUH;;AACnC,UAAIvC,CAAC,GAAGkD,YAAY,CAAClD,CAAb,GAAiBoD,EAAzB,CAXsC,CAWT;;AAC7B,UAAIC,IAAI,GAAGxD,SAAS,CAACnC,IAAI,CAACwB,MAAN,EAAcxB,IAAI,CAAC0B,MAAnB,EAA2B1B,IAAI,CAACyB,IAAhC,EAAsCzB,IAAI,CAAC2B,IAA3C,EAAiDW,CAAjD,CAApB;AACA,UAAIsD,SAAS,GAAI9B,GAAD,GAAQ,CAAC,GAAT,GAAe,GAA/B;AACA,UAAI,CAACA,GAAL,EACC6B,IAAI,IAAK9E,EAAE,GAAG,CAAN,GAAWzC,OAAO,CAAC4F,IAA3B,CAfqC,CAeJ;;AAClC,UAAID,OAAJ,EACC2B,EAAE,IAAI5C,IAAI,CAAC6B,KAAL,CAAW,CAAX,EAAce,EAApB,CAjBqC,CAkBtC;;AACA,UAAIF,YAAY,CAACxC,CAAb,KAAmB,yBAAvB,EAAkD;AACjD,YAAIc,GAAJ,EACClE,KAAK,IAAI,CAAT,CADD,KAGCA,KAAK,IAAI,CAAT;AACD;;AACD,UAAIiG,IAAI,GAAG,IAAI1H,eAAJ,CAAoB,IAApB,EAA0BuH,EAA1B,EAA8B,CAA9B,EAAiC9F,KAAjC,EAAwC;AAClD,gBAAQ,MAD0C;AAElD,kBAAU+F,IAFwC;AAGlDG,QAAAA,SAAS,EAAEF;AAHuC,OAAxC,CAAX;AAKAC,MAAAA,IAAI,CAACE,IAAL,CAAUR,MAAM,CAACjD,CAAjB,EA9BsC,CA8BjB;;AACrBiD,MAAAA,MAAM,CAACD,QAAP,CAAgBO,IAAhB;AACA;AAED;;AAED,WAASjE,qBAAT,CAA+BzC,KAA/B,EAAsC2E,GAAtC,EAA2C9D,IAA3C,EAAiD+D,OAAjD,EAA0DlD,EAA1D,EAA8D;AAC7D,QAAIvB,KAAK,GAAG,EAAZ;AACA,QAAI0G,QAAQ,GAAG,EAAf,CAF6D,CAEzC;;AACpB,SAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1C,KAAK,CAACuB,MAA1B,EAAkCmB,CAAC,EAAnC,EAAuC;AACtC,UAAIiB,IAAI,GAAG3D,KAAK,CAAC0C,CAAD,CAAhB;AACA,UAAIiB,IAAI,CAACjD,OAAL,CAAaE,IAAjB,EACC;AACD,UAAIyF,YAAY,GAAG1C,IAAI,CAAC6B,KAAL,CAAYb,GAAD,GAAQ,CAAR,GAAYhB,IAAI,CAAC6B,KAAL,CAAWjE,MAAX,GAAoB,CAA3C,CAAnB;AACA,UAAI4B,CAAC,GAAGkD,YAAY,CAAClD,CAAb,IAAmBwB,GAAD,GAAQ0B,YAAY,CAACX,CAArB,GAAyB,CAA3C,CAAR;AACA,UAAIc,IAAI,GAAGxD,SAAS,CAACnC,IAAI,CAACwB,MAAN,EAAcxB,IAAI,CAAC0B,MAAnB,EAA2B1B,IAAI,CAACyB,IAAhC,EAAsCzB,IAAI,CAAC2B,IAA3C,EAAiDW,CAAjD,CAApB;AAEA,UAAI2D,EAAE,GAAInC,GAAD,GAAQ,CAAC,GAAT,GAAe,GAAxB;AACA,UAAIC,OAAJ,EAAakC,EAAE,GAAGA,EAAE,GAAG,CAAL,GAAS,CAAd,CATyB,CASR;;AAC9B,UAAI3H,QAAQ,GAAGwE,IAAI,CAACjD,OAAL,CAAavB,QAA5B,CAVsC,CAUA;;AACtC,UAAIA,QAAQ,KAAK,CAAjB,EAAoBA,QAAQ,GAAG,IAAX,CAXkB,CAWD;;AACrC,WAAK,IAAI4H,MAAM,GAAG7H,SAAS,CAACC,QAAD,CAA3B,EAAuC4H,MAAM,GAAG,CAAC,CAAjD,EAAoDA,MAAM,EAA1D,EAA8D;AAC7D,YAAIF,QAAQ,CAAC,CAAC,CAAD,GAAKE,MAAN,CAAZ,EAA2B;AAC1BF,UAAAA,QAAQ,CAAC,CAAC,CAAD,GAAKE,MAAN,CAAR,CAAsBC,MAAtB,GAA+B,KAA/B;AACA,SAFD,MAEO;AACNH,UAAAA,QAAQ,CAAC,CAAC,CAAD,GAAKE,MAAN,CAAR,GAAwB;AACvB5D,YAAAA,CAAC,EAAEA,CAAC,IAAKwB,GAAD,GAAQ,CAAC,GAAT,GAAe,CAAnB,CADmB;AACIsC,YAAAA,CAAC,EAAET,IAAI,GAAGM,EAAE,IAAI,CAAC,CAAD,GAAKC,MAAL,GAAc,CAAlB,CADhB;AAEvBA,YAAAA,MAAM,EAAEA,MAFe;AAEPC,YAAAA,MAAM,EAAE;AAFD,WAAxB;AAIA;AACD;;AAED,WAAK,IAAIE,CAAC,GAAGL,QAAQ,CAACtF,MAAT,GAAkB,CAA/B,EAAkC2F,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC9C,YAAIxE,CAAC,KAAK1C,KAAK,CAACuB,MAAN,GAAe,CAArB,IAA0BrC,SAAS,CAACc,KAAK,CAAC0C,CAAC,GAAG,CAAL,CAAL,CAAahC,OAAb,CAAqBvB,QAAtB,CAAT,GAA4C,CAAC+H,CAAD,GAAK,CAA/E,EAAmF;AAElF,cAAIC,WAAW,GAAGhE,CAAlB;AACA,cAAIiE,WAAW,GAAGZ,IAAI,GAAGM,EAAE,IAAII,CAAC,GAAG,CAAR,CAA3B;;AAGA,cAAIL,QAAQ,CAACK,CAAD,CAAR,CAAYF,MAAhB,EAAwB;AACvBG,YAAAA,WAAW,GAAIzE,CAAC,KAAK,CAAP,GAAYS,CAAC,GAAG,CAAhB,GAAoBA,CAAC,GAAG,CAAtC;AACAiE,YAAAA,WAAW,GAAGpE,SAAS,CAACnC,IAAI,CAACwB,MAAN,EAAcxB,IAAI,CAAC0B,MAAnB,EAA2B1B,IAAI,CAACyB,IAAhC,EAAsCzB,IAAI,CAAC2B,IAA3C,EAAiD2E,WAAjD,CAAT,GAAyEL,EAAE,IAAII,CAAC,GAAG,CAAR,CAAzF;AACA;;AACD/G,UAAAA,KAAK,CAACW,IAAN,CAAW;AAAEuB,YAAAA,MAAM,EAAEwE,QAAQ,CAACK,CAAD,CAAR,CAAY/D,CAAtB;AAAyBb,YAAAA,IAAI,EAAE6E,WAA/B;AAA4C5E,YAAAA,MAAM,EAAEsE,QAAQ,CAACK,CAAD,CAAR,CAAYD,CAAhE;AAAmEzE,YAAAA,IAAI,EAAE4E,WAAzE;AAAsF1F,YAAAA,EAAE,EAAEA;AAA1F,WAAX;AACAmF,UAAAA,QAAQ,GAAGA,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkBH,CAAlB,CAAX;AACA;AACD;AACD;;AACD,WAAO/G,KAAP;AACA;AACD,CAlSD;;AAoSAmH,MAAM,CAACC,OAAP,GAAiB/H,QAAjB","sourcesContent":["//    abc_beam_element.js: Definition of the BeamElem class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar AbsoluteElement = require('./abc_absolute_element');\nvar RelativeElement = require('./abc_relative_element');\nvar spacing = require('./abc_spacing');\n\nvar getDurlog = function(duration) {\n        // TODO-PER: This is a hack to prevent a Chrome lockup. Duration should have been defined already,\n        // but there's definitely a case where it isn't. [Probably something to do with triplets.]\n        if (duration === undefined) {\n                return 0;\n        }\n//        console.log(\"getDurlog: \" + duration);\n  return Math.floor(Math.log(duration)/Math.log(2));\n};\n\n\n// Most elements on the page are related to a particular absolute element -- notes, rests, bars, etc. Beams, however, span multiple elements.\n// This means that beams can't be laid out until the absolute elements are placed. There is the further complication that the stems for beamed\n// notes can't be laid out until the beams are because we don't know how long they will be until we know the slope of the beam and the horizontal\n// spacing of the absolute elements.\n//\n// So, when a beam is detected, a BeamElem is created, then all notes belonging to that beam are added to it. These notes are not given stems at that time.\n// Then, after the horizontal layout is complete, all of the BeamElem are iterated to set the beam position, then all of the notes that are beamed are given\n// stems. After that, we are ready for the drawing step.\n\n// There are three phases: the setup phase, when new elements are being discovered, the layout phase, when everything is calculated, and the drawing phase,\n// when the object is not changed, but is used to put the elements on the page.\n\nvar BeamElem;\n\n(function() {\n\t\"use strict\";\n\n\t//\n\t// Setup phase\n\t//\n\tBeamElem = function BeamElem(stemHeight, type, flat) {\n\t\t// type is \"grace\", \"up\", \"down\", or undefined. flat is used to force flat beams, as it commonly found in the grace notes of bagpipe music.\n\t\tthis.isflat = flat;\n\t\tthis.isgrace = (type && type === \"grace\");\n\t\tthis.forceup = this.isgrace || (type && type === \"up\");\n\t\tthis.forcedown = (type && type === \"down\");\n\t\tthis.elems = []; // all the AbsoluteElements that this beam touches. It may include embedded rests.\n\t\tthis.total = 0;\n\t\tthis.allrests = true;\n\t\tthis.stemHeight = stemHeight;\n\t\tthis.beams = []; // During the layout phase, this will become a list of the beams that need to be drawn.\n\t};\n\n\tBeamElem.prototype.setHint = function () {\n\t\tthis.hint = true;\n\t};\n\n\tBeamElem.prototype.add = function(abselem) {\n\t\tvar pitch = abselem.abcelem.averagepitch;\n\t\tif (pitch === undefined) return; // don't include elements like spacers in beams\n\t\tthis.allrests = this.allrests && abselem.abcelem.rest;\n\t\tabselem.beam = this;\n\t\tthis.elems.push(abselem);\n\t\t//var pitch = abselem.abcelem.averagepitch;\n\t\tthis.total += pitch; // TODO CHORD (get pitches from abselem.heads)\n\t\tif (!this.min || abselem.abcelem.minpitch < this.min) {\n\t\t\tthis.min = abselem.abcelem.minpitch;\n\t\t}\n\t\tif (!this.max || abselem.abcelem.maxpitch > this.max) {\n\t\t\tthis.max = abselem.abcelem.maxpitch;\n\t\t}\n\t};\n\n\tvar middleLine = 6;\t// hardcoded 6 is B\n\n\tBeamElem.prototype.calcDir = function() {\n\t\tif (this.forceup) return true;\n\t\tif (this.forcedown) return false;\n\t\tvar average = calcAverage(this.total, this.elems.length);\n\t\treturn average < middleLine;\n\t};\n\n\t//\n\t// layout phase\n\t//\n\tBeamElem.prototype.layout = function() {\n\t\tif (this.elems.length === 0 || this.allrests) return;\n\n\t\tthis.stemsUp = this.calcDir(); // True means the stems are facing up.\n\t\tvar dy = calcDy(this.stemsUp, this.isgrace); // This is the width of the beam line.\n\n\t\t// create the main beam\n\t\tvar firstElement = this.elems[0];\n\t\tvar lastElement = this.elems[this.elems.length - 1];\n\t\tvar minStemHeight = 0; // The following is to leave space for \"!///!\" marks.\n\t\tvar referencePitch = this.stemsUp ? firstElement.abcelem.maxpitch : firstElement.abcelem.minpitch;\n\t\tminStemHeight = minStem(firstElement, this.stemsUp, referencePitch, minStemHeight);\n\t\tminStemHeight = minStem(lastElement, this.stemsUp, referencePitch, minStemHeight);\n\t\tminStemHeight = Math.max(this.stemHeight, minStemHeight + 3); // TODO-PER: The 3 is the width of a 16th beam. The actual height of the beam should be used instead.\n\t\tvar yPos = calcYPos(this.total, this.elems.length, minStemHeight, this.stemsUp, firstElement.abcelem.averagepitch, lastElement.abcelem.averagepitch, this.isflat, this.min, this.max, this.isgrace);\n\t\tvar xPos = calcXPos(this.stemsUp, firstElement, lastElement);\n\t\tthis.beams.push({ startX: xPos[0], endX: xPos[1], startY: yPos[0], endY: yPos[1], dy: dy });\n\n\t\t// create the rest of the beams (in the case of 1/16th notes, etc.\n\t\tvar beams = createAdditionalBeams(this.elems, this.stemsUp, this.beams[0], this.isgrace, dy);\n\t\tfor (var i = 0; i < beams.length; i++)\n\t\t\tthis.beams.push(beams[i]);\n\n\t\t// Now that the main beam is defined, we know how tall the stems should be, so create them and attach them to the original notes.\n\t\tcreateStems(this.elems, this.stemsUp, this.beams[0], dy, this.mainNote);\n\t};\n\n\tBeamElem.prototype.isAbove = function() {\n\t\treturn this.stemsUp;\n\t};\n\n\t// We can't just use the entire beam for the calculation. The range has to be passed in, because the beam might extend into some unrelated notes. for instance, (3_a'f'e'f'2 when L:16\n\tBeamElem.prototype.heightAtMidpoint = function(startX, endX) {\n\t\tif (this.beams.length === 0)\n\t\t\treturn 0;\n\t\tvar beam = this.beams[0];\n\t\tvar midPoint = startX + (endX - startX) / 2;\n\t\treturn getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, midPoint);\n\t};\n\n\tBeamElem.prototype.yAtNote = function(element) {\n\t\tvar beam = this.beams[0];\n\t\treturn getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, element.x);\n\t};\n\n\tBeamElem.prototype.xAtMidpoint = function(startX, endX) {\n\t\treturn startX + (endX - startX)/2;\n\t};\n\n\t//\n\t// Drawing phase\n\t//\n\tBeamElem.prototype.draw = function(renderer) {\n\t\tif (this.beams.length === 0) return;\n\n\t\trenderer.beginGroup();\n\t\tfor (var i = 0; i < this.beams.length; i++) {\n\t\t\tvar beam = this.beams[i];\n\t\t\tdrawBeam(renderer, beam.startX, beam.startY, beam.endX, beam.endY, beam.dy, this.hint);\n\t\t}\n\t\trenderer.endGroup('beam-elem');\n\t};\n\n\t//\n\t// private functions\n\t//\n\tfunction minStem(element, stemsUp, referencePitch, minStemHeight) {\n\t\tif (!element.children)\n\t\t\treturn minStemHeight;\n\t\tfor (var i = 0; i < element.children.length; i++) {\n\t\t\tvar elem = element.children[i];\n\t\t\tif (stemsUp && elem.top !== undefined && elem.c === \"flags.ugrace\")\n\t\t\t\tminStemHeight = Math.max(minStemHeight, elem.top - referencePitch);\n\t\t\telse if (!stemsUp && elem.bottom !== undefined && elem.c === \"flags.ugrace\")\n\t\t\t\tminStemHeight = Math.max(minStemHeight, referencePitch - elem.bottom + 7); // The extra 7 is because we are measuring the slash from the top.\n\t\t}\n\t\treturn minStemHeight;\n\t}\n\n\tfunction calcSlant(leftAveragePitch, rightAveragePitch, numStems, isFlat) {\n\t\tif (isFlat)\n\t\t\treturn 0;\n\t\tvar slant = leftAveragePitch - rightAveragePitch;\n\t\tvar maxSlant = numStems / 2;\n\n\t\tif (slant > maxSlant) slant = maxSlant;\n\t\tif (slant < -maxSlant) slant = -maxSlant;\n\t\treturn slant;\n\t}\n\n\tfunction calcAverage(total, numElements) {\n\t\tif (!numElements)\n\t\t\treturn 0;\n\t\treturn total / numElements;\n\t}\n\n\tfunction getBarYAt(startx, starty, endx, endy, x) {\n\t\treturn starty + (endy - starty) / (endx - startx) * (x - startx);\n\t}\n\n\tfunction calcDy(asc, isGrace) {\n\t\tvar dy = (asc) ? spacing.STEP : -spacing.STEP;\n\t\tif (isGrace) dy = dy * 0.4;\n\t\treturn dy;\n\t}\n\n\tfunction drawBeam(renderer, startX, startY, endX, endY, dy, isHint) {\n\t\tvar klass = 'beam-elem';\n\t\tif (isHint)\n\t\t\tklass += \" abcjs-hint\";\n\n\t\t// the X coordinates are actual coordinates, but the Y coordinates are in pitches.\n\t\tstartY = renderer.calcY(startY);\n\t\tendY = renderer.calcY(endY);\n\t\tvar pathString = \"M\" + startX + \" \" + startY + \" L\" + endX + \" \" + endY +\n\t\t\t\"L\" + endX + \" \" + (endY + dy) + \" L\" + startX + \" \" + (startY + dy) + \"z\";\n\t\trenderer.printPath({\n\t\t\tpath: pathString,\n\t\t\tstroke: \"none\",\n\t\t\tfill: \"#000000\",\n\t\t\t'class': renderer.addClasses(klass)\n\t\t});\n\t}\n\n\tfunction calcXPos(asc, firstElement, lastElement) {\n\t\tvar starthead = firstElement.heads[asc ? 0 : firstElement.heads.length - 1];\n\t\tvar endhead = lastElement.heads[asc ? 0 : lastElement.heads.length - 1];\n\t\tvar startX = starthead.x;\n\t\tif (asc) startX += starthead.w - 0.6;\n\t\tvar endX = endhead.x;\n\t\tif (asc) endX += endhead.w;\n\t\treturn [ startX, endX ];\n\t}\n\n\tfunction calcYPos(total, numElements, stemHeight, asc, firstAveragePitch, lastAveragePitch, isFlat, minPitch, maxPitch, isGrace) {\n\t\tvar average = calcAverage(total, numElements); // This is the average pitch for the all the notes that will be beamed.\n\t\tvar barpos = stemHeight - 2; // (isGrace)? 5:7;\n\t\tvar barminpos = stemHeight - 2;\n\t\tvar pos = Math.round(asc ? Math.max(average + barpos, maxPitch + barminpos) : Math.min(average - barpos, minPitch - barminpos));\n\n\t\tvar slant = calcSlant(firstAveragePitch, lastAveragePitch, numElements, isFlat);\n\t\tvar startY = pos + Math.floor(slant / 2);\n\t\tvar endY = pos + Math.floor(-slant / 2);\n\n\t\t// If the notes are too high or too low, make the beam go down to the middle\n\t\tif (!isGrace) {\n\t\t\tif (asc && pos < 6) {\n\t\t\t\tstartY = 6;\n\t\t\t\tendY = 6;\n\t\t\t} else if (!asc && pos > 6) {\n\t\t\t\tstartY = 6;\n\t\t\t\tendY = 6;\n\t\t\t}\n\t\t}\n\n\t\treturn [ startY, endY];\n\t}\n\n\tfunction createStems(elems, asc, beam, dy, mainNote) {\n\t\tfor (var i = 0; i < elems.length; i++) {\n\t\t\tvar elem = elems[i];\n\t\t\tif (elem.abcelem.rest)\n\t\t\t\tcontinue;\n\t\t\t// TODO-PER: This is odd. If it is a regular beam then elems is an array of AbsoluteElements, if it is a grace beam then it is an array of objects , so we directly attach the element to the parent. We tell it if is a grace note because they are passed in as a generic object instead of an AbsoluteElement.\n\t\t\tvar isGrace = elem.addExtra ? false : true;\n\t\t\tvar parent = isGrace ? mainNote : elem;\n\t\t\tvar furthestHead = elem.heads[(asc) ? 0 : elem.heads.length - 1];\n\t\t\tvar ovalDelta = 1 / 5;//(isGrace)?1/3:1/5;\n\t\t\tvar pitch = furthestHead.pitch + ((asc) ? ovalDelta : -ovalDelta);\n\t\t\tvar dx = asc ? furthestHead.w : 0; // down-pointing stems start on the left side of the note, up-pointing stems start on the right side, so we offset by the note width.\n\t\t\tvar x = furthestHead.x + dx; // this is now the actual x location in pixels.\n\t\t\tvar bary = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, x);\n\t\t\tvar lineWidth = (asc) ? -0.6 : 0.6;\n\t\t\tif (!asc)\n\t\t\t\tbary -= (dy / 2) / spacing.STEP;\t// TODO-PER: This is just a fudge factor so the down-pointing stems don't overlap.\n\t\t\tif (isGrace)\n\t\t\t\tdx += elem.heads[0].dx;\n\t\t\t// TODO-PER-HACK: One type of note head has a different placement of the stem. This should be more generically calculated:\n\t\t\tif (furthestHead.c === 'noteheads.slash.quarter') {\n\t\t\t\tif (asc)\n\t\t\t\t\tpitch += 1;\n\t\t\t\telse\n\t\t\t\t\tpitch -= 1;\n\t\t\t}\n\t\t\tvar stem = new RelativeElement(null, dx, 0, pitch, {\n\t\t\t\t\"type\": \"stem\",\n\t\t\t\t\"pitch2\": bary,\n\t\t\t\tlinewidth: lineWidth\n\t\t\t});\n\t\t\tstem.setX(parent.x); // This is after the x coordinates were set, so we have to set it directly.\n\t\t\tparent.addExtra(stem);\n\t\t}\n\n\t}\n\n\tfunction createAdditionalBeams(elems, asc, beam, isGrace, dy) {\n\t\tvar beams = [];\n\t\tvar auxBeams = [];  // auxbeam will be {x, y, durlog, single} auxbeam[0] should match with durlog=-4 (16th) (j=-4-durlog)\n\t\tfor (var i = 0; i < elems.length; i++) {\n\t\t\tvar elem = elems[i];\n\t\t\tif (elem.abcelem.rest)\n\t\t\t\tcontinue;\n\t\t\tvar furthestHead = elem.heads[(asc) ? 0 : elem.heads.length - 1];\n\t\t\tvar x = furthestHead.x + ((asc) ? furthestHead.w : 0);\n\t\t\tvar bary = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, x);\n\n\t\t\tvar sy = (asc) ? -1.5 : 1.5;\n\t\t\tif (isGrace) sy = sy * 2 / 3; // This makes the second beam on grace notes closer to the first one.\n\t\t\tvar duration = elem.abcelem.duration; // get the duration via abcelem because of triplets\n\t\t\tif (duration === 0) duration = 0.25; // if this is stemless, then we use quarter note as the duration.\n\t\t\tfor (var durlog = getDurlog(duration); durlog < -3; durlog++) {\n\t\t\t\tif (auxBeams[-4 - durlog]) {\n\t\t\t\t\tauxBeams[-4 - durlog].single = false;\n\t\t\t\t} else {\n\t\t\t\t\tauxBeams[-4 - durlog] = {\n\t\t\t\t\t\tx: x + ((asc) ? -0.6 : 0), y: bary + sy * (-4 - durlog + 1),\n\t\t\t\t\t\tdurlog: durlog, single: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var j = auxBeams.length - 1; j >= 0; j--) {\n\t\t\t\tif (i === elems.length - 1 || getDurlog(elems[i + 1].abcelem.duration) > (-j - 4)) {\n\n\t\t\t\t\tvar auxBeamEndX = x;\n\t\t\t\t\tvar auxBeamEndY = bary + sy * (j + 1);\n\n\n\t\t\t\t\tif (auxBeams[j].single) {\n\t\t\t\t\t\tauxBeamEndX = (i === 0) ? x + 5 : x - 5;\n\t\t\t\t\t\tauxBeamEndY = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, auxBeamEndX) + sy * (j + 1);\n\t\t\t\t\t}\n\t\t\t\t\tbeams.push({ startX: auxBeams[j].x, endX: auxBeamEndX, startY: auxBeams[j].y, endY: auxBeamEndY, dy: dy });\n\t\t\t\t\tauxBeams = auxBeams.slice(0, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn beams;\n\t}\n})();\n\nmodule.exports = BeamElem;\n"]},"metadata":{},"sourceType":"script"}