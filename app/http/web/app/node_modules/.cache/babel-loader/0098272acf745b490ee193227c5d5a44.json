{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useRef } from 'react';\n\nfunction resolvePromise(promise) {\n  if (typeof promise === 'function') {\n    return promise();\n  }\n\n  return promise;\n}\n\nconst states = {\n  pending: 'pending',\n  rejected: 'rejected',\n  resolved: 'resolved'\n};\nconst defaultState = {\n  error: undefined,\n  result: undefined,\n  state: states.pending\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case states.pending:\n      return defaultState;\n\n    case states.resolved:\n      return {\n        error: undefined,\n        result: action.payload,\n        state: states.resolved\n      };\n\n    case states.rejected:\n      return {\n        error: action.payload,\n        result: undefined,\n        state: states.rejected\n      };\n\n    /* istanbul ignore next */\n\n    default:\n      return state;\n  }\n}\n\nfunction usePromise(promiseIn, inputs) {\n  _s();\n\n  const [{\n    error,\n    result,\n    state\n  }, dispatch] = useReducer(reducer, defaultState);\n  const promise = useRef(promiseIn);\n  useEffect(() => {\n    if (!promise) {\n      return;\n    }\n\n    let canceled = false;\n    dispatch({\n      type: states.pending\n    });\n    promise.then(result => !canceled && dispatch({\n      payload: result,\n      type: states.resolved\n    }), error => !canceled && dispatch({\n      payload: error,\n      type: states.rejected\n    }));\n    return () => {\n      canceled = true;\n    };\n  }, [inputs]);\n  return [result, error, state];\n}\n\n_s(usePromise, \"260QeAUPP+I1EoPAdfMH5PFY5Po=\");\n\nexport default usePromise;","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/usePromise.js"],"names":["useEffect","useReducer","useRef","resolvePromise","promise","states","pending","rejected","resolved","defaultState","error","undefined","result","state","reducer","action","type","payload","usePromise","promiseIn","inputs","dispatch","canceled","then"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,OAA9C;;AAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjC,WAAOA,OAAO,EAAd;AACD;;AAED,SAAOA,OAAP;AACD;;AAED,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,SADI;AAEbC,EAAAA,QAAQ,EAAE,UAFG;AAGbC,EAAAA,QAAQ,EAAE;AAHG,CAAf;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,SADY;AAEnBC,EAAAA,MAAM,EAAED,SAFW;AAGnBE,EAAAA,KAAK,EAAER,MAAM,CAACC;AAHK,CAArB;;AAMA,SAASQ,OAAT,CAAiBD,KAAjB,EAAwBE,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,MAAM,CAACC,OAAZ;AACE,aAAOG,YAAP;;AAEF,SAAKJ,MAAM,CAACG,QAAZ;AACE,aAAO;AACLE,QAAAA,KAAK,EAAEC,SADF;AAELC,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAFV;AAGLJ,QAAAA,KAAK,EAAER,MAAM,CAACG;AAHT,OAAP;;AAMF,SAAKH,MAAM,CAACE,QAAZ;AACE,aAAO;AACLG,QAAAA,KAAK,EAAEK,MAAM,CAACE,OADT;AAELL,QAAAA,MAAM,EAAED,SAFH;AAGLE,QAAAA,KAAK,EAAER,MAAM,CAACE;AAHT,OAAP;;AAMF;;AACA;AACE,aAAOM,KAAP;AApBJ;AAsBD;;AAED,SAASK,UAAT,CAAoBC,SAApB,EAA+BC,MAA/B,EAAuC;AAAA;;AACrC,QAAM,CAAC;AAAEV,IAAAA,KAAF;AAASE,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAAD,EAA2BQ,QAA3B,IAAuCpB,UAAU,CAACa,OAAD,EAAUL,YAAV,CAAvD;AACA,QAAML,OAAO,GAAGF,MAAM,CAACiB,SAAD,CAAtB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,OAAL,EAAc;AACZ;AACD;;AAED,QAAIkB,QAAQ,GAAG,KAAf;AAEAD,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEX,MAAM,CAACC;AAAf,KAAD,CAAR;AAEAF,IAAAA,OAAO,CAACmB,IAAR,CACEX,MAAM,IAAI,CAACU,QAAD,IAAaD,QAAQ,CAAC;AAC9BJ,MAAAA,OAAO,EAAEL,MADqB;AAE9BI,MAAAA,IAAI,EAAEX,MAAM,CAACG;AAFiB,KAAD,CADjC,EAKEE,KAAK,IAAI,CAACY,QAAD,IAAaD,QAAQ,CAAC;AAC7BJ,MAAAA,OAAO,EAAEP,KADoB;AAE7BM,MAAAA,IAAI,EAAEX,MAAM,CAACE;AAFgB,KAAD,CALhC;AAWA,WAAO,MAAM;AACXe,MAAAA,QAAQ,GAAG,IAAX;AACD,KAFD;AAGD,GAvBQ,EAuBN,CAACF,MAAD,CAvBM,CAAT;AAyBA,SAAO,CAACR,MAAD,EAASF,KAAT,EAAgBG,KAAhB,CAAP;AACD;;GA9BQK,U;;AAgCT,eAAeA,UAAf","sourcesContent":["import { useEffect, useReducer, useRef } from 'react';\n\nfunction resolvePromise(promise) {\n  if (typeof promise === 'function') {\n    return promise();\n  }\n\n  return promise;\n}\n\nconst states = {\n  pending: 'pending',\n  rejected: 'rejected',\n  resolved: 'resolved'\n};\n\nconst defaultState = {\n  error: undefined,\n  result: undefined,\n  state: states.pending\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case states.pending:\n      return defaultState;\n\n    case states.resolved:\n      return {\n        error: undefined,\n        result: action.payload,\n        state: states.resolved\n      };\n\n    case states.rejected:\n      return {\n        error: action.payload,\n        result: undefined,\n        state: states.rejected\n      };\n\n    /* istanbul ignore next */\n    default:\n      return state;\n  }\n}\n\nfunction usePromise(promiseIn, inputs) {\n  const [{ error, result, state }, dispatch] = useReducer(reducer, defaultState);\n  const promise = useRef(promiseIn)\n\n  useEffect(() => {\n    if (!promise) {\n      return;\n    }\n\n    let canceled = false;\n\n    dispatch({ type: states.pending });\n\n    promise.then(\n      result => !canceled && dispatch({\n        payload: result,\n        type: states.resolved\n      }),\n      error => !canceled && dispatch({\n        payload: error,\n        type: states.rejected\n      })\n    );\n\n    return () => {\n      canceled = true;\n    };\n  }, [inputs]);\n\n  return [result, error, state];\n}\n\nexport default usePromise;\n"]},"metadata":{},"sourceType":"module"}