{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./daw.css\";\nimport { keymaps } from \"./keymaps\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport const SongEditor = props => {\n  _s();\n\n  const [bpm, setBPM] = React.useState(120);\n  const [dawResolution, setDawResolution] = React.useState(40);\n  const [subdivision, setSubdivision] = React.useState(4);\n  const [allVisible, setAllVisible] = React.useState(false);\n\n  if (props.tracks) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '100px'\n          },\n          children: \" top area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Settings, {\n            setBPM: setBPM,\n            bpm: bpm,\n            setDawResolution: setDawResolution,\n            dawResolution: dawResolution,\n            subdivision: subdivision,\n            setSubdivision: setSubdivision,\n            allVisible: allVisible,\n            setAllVisible: setAllVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TrackViewer, {\n            allVisible: allVisible,\n            tracks: props.tracks,\n            bpm: bpm,\n            dawResolution: dawResolution,\n            subdivision: subdivision,\n            allVisible: allVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  } else {\n    return \"no parents\";\n  }\n};\n\n_s(SongEditor, \"MUY7HvmR/BmcNZ2l62ZsNszMnb4=\");\n\n_c = SongEditor;\n\nconst Settings = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", props.bpm, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 50,\n        max: 150,\n        value: props.bpm,\n        onChange: e => props.setBPM(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", props.dawResolution, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 30,\n        max: 300,\n        value: props.dawResolution,\n        onChange: e => props.setDawResolution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", props.subdivision, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 1,\n        max: 8,\n        value: props.subdivision,\n        onChange: e => props.setSubdivision(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Show all: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.allVisible,\n        onChange: e => props.setAllVisible(!props.allVisible)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Settings;\n\nconst TrackViewer = props => {\n  _s2();\n\n  const [activeTrack, setActiveTrack] = React.useState(0);\n  let tracks = props.tracks.map((item, idx) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setActiveTrack(idx),\n      children: [item.instrument, \" | \", item.notes.length]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this); //.notes.length\n  });\n  let backgroundTracks = [...props.tracks];\n\n  if (!props.allVisible) {\n    backgroundTracks = null;\n  } else {\n    backgroundTracks.splice(activeTrack, 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-area\",\n      children: tracks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-area\",\n      children: /*#__PURE__*/_jsxDEV(ActiveArea, {\n        activeTrack: activeTrack,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TrackViewer, \"xd5tPIV4RyVQCOI+NgzqfN3EuTg=\");\n\n_c3 = TrackViewer;\n\nconst ActiveArea = props => {\n  if (!props.activeTrack || !props.tracks[props.activeTrack].notes || props.tracks[props.activeTrack].notes.length === 0) {\n    return \"Select a track\";\n  }\n\n  let totalLengthInSeconds = 5;\n  let numBoxes = Math.round(totalLengthInSeconds * props.bpm / 60);\n  let boxes = Array.from(Array(numBoxes).keys());\n  let notePool = props.allVisible ? null : [...props.tracks[props.activeTrack].notes];\n  let minNote = notePool.reduce((min, b) => Math.min(min, b.pitch), notePool[0].pitch);\n  let maxNote = notePool.reduce((min, b) => Math.max(min, b.pitch), notePool[0].pitch);\n  let filteredKeys = Object.keys(keymaps).filter(item => item >= minNote && item <= maxNote);\n  let modifiedStyle = {\n    minWidth: `${props.dawResolution}px`\n  };\n\n  let header = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"key-row\",\n    children: boxes.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daw-cell\",\n        style: modifiedStyle,\n        children: idx\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 30\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 16\n  }, this);\n\n  let body = filteredKeys.map((item, idx) => {\n    let b = boxes.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: [\"background-cell\", \"daw-cell\"].join(\" \"),\n        style: modifiedStyle\n      }, \"beats\" + idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key-row\",\n      children: b\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 14\n    }, this);\n  });\n  let pianoKeys = filteredKeys.map((item, idx) => {\n    let c = keymaps[item].includes(\"#\") ? \"accidental\" : \"natural\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [c, \"keyNote\"].join(\" \"),\n      children: keymaps[item]\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  }).reverse();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accidental keyNote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), pianoKeys]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw\",\n      children: [header, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [body, /*#__PURE__*/_jsxDEV(Notes, {\n          minNote: minNote,\n          offset: maxNote,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Subdivision, {\n          numBeats: numBoxes,\n          subdivision: props.subdivision,\n          dawResolution: props.dawResolution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c4 = ActiveArea;\n\nconst Subdivision = props => {\n  let markers = [];\n\n  for (let i = 0; i < props.numBeats * parseInt(props.subdivision); i++) {\n    let subStyle = {\n      left: `${props.dawResolution / parseInt(props.subdivision) * i}px`,\n      top: '0px'\n    };\n    markers.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subdivision\",\n      style: subStyle\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }, this));\n  }\n\n  return markers;\n};\n\n_c5 = Subdivision;\n\nconst Notes = props => {\n  let COLORS = [\"red\", \"blue\", \"green\"];\n  let mainTrack = props.tracks[props.activeTrack].notes.map((note, idx) => {\n    console.log(note);\n    return /*#__PURE__*/_createElement(Note, { ...props,\n      note: note,\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 12\n      }\n    });\n  });\n  let backgroundTracks = props.allVisible ? props.backgroundTracks.map((track, trackIndex) => {\n    console.log(\"background track\", track);\n    return track.notes.map((note, noteIndex) => {\n      return /*#__PURE__*/_createElement(Note, { ...props,\n        note: note,\n        key: trackIndex + \"-\" + noteIndex,\n        inactive: true,\n        color: COLORS[trackIndex],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 18\n        }\n      });\n    });\n  }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [mainTrack, \" \", backgroundTracks]\n  }, void 0, true);\n};\n\n_c6 = Notes;\n\nconst Note = props => {\n  let unitCellHeight = 30;\n  let cellHeight = unitCellHeight;\n  let cellWidth = props.tempo * props.note.duration / 60 * props.dawResolution;\n  let topOffset = unitCellHeight * (props.offset - props.note.pitch);\n  let leftOffset = props.tempo * props.note.time_on / 60 * props.dawResolution;\n  let style = {\n    position: \"absolute\",\n    height: `${cellHeight}px`,\n    width: `${cellWidth}px`,\n    top: `${topOffset}px`,\n    left: `${leftOffset}px`\n  };\n\n  if (props.inactive) {\n    style.backgroundColor = props.color;\n  } else {\n    style.backgroundColor = \"blue\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 10\n  }, this);\n};\n\n_c7 = Note;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SongEditor\");\n$RefreshReg$(_c2, \"Settings\");\n$RefreshReg$(_c3, \"TrackViewer\");\n$RefreshReg$(_c4, \"ActiveArea\");\n$RefreshReg$(_c5, \"Subdivision\");\n$RefreshReg$(_c6, \"Notes\");\n$RefreshReg$(_c7, \"Note\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js"],"names":["keymaps","React","SongEditor","props","bpm","setBPM","useState","dawResolution","setDawResolution","subdivision","setSubdivision","allVisible","setAllVisible","tracks","height","Settings","e","target","value","TrackViewer","activeTrack","setActiveTrack","map","item","idx","instrument","notes","length","backgroundTracks","splice","ActiveArea","totalLengthInSeconds","numBoxes","Math","round","boxes","Array","from","keys","notePool","minNote","reduce","min","b","pitch","maxNote","max","filteredKeys","Object","filter","modifiedStyle","minWidth","header","body","join","pianoKeys","c","includes","reverse","position","Subdivision","markers","i","numBeats","parseInt","subStyle","left","top","push","Notes","COLORS","mainTrack","note","console","log","track","trackIndex","noteIndex","Note","unitCellHeight","cellHeight","cellWidth","tempo","duration","topOffset","offset","leftOffset","time_on","style","width","inactive","backgroundColor","color"],"mappings":"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","sourcesContent":["import \"./daw.css\"\nimport {keymaps} from \"./keymaps\"\nimport React from 'react'\n\nexport const SongEditor = (props) => {\n  const [bpm, setBPM] = React.useState(120)\n  const [dawResolution, setDawResolution] = React.useState(40)\n  const [subdivision, setSubdivision] = React.useState(4)\n  const [allVisible, setAllVisible] = React.useState(false)\n\n  if(props.tracks){\n    return <>\n      <div className=\"grid-container\">\n        <div>Logo</div>\n        <div style={{height: '100px'}}> top area\n        </div>\n        <div>\n          <Settings\n            setBPM={setBPM} bpm={bpm}\n            setDawResolution={setDawResolution} dawResolution={dawResolution}\n            subdivision={subdivision} setSubdivision={setSubdivision}\n            allVisible={allVisible} setAllVisible={setAllVisible} />\n          </div>\n        <div>\n          <TrackViewer\n            allVisible={allVisible}\n            tracks={props.tracks}\n            bpm={bpm}\n            dawResolution={dawResolution}\n            subdivision={subdivision}\n            allVisible={allVisible}/>\n        </div>\n      </div>\n    </>\n  } else {\n    return \"no parents\"\n  }\n}\n\nconst Settings = (props) => {\n  return <>\n    <div> {props.bpm} </div>\n    <div><input type=\"range\" min={50} max={150} value={props.bpm} onChange={(e) => props.setBPM(e.target.value)} /> </div>\n    <div> {props.dawResolution} </div>\n    <div><input type=\"range\" min={30} max={300} value={props.dawResolution} onChange={(e) => props.setDawResolution(e.target.value)} /></div>\n    <div> {props.subdivision} </div>\n    <div><input type=\"range\" min={1} max={8} value={props.subdivision} onChange={(e) => props.setSubdivision(e.target.value)} /></div>\n    <div> Show all: <input type=\"checkbox\" checked={props.allVisible} onChange={(e) => props.setAllVisible(!props.allVisible)} /></div>\n  </>\n}\n\nconst TrackViewer = (props) => {\n  const [activeTrack, setActiveTrack] = React.useState(0)\n  let tracks = props.tracks.map((item, idx) => {\n    return <div key={idx} onClick={() => setActiveTrack(idx)}>\n        {item.instrument} | {item.notes.length}\n        </div>//.notes.length\n  })\n\n  let backgroundTracks = [...props.tracks]\n  if (!props.allVisible) {backgroundTracks = null;}\n  else {backgroundTracks.splice(activeTrack, 1)}\n\n  return <>\n    <div className=\"mini-area\">\n      {tracks}\n    </div>\n    <div className=\"active-area\">\n      <ActiveArea\n        activeTrack={activeTrack}\n        {...props}\n        />\n    </div>\n  </>\n}\n\nconst ActiveArea = (props) => {\n  if(!props.activeTrack || !props.tracks[props.activeTrack].notes || props.tracks[props.activeTrack].notes.length === 0) {return \"Select a track\"}\n  let totalLengthInSeconds = 5\n  let numBoxes = Math.round(totalLengthInSeconds*props.bpm/60);\n  let boxes = Array.from(Array(numBoxes).keys())\n  let notePool = props.allVisible\n                    ? null\n                    : [...props.tracks[props.activeTrack].notes];\n  let minNote = notePool.reduce((min, b) => Math.min(min, b.pitch), notePool[0].pitch);\n  let maxNote = notePool.reduce((min, b) => Math.max(min, b.pitch), notePool[0].pitch);\n  let filteredKeys = Object.keys(keymaps).filter((item) => (item >= minNote && item <= maxNote))\n\n  let modifiedStyle = {minWidth:`${props.dawResolution}px`}\n\n  let header = <div className=\"key-row\">\n                    {boxes.map((item, idx) => {\n                      return <div className=\"daw-cell\" key={idx} style={modifiedStyle}>{idx}</div>\n                    })}\n                </div>\n\n  let body = filteredKeys.map((item, idx) => {\n      let b = boxes.map((item, idx) => {\n        return <div\n                  className={[\"background-cell\", \"daw-cell\"].join(\" \")}\n                  key={\"beats\"+idx}\n                  style={modifiedStyle}></div>\n      })\n      return <div className=\"key-row\" key={idx}>\n        {b}\n      </div>\n  })\n\n  let pianoKeys = filteredKeys.map((item, idx) => {\n    let c = keymaps[item].includes(\"#\") ? \"accidental\" : \"natural\";\n    return <div className={[c, \"keyNote\"].join(\" \")} key={idx}>{keymaps[item]}</div>\n  }).reverse()\n\n  return <>\n\n    <div>\n      <div className=\"accidental keyNote\"></div>\n      {pianoKeys}\n    </div>\n            <div className=\"daw\">\n              {header}\n              <div style={{position: \"relative\"}}>\n                {body}\n                <Notes\n                  minNote={minNote}\n                  offset={maxNote}\n                  {...props} />\n                <Subdivision\n                  numBeats={numBoxes}\n                  subdivision={props.subdivision}\n                  dawResolution={props.dawResolution}\n                  />\n              </div>\n            </div>\n        </>\n}\n\nconst Subdivision = (props) => {\n  let markers = []\n  for(let i = 0; i < props.numBeats*parseInt(props.subdivision); i++){\n    let subStyle={\n      left: `${props.dawResolution/parseInt(props.subdivision)*i}px`,\n      top: '0px'\n    }\n    markers.push( <div className=\"subdivision\" key={i} style={subStyle}/>   )\n  }\n  return markers\n}\n\nconst Notes = (props) => {\n  let COLORS = [\"red\", \"blue\", \"green\"]\n  let mainTrack = props.tracks[props.activeTrack].notes.map((note, idx) => {\n    console.log(note)\n    return <Note {...props} note={note} key={idx} />\n  })\n\n  let backgroundTracks = props.allVisible\n      ? props.backgroundTracks.map((track, trackIndex) => {\n        console.log(\"background track\", track)\n        return track.notes.map((note, noteIndex) => {\n          return <Note {...props} note={note} key={trackIndex+\"-\"+noteIndex} inactive={true} color={COLORS[trackIndex]}/>\n        })\n      })\n      : <></>;\n\n  return <>{mainTrack} {backgroundTracks}</>\n}\n\nconst Note = (props) => {\n  let unitCellHeight=30;\n\n  let cellHeight = unitCellHeight;\n  let cellWidth=(props.tempo*props.note.duration/60)*props.dawResolution;\n  let topOffset=unitCellHeight*(props.offset - props.note.pitch);\n  let leftOffset=props.tempo*(props.note.time_on)/60*props.dawResolution;\n\n  let style = {\n    position: \"absolute\",\n    height:`${cellHeight}px`,\n    width:`${cellWidth}px`,\n    top:`${topOffset}px`,\n    left:`${leftOffset}px`\n  }\n\n  if(props.inactive){\n    style.backgroundColor = props.color;\n  } else {\n    style.backgroundColor = \"blue\"\n  }\n\n  return <div className=\"note\" style={style}></div>\n}\n"]},"metadata":{},"sourceType":"module"}