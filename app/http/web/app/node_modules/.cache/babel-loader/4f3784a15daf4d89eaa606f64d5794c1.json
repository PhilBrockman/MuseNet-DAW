{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport APIClient from './apiClient';\nimport React from 'react';\nimport { MIDIer } from \"MIDI/MIDI\";\nimport { Abcjs } from \"MIDI/react-abcjs\";\nimport { OptionList } from \"Selection/OptionList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  _s();\n\n  const [generations, setGenerations] = React.useState(null);\n  const [parentData, setParentData] = React.useState(null);\n\n  const fetchParentData = async parentId => {\n    console.log(\"updating parent data\");\n    let data = await api.getGeneration(parentId);\n    setParentData(data.data);\n  };\n\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  };\n\n  const deleteGeneration = id => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    });\n  };\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const selectedOptions = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {};\n      selectedOptions.forEach(item => {\n        updatedSettings[item.id] = item.type === \"checkbox\" ? item.checked : item.value;\n      });\n      updatedSettings.parent_enc = document.getElementById(\"parentEnc\").value;\n      updatedSettings.parent_id = document.getElementById(\"parentId\").value;\n      return updatedSettings;\n    };\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData();\n    });\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Generations, {\n      generations: generations,\n      deleteGeneration: deleteGeneration,\n      setParentData: fetchParentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Abcjs, {\n      abcNotation: 'X:1\\nT:Example\\nM:4/4\\nC:Trad.\\nK:G\\n|:G\\'\\'ccc dedB|dedB dedB|c2ec B2dB|c2A2 A2BA|',\n      parserParams: {},\n      engraverParams: {\n        responsive: 'resize'\n      },\n      renderParams: {\n        viewportHorizontal: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Abcjs, {\n      parent: parentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionList, {\n      createGeneration: createGeneration,\n      parent: parentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+nI0BwLRicVMKhAaX65lGwC/AHA=\");\n\n_c = App;\n\nconst Generations = props => {\n  return !props.generations || props.generations.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [item.composer, \" | \", item.parent_id, \" | \", /*#__PURE__*/_jsxDEV(MIDIer, {\n        item: item,\n        api: api\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.setParentData(item[\"_id\"][\"$oid\"]),\n        children: \"parent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteGeneration(item[\"_id\"][\"$oid\"]),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => api.downloadMIDI(item),\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  });\n};\n\n_c2 = Generations;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Generations\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js"],"names":["APIClient","React","MIDIer","Abcjs","OptionList","api","App","generations","setGenerations","useState","parentData","setParentData","fetchParentData","parentId","console","log","data","getGeneration","fetchData","result","deleteGeneration","id","then","r","createGeneration","prepSelections","selectedOptions","document","querySelectorAll","updatedSettings","forEach","item","type","checked","value","parent_enc","getElementById","parent_id","useEffect","responsive","viewportHorizontal","Generations","props","map","index","composer","downloadMIDI"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;;AAEA,IAAIC,GAAG,GAAG,IAAIL,SAAJ,CAAc,aAAd,CAAV;;AAEA,SAASM,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAtC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,KAAK,CAACQ,QAAN,CAAe,IAAf,CAApC;;AAEA,QAAMG,eAAe,GAAG,MAAOC,QAAP,IAAoB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,QAAIC,IAAI,GAAG,MAAMX,GAAG,CAACY,aAAJ,CAAkBJ,QAAlB,CAAjB;AACAF,IAAAA,aAAa,CAACK,IAAI,CAACA,IAAN,CAAb;AACD,GAJD;;AAMA,QAAME,SAAS,GAAG,YAAY;AAC5B,UAAMC,MAAM,GAAG,MAAMd,GAAG,CAACE,WAAJ,EAArB;AACAC,IAAAA,cAAc,CAACW,MAAM,CAACH,IAAR,CAAd;AACD,GAHD;;AAKA,QAAMI,gBAAgB,GAAIC,EAAD,IAAQ;AAC/BhB,IAAAA,GAAG,CAACe,gBAAJ,CAAqBC,EAArB,EAAyBC,IAAzB,CAA8BC,CAAC,IAAI;AACjCL,MAAAA,SAAS;AACV,KAFD;AAGD,GAJD;;AAMA,QAAMM,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,cAAc,GAAG,MAAM;AAC3B,YAAMC,eAAe,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,gBAA1B,CAAxB;AACA,YAAMC,eAAe,GAAG,EAAxB;AACAH,MAAAA,eAAe,CAACI,OAAhB,CAAwBC,IAAI,IAAI;AAC9BF,QAAAA,eAAe,CAACE,IAAI,CAACV,EAAN,CAAf,GAA2BU,IAAI,CAACC,IAAL,KAAY,UAAZ,GACKD,IAAI,CAACE,OADV,GAEKF,IAAI,CAACG,KAFrC;AAGD,OAJD;AAKAL,MAAAA,eAAe,CAACM,UAAhB,GAA6BR,QAAQ,CAACS,cAAT,CAAwB,WAAxB,EAAqCF,KAAlE;AACAL,MAAAA,eAAe,CAACQ,SAAhB,GAA4BV,QAAQ,CAACS,cAAT,CAAwB,UAAxB,EAAoCF,KAAhE;AACA,aAAOL,eAAP;AACD,KAXD;;AAaAxB,IAAAA,GAAG,CAACmB,gBAAJ,CAAqBC,cAAc,EAAnC,EAAuCH,IAAvC,CAA4CC,CAAC,IAAI;AAC/CL,MAAAA,SAAS;AACV,KAFD;AAGD,GAjBD;;AAmBAjB,EAAAA,KAAK,CAACqC,SAAN,CAAgB,MAAM;AACpBpB,IAAAA,SAAS;AACV,GAFD,EAEG,EAFH;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,WAAW,EAAEX,WADf;AAEE,MAAA,gBAAgB,EAAEa,gBAFpB;AAGE,MAAA,aAAa,EAAER;AAHjB;AAAA;AAAA;AAAA;AAAA,YADF,eAMI,QAAC,KAAD;AACE,MAAA,WAAW,EACT,qFAFJ;AAIE,MAAA,YAAY,EAAE,EAJhB;AAKE,MAAA,cAAc,EAAE;AAAE2B,QAAAA,UAAU,EAAE;AAAd,OALlB;AAME,MAAA,YAAY,EAAE;AAAEC,QAAAA,kBAAkB,EAAE;AAAtB;AANhB;AAAA;AAAA;AAAA;AAAA,YANJ,eAcE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAE9B;AAAf;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE,QAAC,UAAD;AACE,MAAA,gBAAgB,EAAEc,gBADpB;AAEE,MAAA,MAAM,EAAEd;AAFV;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlEQJ,G;;KAAAA,G;;AAoET,MAAMmC,WAAW,GAAIC,KAAD,IAAW;AAC7B,SAAO,CAACA,KAAK,CAACnC,WAAP,IAAsBmC,KAAK,CAACnC,WAAN,CAAkBoC,GAAlB,CAAsB,CAACZ,IAAD,EAAOa,KAAP,KAAiB;AAClE,wBACE;AAAA,iBACGb,IAAI,CAACc,QADR,SACqBd,IAAI,CAACM,SAD1B,sBACuC,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEN,IAAd;AAAoB,QAAA,GAAG,EAAE1B;AAAzB;AAAA;AAAA;AAAA;AAAA,cADvC,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMqC,KAAK,CAAC/B,aAAN,CAAoBoB,IAAI,CAAC,KAAD,CAAJ,CAAY,MAAZ,CAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMW,KAAK,CAACtB,gBAAN,CAAuBW,IAAI,CAAC,KAAD,CAAJ,CAAY,MAAZ,CAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAM1B,GAAG,CAACyC,YAAJ,CAAiBf,IAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAAUa,KAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GAR4B,CAA7B;AASD,CAVD;;MAAMH,W;AAYN,eAAenC,GAAf","sourcesContent":["import APIClient from './apiClient'\nimport React from 'react'\nimport { MIDIer } from \"MIDI/MIDI\"\nimport { Abcjs } from \"MIDI/react-abcjs\"\nimport {OptionList} from \"Selection/OptionList\"\n\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  const [generations, setGenerations] = React.useState(null)\n  const [parentData, setParentData] = React.useState(null)\n\n  const fetchParentData = async (parentId) => {\n    console.log(\"updating parent data\")\n    let data = await api.getGeneration(parentId)\n    setParentData(data.data);\n  }\n\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  }\n\n  const deleteGeneration = (id) => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    })\n  }\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const selectedOptions = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {}\n      selectedOptions.forEach(item => {\n        updatedSettings[item.id] = item.type===\"checkbox\"\n                                      ? item.checked\n                                      : item.value\n      })\n      updatedSettings.parent_enc = document.getElementById(\"parentEnc\").value\n      updatedSettings.parent_id = document.getElementById(\"parentId\").value\n      return updatedSettings;\n    }\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData()\n    });\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Generations\n        generations={generations}\n        deleteGeneration={deleteGeneration}\n        setParentData={fetchParentData}\n        />\n        <Abcjs\n          abcNotation={\n            'X:1\\nT:Example\\nM:4/4\\nC:Trad.\\nK:G\\n|:G\\'\\'ccc dedB|dedB dedB|c2ec B2dB|c2A2 A2BA|'\n          }\n          parserParams={{}}\n          engraverParams={{ responsive: 'resize' }}\n          renderParams={{ viewportHorizontal: true }}\n        />\n      <Abcjs parent={parentData} />\n      <OptionList\n        createGeneration={createGeneration}\n        parent={parentData}\n        />\n    </div>\n  );\n}\n\nconst Generations = (props) => {\n  return !props.generations || props.generations.map((item, index) => {\n    return (\n      <div key={index}>\n        {item.composer} | {item.parent_id} | <MIDIer item={item} api={api}/>\n        <button onClick={() => props.setParentData(item[\"_id\"][\"$oid\"])}>parent</button>\n        <button onClick={() => props.deleteGeneration(item[\"_id\"][\"$oid\"])}>X</button>\n        <button onClick={() => api.downloadMIDI(item)}>Download</button>\n      </div>);\n  })\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}