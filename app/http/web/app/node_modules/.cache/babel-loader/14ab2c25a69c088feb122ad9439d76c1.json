{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport APIClient from './apiClient';\nimport React from 'react';\nimport { options } from \"Selection/MuseNetOptions\";\nimport { InputSelector } from \"Selection/Inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  _s();\n\n  const [generations, setGenerations] = React.useState(null);\n  const [parent, setParent] = React.useState(null);\n\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  };\n\n  const deleteGeneration = id => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    });\n  };\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const options = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {};\n      options.forEach(item => {\n        updatedSettings[item.id] = item.type === \"checkbox\" ? item.checked : item.value;\n      });\n      updatedSettings.parent_enc = \"\";\n      updatedSettings.parent_id = \"132122\";\n      return updatedSettings;\n    };\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData();\n    });\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Generations, {\n      generations: generations,\n      deleteGeneration: deleteGeneration,\n      setParent: setParent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionList, {\n      options: options,\n      createGeneration: createGeneration,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0jlYlHNsVXV2zGb6JkIeJ8Q5ecM=\");\n\n_c = App;\n\nconst ParentOptions = props => {\n  _s2();\n\n  const [parentData, setParentData] = React.useState(null);\n\n  const fetchParentData = async () => {\n    console.log(\"fetching parent data\");\n\n    if (props.parent) {\n      let data = await api.getGeneration(props.parent);\n      console.log(data.data);\n      setParentData(data.data);\n    }\n  };\n\n  const parentId = parentData ? parentData[\"_id\"][\"$oid\"] : null;\n  const enc = parentData ? parentData[\"enc\"] : \"\";\n  React.useEffect(() => fetchParentData(), [props.parent]); // let enc = props.parent ? props.parent.enc\n\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Parent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), parentId, enc]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ParentOptions, \"g6J1iE13YPIA4r6wEi0NaqCJrHs=\");\n\n_c2 = ParentOptions;\n\nconst OptionList = props => {\n  const unwrap = arr => {\n    return arr.map(child => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [child.title, /*#__PURE__*/_jsxDEV(InputSelector, {\n          data: child\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, child.toParam, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  let options = props.options.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), unwrap(item.children)]\n    }, item.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Parent Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.createGeneration(),\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParentOptions, {\n      parent: props.parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), options]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = OptionList;\n\nconst Generations = props => {\n  return !props.generations || props.generations.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [item.composer, \" | \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.setParent(item[\"_id\"][\"$oid\"]),\n        children: \"parent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 28\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteGeneration(item[\"_id\"][\"$oid\"]),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 106\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  });\n};\n\n_c4 = Generations;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ParentOptions\");\n$RefreshReg$(_c3, \"OptionList\");\n$RefreshReg$(_c4, \"Generations\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/App.js"],"names":["APIClient","React","options","InputSelector","api","App","generations","setGenerations","useState","parent","setParent","fetchData","result","data","deleteGeneration","id","then","r","createGeneration","prepSelections","document","querySelectorAll","updatedSettings","forEach","item","type","checked","value","parent_enc","parent_id","useEffect","ParentOptions","props","parentData","setParentData","fetchParentData","console","log","getGeneration","parentId","enc","OptionList","unwrap","arr","map","child","title","toParam","children","Generations","index","composer"],"mappings":"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","sourcesContent":["import APIClient from './apiClient'\nimport React from 'react'\nimport {options} from \"Selection/MuseNetOptions\"\nimport {InputSelector} from \"Selection/Inputs\"\n\nlet api = new APIClient(\"accessToken\");\n\nfunction App() {\n  const [generations, setGenerations] = React.useState(null)\n  const [parent, setParent] = React.useState(null)\n\n  const fetchData = async () => {\n    const result = await api.generations();\n    setGenerations(result.data);\n  }\n\n  const deleteGeneration = (id) => {\n    api.deleteGeneration(id).then(r => {\n      fetchData();\n    })\n  }\n\n  const createGeneration = () => {\n    const prepSelections = () => {\n      const options = document.querySelectorAll(\".MuseNetOption\");\n      const updatedSettings = {}\n      options.forEach(item => {\n        updatedSettings[item.id] = item.type===\"checkbox\"\n                                      ? item.checked\n                                      : item.value\n      })\n      updatedSettings.parent_enc = \"\"\n      updatedSettings.parent_id = \"132122\"\n      return updatedSettings;\n    }\n\n    api.createGeneration(prepSelections()).then(r => {\n      fetchData()\n    });\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Generations\n        generations={generations}\n        deleteGeneration={deleteGeneration}\n        setParent={setParent}\n        />\n      <OptionList\n        options={options}\n        createGeneration={createGeneration}\n        parent={parent}\n        />\n    </div>\n  );\n}\n\nconst ParentOptions = (props) => {\n  const [parentData, setParentData] = React.useState(null)\n\n  const fetchParentData = async () => {\n    console.log(\"fetching parent data\")\n    if(props.parent){\n      let data = await api.getGeneration(props.parent)\n      console.log(data.data)\n      setParentData(data.data);\n    }\n  }\n\n  const parentId = parentData ? parentData[\"_id\"][\"$oid\"] : null;\n  const enc = parentData ? parentData[\"enc\"] : \"\";\n\n  React.useEffect(() => fetchParentData(), [props.parent])\n  // let enc = props.parent ? props.parent.enc\n  return (\n    <fieldset>\n      <legend>Parent</legend>\n      {parentId}\n      {enc}\n    </fieldset>\n  );\n}\n\nconst OptionList = (props) => {\n  const unwrap = (arr) => {\n    return arr.map(child => {\n      return (\n      <div key={child.toParam}>\n        {child.title}\n        <InputSelector data={child} />\n      </div>);\n    })\n  }\n\n  let options = props.options.map(item => {\n    return(\n    <fieldset key={item.title}>\n      <legend>{item.title}</legend>\n      {unwrap(item.children)}\n    </fieldset>)\n  })\n\n  return (\n    <fieldset>\n      <legend>Parent Options</legend>\n      <button onClick={() => props.createGeneration()}>create</button>\n      <ParentOptions parent={props.parent} />\n      {options}\n    </fieldset>\n  );\n}\n\nconst Generations = (props) => {\n  return !props.generations || props.generations.map((item, index) => {\n    return (\n      <div key={index}>\n        {item.composer} | {<button onClick={() => props.setParent(item[\"_id\"][\"$oid\"])}>parent</button>} <button onClick={() => props.deleteGeneration(item[\"_id\"][\"$oid\"])}>X</button>\n      </div>);\n  })\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}