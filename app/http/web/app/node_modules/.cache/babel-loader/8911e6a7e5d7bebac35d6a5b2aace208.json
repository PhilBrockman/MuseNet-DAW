{"ast":null,"code":"//    abc_parse.js: parses a string representing ABC Music Notation into a usable internal structure.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar parseCommon = {};\n\nparseCommon.clone = function (source) {\n  var destination = {};\n\n  for (var property in source) if (source.hasOwnProperty(property)) destination[property] = source[property];\n\n  return destination;\n};\n\nparseCommon.cloneArray = function (source) {\n  var destination = [];\n\n  for (var i = 0; i < source.length; i++) {\n    destination.push(parseCommon.clone(source[i]));\n  }\n\n  return destination;\n};\n\nparseCommon.cloneHashOfHash = function (source) {\n  var destination = {};\n\n  for (var property in source) if (source.hasOwnProperty(property)) destination[property] = parseCommon.clone(source[property]);\n\n  return destination;\n};\n\nparseCommon.cloneHashOfArrayOfHash = function (source) {\n  var destination = {};\n\n  for (var property in source) if (source.hasOwnProperty(property)) destination[property] = parseCommon.cloneArray(source[property]);\n\n  return destination;\n};\n\nparseCommon.gsub = function (source, pattern, replacement) {\n  return source.split(pattern).join(replacement);\n};\n\nparseCommon.strip = function (str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n};\n\nparseCommon.startsWith = function (str, pattern) {\n  return str.indexOf(pattern) === 0;\n};\n\nparseCommon.endsWith = function (str, pattern) {\n  var d = str.length - pattern.length;\n  return d >= 0 && str.lastIndexOf(pattern) === d;\n};\n\nparseCommon.each = function (arr, iterator, context) {\n  for (var i = 0, length = arr.length; i < length; i++) iterator.apply(context, [arr[i], i]);\n};\n\nparseCommon.last = function (arr) {\n  if (arr.length === 0) return null;\n  return arr[arr.length - 1];\n};\n\nparseCommon.compact = function (arr) {\n  var output = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) output.push(arr[i]);\n  }\n\n  return output;\n};\n\nparseCommon.detect = function (arr, iterator) {\n  for (var i = 0; i < arr.length; i++) {\n    if (iterator(arr[i])) return true;\n  }\n\n  return false;\n}; // The following is a polyfill for Object.remove for IE9, IE10, and IE11.\n// from:https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/remove()/remove().md\n\n\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('remove')) {\n      return;\n    }\n\n    Object.defineProperty(item, 'remove', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function remove() {\n        if (this.parentNode !== null) this.parentNode.removeChild(this);\n      }\n    });\n  });\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\n\nmodule.exports = parseCommon;","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/node_modules/abcjs/src/parse/abc_common.js"],"names":["parseCommon","clone","source","destination","property","hasOwnProperty","cloneArray","i","length","push","cloneHashOfHash","cloneHashOfArrayOfHash","gsub","pattern","replacement","split","join","strip","str","replace","startsWith","indexOf","endsWith","d","lastIndexOf","each","arr","iterator","context","apply","last","compact","output","detect","forEach","item","Object","defineProperty","configurable","enumerable","writable","value","remove","parentNode","removeChild","Element","prototype","CharacterData","DocumentType","module","exports"],"mappings":"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","sourcesContent":["//    abc_parse.js: parses a string representing ABC Music Notation into a usable internal structure.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar parseCommon = {};\n\nparseCommon.clone = function(source) {\n\tvar destination = {};\n\tfor (var property in source)\n\t\tif (source.hasOwnProperty(property))\n\t\t\tdestination[property] = source[property];\n\treturn destination;\n};\n\nparseCommon.cloneArray = function(source) {\n\tvar destination = [];\n\tfor (var i = 0; i < source.length; i++) {\n\t\tdestination.push(parseCommon.clone(source[i]));\n\t}\n\treturn destination;\n};\n\nparseCommon.cloneHashOfHash = function(source) {\n\tvar destination = {};\n\tfor (var property in source)\n\t\tif (source.hasOwnProperty(property))\n\t\t\tdestination[property] = parseCommon.clone(source[property]);\n\treturn destination;\n};\n\nparseCommon.cloneHashOfArrayOfHash = function(source) {\n\tvar destination = {};\n\tfor (var property in source)\n\t\tif (source.hasOwnProperty(property))\n\t\t\tdestination[property] = parseCommon.cloneArray(source[property]);\n\treturn destination;\n};\n\nparseCommon.gsub = function(source, pattern, replacement) {\n\treturn source.split(pattern).join(replacement);\n};\n\nparseCommon.strip = function(str) {\n\treturn str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n};\n\nparseCommon.startsWith = function(str, pattern) {\n\treturn str.indexOf(pattern) === 0;\n};\n\nparseCommon.endsWith = function(str, pattern) {\n\tvar d = str.length - pattern.length;\n\treturn d >= 0 && str.lastIndexOf(pattern) === d;\n};\n\nparseCommon.each = function(arr, iterator, context) {\n\tfor (var i = 0, length = arr.length; i < length; i++)\n\t  iterator.apply(context, [arr[i],i]);\n};\n\nparseCommon.last = function(arr) {\n\tif (arr.length === 0)\n\t\treturn null;\n\treturn arr[arr.length-1];\n};\n\nparseCommon.compact = function(arr) {\n\tvar output = [];\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (arr[i])\n\t\t\toutput.push(arr[i]);\n\t}\n\treturn output;\n};\n\nparseCommon.detect = function(arr, iterator) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (iterator(arr[i]))\n\t\t\treturn true;\n\t}\n\treturn false;\n};\n\n// The following is a polyfill for Object.remove for IE9, IE10, and IE11.\n// from:https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/remove()/remove().md\n(function (arr) {\n\tarr.forEach(function (item) {\n\t\tif (item.hasOwnProperty('remove')) {\n\t\t\treturn;\n\t\t}\n\t\tObject.defineProperty(item, 'remove', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\twritable: true,\n\t\t\tvalue: function remove() {\n\t\t\t\tif (this.parentNode !== null)\n\t\t\t\t\tthis.parentNode.removeChild(this);\n\t\t\t}\n\t\t});\n\t});\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\n\nmodule.exports = parseCommon;\n"]},"metadata":{},"sourceType":"script"}