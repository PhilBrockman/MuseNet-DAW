{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/Selection/Inputs.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SliderInput = props => {\n  _s();\n\n  const [value, setValue] = React.useState(props.defaultValue);\n\n  function handleChange(e) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"selections\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SliderInput, \"ihCvcaxYfMqenIrjG2FjJ/w7Rb4=\");\n\n_c = SliderInput;\nexport const InputSelector = props => {\n  const data = props.data;\n  const choice = data.inputType;\n\n  if (choice === \"select\") {\n    let options = data.options.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 44\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      id: data.toParam,\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  } else if (choice === \"slider\") {\n    return /*#__PURE__*/_jsxDEV(SliderInput, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else if (choice === \"checkboxinput\") {\n    return failed(choice);\n  } else {\n    return failed(\"failure\");\n  }\n};\n_c2 = InputSelector;\n\nconst failed = text => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: text\n}, void 0, false);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SliderInput\");\n$RefreshReg$(_c2, \"InputSelector\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/Selection/Inputs.js"],"names":["React","SliderInput","props","value","setValue","useState","defaultValue","handleChange","e","InputSelector","data","choice","inputType","options","map","item","toParam","failed","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAeH,KAAK,CAACI,YAArB,CAA1B;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAwB,CAEvB;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZD;;GAAMP,W;;KAAAA,W;AAcN,OAAO,MAAMQ,aAAa,GAAIP,KAAD,IAAW;AACtC,QAAMQ,IAAI,GAAGR,KAAK,CAACQ,IAAnB;AACA,QAAMC,MAAM,GAAGD,IAAI,CAACE,SAApB;;AAEA,MAAGD,MAAM,KAAK,QAAd,EAAuB;AACrB,QAAIE,OAAO,GAAGH,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,IAAI,iBAAI;AAAQ,MAAA,KAAK,EAAEA,IAAf;AAAA,gBAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAzB,CAAd;AACA,wBACE;AAAQ,MAAA,EAAE,EAAEL,IAAI,CAACM,OAAjB;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAPD,MAOO,IAAIF,MAAM,KAAK,QAAf,EAAwB;AAC7B,wBACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJM,MAIA,IAAIC,MAAM,KAAK,eAAf,EAA+B;AACpC,WAAOM,MAAM,CAACN,MAAD,CAAb;AACD,GAFM,MAEA;AACL,WAAOM,MAAM,CAAC,SAAD,CAAb;AACD;AACF,CApBM;MAAMR,a;;AAsBb,MAAMQ,MAAM,GAAIC,IAAD,iBAAU;AAAA,YAAGA;AAAH,iBAAzB","sourcesContent":["import React from 'react';\n\nconst SliderInput = (props) => {\n  const [value, setValue] = React.useState(props.defaultValue)\n\n  function handleChange(e){\n\n  }\n\n  return (\n    <div>\n      selections\n    </div>\n  );\n}\n\nexport const InputSelector = (props) => {\n  const data = props.data\n  const choice = data.inputType;\n\n  if(choice === \"select\"){\n    let options = data.options.map(item => <option value={item}>{item}</option> )\n    return (\n      <select id={data.toParam}>\n        {options}\n      </select>\n    );\n  } else if (choice === \"slider\"){\n    return (\n      <SliderInput data={data}/>\n    );\n  } else if (choice === \"checkboxinput\"){\n    return failed(choice)\n  } else {\n    return failed(\"failure\")\n  }\n}\n\nconst failed = (text) => <>{text}</>;\n"]},"metadata":{},"sourceType":"module"}