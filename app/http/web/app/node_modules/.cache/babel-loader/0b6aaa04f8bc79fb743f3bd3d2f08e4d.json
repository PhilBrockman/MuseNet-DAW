{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js\",\n    _s = $RefreshSig$();\n\nimport \"./daw.css\";\nimport { keymaps } from \"./keymaps\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SongEditor = props => {\n  if (props.current) {\n    let tracks = props.current.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TrackViewer, {\n          tracks: tracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  } else {\n    return \"no parents\";\n  }\n};\n_c = SongEditor;\n\nconst TrackViewer = props => {\n  _s();\n\n  const [activeTrack, setActiveTrack] = React.useState(0);\n  let tracks = props.tracks.map((item, idx) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setActiveTrack(idx),\n      children: item.notes.length\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this); //.notes.length\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-area\",\n      children: tracks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ActiveArea, {\n        active: props.tracks[activeTrack]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TrackViewer, \"xd5tPIV4RyVQCOI+NgzqfN3EuTg=\");\n\n_c2 = TrackViewer;\n\nconst ActiveArea = props => {\n  let notes = props.active.notes.splice(0, 5);\n  return notes.map(item => {\n    return keymaps[item.pitch] + \", \";\n  });\n};\n\n_c3 = ActiveArea;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SongEditor\");\n$RefreshReg$(_c2, \"TrackViewer\");\n$RefreshReg$(_c3, \"ActiveArea\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js"],"names":["keymaps","React","SongEditor","props","current","tracks","data","TrackViewer","activeTrack","setActiveTrack","useState","map","item","idx","notes","length","ActiveArea","active","splice","pitch"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,OAAR,QAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnC,MAAGA,KAAK,CAACC,OAAT,EAAiB;AACf,QAAIC,MAAM,GAAGF,KAAK,CAACC,OAAN,CAAcE,IAA3B;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFO,eAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHO,eAIP;AAAA,+BAAK,QAAC,WAAD;AAAa,UAAA,MAAM,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAJO;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAMD,GARD,MAQO;AACL,WAAO,YAAP;AACD;AACF,CAZM;KAAMH,U;;AAcb,MAAMK,WAAW,GAAIJ,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,KAAK,CAACS,QAAN,CAAe,CAAf,CAAtC;AACA,MAAIL,MAAM,GAAGF,KAAK,CAACE,MAAN,CAAaM,GAAb,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC3C,wBAAO;AAAe,MAAA,OAAO,EAAE,MAAMJ,cAAc,CAACI,GAAD,CAA5C;AAAA,gBAAoDD,IAAI,CAACE,KAAL,CAAWC;AAA/D,OAAUF,GAAV;AAAA;AAAA;AAAA;AAAA,YAAP,CAD2C,CACwC;AACpF,GAFY,CAAb;AAIA,sBAAO;AAAA,4BACP;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAA4BR;AAA5B;AAAA;AAAA;AAAA;AAAA,YADO,eAEP;AAAA,6BAAK,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,CAAaG,WAAb;AAApB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAFO;AAAA,kBAAP;AAID,CAVD;;GAAMD,W;;MAAAA,W;;AAYN,MAAMS,UAAU,GAAIb,KAAD,IAAW;AAC5B,MAAIW,KAAK,GAAGX,KAAK,CAACc,MAAN,CAAaH,KAAb,CAAmBI,MAAnB,CAA0B,CAA1B,EAA6B,CAA7B,CAAZ;AACA,SAAOJ,KAAK,CAACH,GAAN,CAAUC,IAAI,IAAI;AACvB,WAAOZ,OAAO,CAACY,IAAI,CAACO,KAAN,CAAP,GAAsB,IAA7B;AACD,GAFM,CAAP;AAGD,CALD;;MAAMH,U","sourcesContent":["import \"./daw.css\"\nimport {keymaps} from \"./keymaps\"\nimport React from 'react'\n\nexport const SongEditor = (props) => {\n  if(props.current){\n    let tracks = props.current.data\n    return <div className=\"grid-container\">\n    <div>Logo</div>\n    <div>Settings</div>\n    <div>Sidebar</div>\n    <div><TrackViewer tracks={tracks} /></div>\n    </div>\n  } else {\n    return \"no parents\"\n  }\n}\n\nconst TrackViewer = (props) => {\n  const [activeTrack, setActiveTrack] = React.useState(0)\n  let tracks = props.tracks.map((item, idx) => {\n    return <div key={idx} onClick={() => setActiveTrack(idx)}>{item.notes.length}</div>//.notes.length\n  })\n\n  return <>\n  <div className=\"mini-area\">{tracks}</div>\n  <div><ActiveArea active={props.tracks[activeTrack]} /></div>\n  </>\n}\n\nconst ActiveArea = (props) => {\n  let notes = props.active.notes.splice(0, 5)\n  return notes.map(item => {\n    return keymaps[item.pitch] + \", \"\n  })\n}\n"]},"metadata":{},"sourceType":"module"}