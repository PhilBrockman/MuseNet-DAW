{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/Selection/Inputs.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SliderInput = props => {\n  _s();\n\n  const data = props.data;\n  const step_size = data.max < 3 ? .01 : 1;\n  const [value, setValue] = React.useState(1);\n  React.useEffect(() => {\n    if (props.parent && props.parent[data.toParam]) {\n      setValue(props.parent[data.toParam]);\n    } else {\n      setValue(data.default);\n    }\n  }, [props.parent, data.toParam, data.default]);\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"MuseNetOption\",\n      id: data.toParam,\n      type: \"range\",\n      min: data.min,\n      max: data.max,\n      value: value,\n      step: step_size,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), value]\n  }, void 0, true);\n};\n\n_s(SliderInput, \"O4P1xnMTi7pTAFiz4aVvPdKWn7Q=\");\n\n_c = SliderInput;\n\nconst Checkbox = props => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"MuseNetOption\",\n    type: \"checkbox\",\n    id: props.data,\n    value: props.data,\n    checked: props.checked,\n    onChange: props.onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Checkbox;\n\nconst Checkboxes = props => {\n  _s2();\n\n  const [values, setValues] = React.useState([]);\n  React.useEffect(() => {\n    const setValuesFromParent = () => {\n      let tmp = [];\n      Object.keys(props.parent).map(item => {\n        if (props.parent[item] === true) {\n          tmp.push(item);\n        }\n\n        ;\n        return null;\n      });\n      return tmp;\n    };\n\n    if (props.parent) {\n      setValues(setValuesFromParent());\n    } else {\n      setValues(props.data.default);\n    }\n  }, [props.parent, props.data.default]);\n\n  function handleClick(e) {\n    let target = e.target.value;\n    let newValues = values.includes(target) ? values.filter(i => i !== target) : [...values, target];\n    setValues([...newValues]);\n  }\n\n  let boxes = props.data.options.map(item => /*#__PURE__*/_jsxDEV(Checkbox, {\n    data: item,\n    checked: values.includes(item),\n    onClick: handleClick\n  }, item, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 46\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [boxes, JSON.stringify(values)]\n  }, void 0, true);\n};\n\n_s2(Checkboxes, \"v436fEfQmiRbYObwkf4GshYa39M=\");\n\n_c3 = Checkboxes;\n\nconst Dropdown = props => {\n  let options = props.data.options.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: item,\n    children: item\n  }, item, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 48\n  }, this));\n  console.log(props.parent[data.toParam]); // let default = props.parent ?\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: data.toParam,\n    className: \"MuseNetOption\",\n    children: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Dropdown;\nexport const InputSelector = props => {\n  const data = props.data;\n  const choice = data.inputType;\n\n  if (choice === \"select\") {\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      data: data,\n      parent: props.parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  } else if (choice === \"slider\") {\n    return /*#__PURE__*/_jsxDEV(SliderInput, {\n      data: data,\n      parent: props.parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  } else if (choice === \"checkboxinput\") {\n    return /*#__PURE__*/_jsxDEV(Checkboxes, {\n      data: data,\n      parent: props.parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  } else {\n    return failed(\"failure\");\n  }\n};\n_c5 = InputSelector;\n\nconst failed = text => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: text\n}, void 0, false);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SliderInput\");\n$RefreshReg$(_c2, \"Checkbox\");\n$RefreshReg$(_c3, \"Checkboxes\");\n$RefreshReg$(_c4, \"Dropdown\");\n$RefreshReg$(_c5, \"InputSelector\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/Selection/Inputs.js"],"names":["React","SliderInput","props","data","step_size","max","value","setValue","useState","useEffect","parent","toParam","default","handleChange","e","target","min","Checkbox","checked","onClick","Checkboxes","values","setValues","setValuesFromParent","tmp","Object","keys","map","item","push","handleClick","newValues","includes","filter","i","boxes","options","JSON","stringify","Dropdown","console","log","InputSelector","choice","inputType","failed","text"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst SliderInput = (props) => {\n  const data = props.data\n  const step_size = data.max < 3 ? .01 : 1;\n  const [value, setValue] = React.useState(1);\n\n  React.useEffect(() => {\n    if(props.parent && props.parent[data.toParam]){\n      setValue(props.parent[data.toParam])\n    } else {\n      setValue(data.default)\n    }\n  }, [props.parent, data.toParam, data.default])\n\n  function handleChange(e){\n    setValue(e.target.value)\n  }\n\n  return (\n    <>\n      <input\n        className=\"MuseNetOption\"\n        id={data.toParam}\n        type=\"range\"\n        min={data.min}\n        max={data.max}\n        value={value}\n        step={step_size}\n        onChange={handleChange}/>\n      {value}\n    </>\n  );\n}\n\nconst Checkbox = (props) =>{\n  return(\n    <input\n      className=\"MuseNetOption\"\n      type=\"checkbox\"\n      id={props.data}\n      value={props.data}\n      checked={props.checked}\n      onChange={props.onClick}\n      />\n  );\n}\n\nconst Checkboxes = (props) => {\n  const [values, setValues] = React.useState([])\n\n  React.useEffect(() => {\n    const setValuesFromParent = () => {\n      let tmp = [];\n      Object.keys(props.parent).map(item => {\n                if(props.parent[item] === true){\n                  tmp.push(item)\n                }; return null;\n              });\n      return tmp;\n    }\n\n    if(props.parent){\n      setValues(setValuesFromParent())\n    } else {\n      setValues(props.data.default)\n    }\n  }, [props.parent, props.data.default])\n\n  function handleClick(e){\n    let target = e.target.value;\n    let newValues = values.includes(target)\n                      ? values.filter(i => i !== target)\n                      : [...values, target]\n    setValues([...newValues])\n  }\n\n  let boxes = props.data.options.map(item => <Checkbox\n    key={item}\n    data={item}\n    checked={values.includes(item)}\n    onClick={handleClick}\n    />);\n\n  return (\n    <>\n      {boxes}\n      {JSON.stringify(values)}\n    </>\n  )\n}\n\nconst Dropdown = (props) => {\n  let options = props.data.options.map(item => <option key={item} value={item}>{item}</option> )\n  console.log(props.parent[data.toParam])\n  // let default = props.parent ?\n\n  return (\n    <select\n      id={data.toParam}\n      className=\"MuseNetOption\">\n      {options}\n    </select>\n  );\n}\n\nexport const InputSelector = (props) => {\n  const data = props.data\n  const choice = data.inputType;\n\n  if(choice === \"select\"){\n    return <Dropdown data={data} parent={props.parent} />\n  } else if (choice === \"slider\"){\n    return <SliderInput data={data} parent={props.parent}/>\n  } else if (choice === \"checkboxinput\"){\n    return <Checkboxes data={data} parent={props.parent} />\n  } else {\n    return failed(\"failure\")\n  }\n}\n\nconst failed = (text) => <>{text}</>;\n"]},"metadata":{},"sourceType":"module"}