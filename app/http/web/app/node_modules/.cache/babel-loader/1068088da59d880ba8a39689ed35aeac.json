{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js\",\n    _s = $RefreshSig$();\n\nimport \"./daw.css\";\nimport { keymaps } from \"./keymaps\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst secsPerBeat = .13;\nconst beatsPerMeasure = 4;\nexport const SongEditor = props => {\n  if (props.current) {\n    let tracks = props.current.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TrackViewer, {\n          tracks: tracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  } else {\n    return \"no parents\";\n  }\n};\n_c = SongEditor;\n\nconst TrackViewer = props => {\n  _s();\n\n  const [activeTrack, setActiveTrack] = React.useState(0);\n  let tracks = props.tracks.map((item, idx) => {\n    console.log(\"tracking\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setActiveTrack(idx),\n      children: [item.instrument, \" | \", item.notes.length]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this); //.notes.length\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-area\",\n      children: tracks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-area\",\n      children: /*#__PURE__*/_jsxDEV(ActiveArea, {\n        active: props.tracks[activeTrack]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TrackViewer, \"xd5tPIV4RyVQCOI+NgzqfN3EuTg=\");\n\n_c2 = TrackViewer;\n\nconst ActiveArea = props => {\n  if (!props.active || !props.active.notes || props.active.notes.length === 0) {\n    return \"Select a track\";\n  }\n\n  let numBoxes = Math.round(5 / secsPerBeat);\n  let boxes = Array.from(Array(numBoxes).keys());\n  let notes = [...props.active.notes].splice(0, 5); //#FIXME\n\n  let minNote = notes.reduce((min, b) => Math.min(min, b.pitch), notes[0].pitch);\n  let maxNote = notes.reduce((min, b) => Math.max(min, b.pitch), notes[0].pitch);\n\n  let header = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"key-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accidental daw-cell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this), boxes.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daw-cell\",\n        children: (secsPerBeat * idx).toFixed(2)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 30\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 16\n  }, this);\n\n  let filteredKeys = Object.keys(keymaps).filter(item => item >= minNote && item <= maxNote);\n  let body = filteredKeys.map((item, idx) => {\n    let b = boxes.map((item, idx) => {\n      let cN = (item + 1) % beatsPerMeasure ? \"downbeat\" : \"beat\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: [cN, \"daw-cell\"].join(\" \")\n      }, \"beats\" + idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key-row\",\n      children: b\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this);\n  });\n  let pianoKeys = filteredKeys.map((item, idx) => {\n    let c = keymaps[item].includes(\"#\") ? \"accidental\" : \"natural\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [c, \"daw-cell\"].join(\" \"),\n      children: keymaps[item]\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: pianoKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [body, /*#__PURE__*/_jsxDEV(Notes, {\n          minNote: minNote,\n          notes: notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true); // return notes.map((item, idx) => {\n  //   return <div key={idx}>{[keymaps[item.pitch], item.duration, item.time_on].join(\"|\")}</div>\n  // })\n};\n\n_c3 = ActiveArea;\n\nconst Notes = props => {\n  console.log(props.minNote);\n  let style = {\n    position: \"absolute\",\n    height: \"40px\",\n    width: \"40px\",\n    top: \"0px\",\n    left: \"40px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n};\n\n_c4 = Notes;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SongEditor\");\n$RefreshReg$(_c2, \"TrackViewer\");\n$RefreshReg$(_c3, \"ActiveArea\");\n$RefreshReg$(_c4, \"Notes\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js"],"names":["keymaps","React","secsPerBeat","beatsPerMeasure","SongEditor","props","current","tracks","data","TrackViewer","activeTrack","setActiveTrack","useState","map","item","idx","console","log","instrument","notes","length","ActiveArea","active","numBoxes","Math","round","boxes","Array","from","keys","splice","minNote","reduce","min","b","pitch","maxNote","max","header","toFixed","filteredKeys","Object","filter","body","cN","join","pianoKeys","c","includes","position","Notes","style","height","width","top","left"],"mappings":"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","sourcesContent":["import \"./daw.css\"\nimport {keymaps} from \"./keymaps\"\nimport React from 'react'\n\nconst secsPerBeat = .13;\nconst beatsPerMeasure = 4;\n\nexport const SongEditor = (props) => {\n  if(props.current){\n    let tracks = props.current.data\n    return <div className=\"grid-container\">\n    <div>Logo</div>\n    <div>Settings</div>\n    <div>Sidebar</div>\n    <div><TrackViewer tracks={tracks} /></div>\n    </div>\n  } else {\n    return \"no parents\"\n  }\n}\n\nconst TrackViewer = (props) => {\n  const [activeTrack, setActiveTrack] = React.useState(0)\n  let tracks = props.tracks.map((item, idx) => {\n    console.log(\"tracking\")\n    return <div key={idx} onClick={() => setActiveTrack(idx)}>\n        {item.instrument} | {item.notes.length}\n        </div>//.notes.length\n  })\n\n  return <>\n  <div className=\"mini-area\">{tracks}</div>\n  <div className=\"active-area\"><ActiveArea active={props.tracks[activeTrack]} /></div>\n  </>\n}\n\nconst ActiveArea = (props) => {\n  if(!props.active || !props.active.notes || props.active.notes.length === 0) {return \"Select a track\"}\n  let numBoxes = Math.round(5/secsPerBeat);\n  let boxes = Array.from(Array(numBoxes).keys())\n  let notes = [...props.active.notes].splice(0, 5) //#FIXME\n  let minNote = notes.reduce((min, b) => Math.min(min, b.pitch), notes[0].pitch);\n  let maxNote = notes.reduce((min, b) => Math.max(min, b.pitch), notes[0].pitch);\n\n  let header = <div className=\"key-row\">\n                  <div className=\"accidental daw-cell\"></div>\n                    {boxes.map((item, idx) => {\n                      return <div className=\"daw-cell\" key={idx}>{(secsPerBeat * idx).toFixed(2)}</div>\n                    })}\n                </div>\n\n  let filteredKeys = Object.keys(keymaps).filter((item) => (item >= minNote && item <= maxNote))\n\n  let body = filteredKeys.map((item, idx) => {\n      let b = boxes.map((item, idx) => {\n        let cN = (item + 1) % beatsPerMeasure ? \"downbeat\" : \"beat\";\n        return <div className={[cN, \"daw-cell\"].join(\" \")} key={\"beats\"+idx}></div>\n      })\n      return <div className=\"key-row\" key={idx}>\n        {b}\n      </div>\n  })\n\n  let pianoKeys = filteredKeys.map((item, idx) => {\n    let c = keymaps[item].includes(\"#\") ? \"accidental\" : \"natural\";\n    return <div className={[c, \"daw-cell\"].join(\" \")} key={idx}>{keymaps[item]}</div>\n  })\n\n  return <>\n            <div>\n              {header}\n            </div>\n            <div className=\"daw\">\n              <div>\n                {pianoKeys}\n              </div>\n              <div style={{position: \"relative\"}}>\n                {body}\n                <Notes minNote={minNote} notes={notes}/>\n              </div>\n            </div>\n        </>\n  // return notes.map((item, idx) => {\n  //   return <div key={idx}>{[keymaps[item.pitch], item.duration, item.time_on].join(\"|\")}</div>\n  // })\n}\n\nconst Notes = (props) => {\n  console.log(props.minNote)\n  let style = {position: \"absolute\", height:\"40px\", width:\"40px\", top:\"0px\", left:\"40px\"}\n  return <div className=\"note\" style={style}></div>\n}\n"]},"metadata":{},"sourceType":"module"}