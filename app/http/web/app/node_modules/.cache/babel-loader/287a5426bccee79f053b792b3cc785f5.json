{"ast":null,"code":"var _jsxFileName = \"/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./daw.css\";\nimport { keymaps } from \"./keymaps\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst beatsPerMeasure = 4; // const BPMtoSPB = (BPM) => {\n//   60s/120b\n// }\n\nexport const SongEditor = props => {\n  _s();\n\n  const [bpm, setBPM] = React.useState(120);\n  const [dawResolution, setDawResolution] = React.useState(40);\n\n  if (props.current) {\n    let tracks = props.current.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Settings, {\n          setBPM: setBPM,\n          bpm: bpm,\n          setDawResolution: setDawResolution,\n          dawResolution: dawResolution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TrackViewer, {\n          tracks: tracks,\n          bpm: bpm,\n          dawResolution: dawResolution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  } else {\n    return \"no parents\";\n  }\n};\n\n_s(SongEditor, \"yZ8fzI+ElTcQ077SaUmFZQEuiE4=\");\n\n_c = SongEditor;\n\nconst Settings = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 50,\n        max: 150,\n        value: props.bpm,\n        onChange: e => props.setBPM(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }, this), \" \", props.bpm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 30,\n        max: 100,\n        value: props.dawResolution,\n        onChange: e => props.setDawResolution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this), \" \", props.dawResolution]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Settings;\n\nconst TrackViewer = props => {\n  _s2();\n\n  const [activeTrack, setActiveTrack] = React.useState(0);\n  let tracks = props.tracks.map((item, idx) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setActiveTrack(idx),\n      children: [item.instrument, \" | \", item.notes.length]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this); //.notes.length\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-area\",\n      children: tracks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-area\",\n      children: /*#__PURE__*/_jsxDEV(ActiveArea, {\n        active: props.tracks[activeTrack],\n        bpm: props.bpm,\n        dawResolution: props.dawResolution\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TrackViewer, \"xd5tPIV4RyVQCOI+NgzqfN3EuTg=\");\n\n_c3 = TrackViewer;\n\nconst ActiveArea = props => {\n  if (!props.active || !props.active.notes || props.active.notes.length === 0) {\n    return \"Select a track\";\n  }\n\n  let totalLengthInSeconds = 5;\n  let numBoxes = Math.round(totalLengthInSeconds * props.bpm / 60);\n  let boxes = Array.from(Array(numBoxes).keys());\n  let notes = [...props.active.notes]; //.splice(0, 15) //#FIXME\n\n  let minNote = notes.reduce((min, b) => Math.min(min, b.pitch), notes[0].pitch);\n  let maxNote = notes.reduce((min, b) => Math.max(min, b.pitch), notes[0].pitch);\n  let filteredKeys = Object.keys(keymaps).filter(item => item >= minNote && item <= maxNote);\n  let modifiedStyle = {\n    minWidth: `${props.dawResolution}px`\n  };\n\n  let header = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"key-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accidental keyNote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), boxes.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daw-cell\",\n        style: modifiedStyle,\n        children: idx\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 30\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 16\n  }, this);\n\n  let body = filteredKeys.map((item, idx) => {\n    let b = boxes.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: [\"background-cell\", \"daw-cell\"].join(\" \"),\n        style: modifiedStyle\n      }, \"beats\" + idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 16\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key-row\",\n      children: b\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 14\n    }, this);\n  });\n  let pianoKeys = filteredKeys.map((item, idx) => {\n    let c = keymaps[item].includes(\"#\") ? \"accidental\" : \"natural\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [c, \"keyNote\"].join(\" \"),\n      children: keymaps[item]\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  }).reverse();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: pianoKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [body, /*#__PURE__*/_jsxDEV(Notes, {\n          minNote: minNote,\n          notes: notes,\n          offset: maxNote,\n          tempo: props.bpm,\n          dawResolution: props.dawResolution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true); // return notes.map((item, idx) => {\n  //   return <div key={idx}>{[keymaps[item.pitch], item.duration, item.time_on].join(\"|\")}</div>\n  // })\n};\n\n_c4 = ActiveArea;\n\nconst Notes = props => {\n  return props.notes.map((note, idx) => {\n    return /*#__PURE__*/_createElement(Note, { ...props,\n      note: note,\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }\n    });\n  });\n};\n\n_c5 = Notes;\n\nconst Note = props => {\n  let unitCellHeight = 30;\n  let cellHeight = unitCellHeight;\n  let cellWidth = props.tempo * props.note.duration / 60 * props.dawResolution;\n  let topOffset = unitCellHeight * (props.offset - props.note.pitch);\n  let leftOffset = props.tempo * props.note.time_on / 60 * props.dawResolution;\n  let style = {\n    position: \"absolute\",\n    height: `${cellHeight}px`,\n    width: `${cellWidth}px`,\n    top: `${topOffset}px`,\n    left: `${leftOffset}px`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 10\n  }, this);\n};\n\n_c6 = Note;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SongEditor\");\n$RefreshReg$(_c2, \"Settings\");\n$RefreshReg$(_c3, \"TrackViewer\");\n$RefreshReg$(_c4, \"ActiveArea\");\n$RefreshReg$(_c5, \"Notes\");\n$RefreshReg$(_c6, \"Note\");","map":{"version":3,"sources":["/Users/philbrockman/coding/MusicalGens/app/http/web/app/src/DAW/SongEditor.js"],"names":["keymaps","React","beatsPerMeasure","SongEditor","props","bpm","setBPM","useState","dawResolution","setDawResolution","current","tracks","data","Settings","e","target","value","TrackViewer","activeTrack","setActiveTrack","map","item","idx","instrument","notes","length","ActiveArea","active","totalLengthInSeconds","numBoxes","Math","round","boxes","Array","from","keys","minNote","reduce","min","b","pitch","maxNote","max","filteredKeys","Object","filter","modifiedStyle","minWidth","header","body","join","pianoKeys","c","includes","reverse","position","Notes","note","Note","unitCellHeight","cellHeight","cellWidth","tempo","duration","topOffset","offset","leftOffset","time_on","style","height","width","top","left"],"mappings":"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","sourcesContent":["import \"./daw.css\"\nimport {keymaps} from \"./keymaps\"\nimport React from 'react'\n\n\n\n\n\n\nconst beatsPerMeasure = 4;\n\n// const BPMtoSPB = (BPM) => {\n//   60s/120b\n// }\n\nexport const SongEditor = (props) => {\n  const [bpm, setBPM] = React.useState(120)\n  const [dawResolution, setDawResolution] = React.useState(40)\n\n  if(props.current){\n    let tracks = props.current.data\n    return <div className=\"grid-container\">\n    <div>Logo</div>\n    <div><Settings\n            setBPM={setBPM} bpm={bpm}\n            setDawResolution={setDawResolution} dawResolution={dawResolution}/></div>\n    <div>Sidebar</div>\n    <div><TrackViewer\n              tracks={tracks}\n              bpm={bpm}\n              dawResolution={dawResolution} /></div>\n    </div>\n  } else {\n    return \"no parents\"\n  }\n}\n\nconst Settings = (props) => {\n  return <>\n    <div><input type=\"range\" min={50} max={150} value={props.bpm} onChange={(e) => props.setBPM(e.target.value)} /> {props.bpm}</div>\n    <div><input type=\"range\" min={30} max={100} value={props.dawResolution} onChange={(e) => props.setDawResolution(e.target.value)} /> {props.dawResolution}</div>\n  </>\n}\n\nconst TrackViewer = (props) => {\n  const [activeTrack, setActiveTrack] = React.useState(0)\n  let tracks = props.tracks.map((item, idx) => {\n    return <div key={idx} onClick={() => setActiveTrack(idx)}>\n        {item.instrument} | {item.notes.length}\n        </div>//.notes.length\n  })\n\n  return <>\n    <div className=\"mini-area\">{tracks}</div>\n    <div className=\"active-area\">\n      <ActiveArea\n          active={props.tracks[activeTrack]}\n          bpm={props.bpm}\n          dawResolution={props.dawResolution}/>\n    </div>\n  </>\n}\n\nconst ActiveArea = (props) => {\n  if(!props.active || !props.active.notes || props.active.notes.length === 0) {return \"Select a track\"}\n  let totalLengthInSeconds = 5\n  let numBoxes = Math.round(totalLengthInSeconds*props.bpm/60);\n  let boxes = Array.from(Array(numBoxes).keys())\n  let notes = [...props.active.notes]//.splice(0, 15) //#FIXME\n  let minNote = notes.reduce((min, b) => Math.min(min, b.pitch), notes[0].pitch);\n  let maxNote = notes.reduce((min, b) => Math.max(min, b.pitch), notes[0].pitch);\n  let filteredKeys = Object.keys(keymaps).filter((item) => (item >= minNote && item <= maxNote))\n\n  let modifiedStyle = {minWidth:`${props.dawResolution}px`}\n\n  let header = <div className=\"key-row\">\n                  <div className=\"accidental keyNote\"></div>\n                    {boxes.map((item, idx) => {\n                      return <div className=\"daw-cell\" key={idx} style={modifiedStyle}>{idx}</div>\n                    })}\n                </div>\n\n  let body = filteredKeys.map((item, idx) => {\n      let b = boxes.map((item, idx) => {\n        return <div\n                  className={[\"background-cell\", \"daw-cell\"].join(\" \")}\n                  key={\"beats\"+idx}\n                  style={modifiedStyle}></div>\n      })\n      return <div className=\"key-row\" key={idx}>\n        {b}\n      </div>\n  })\n\n  let pianoKeys = filteredKeys.map((item, idx) => {\n    let c = keymaps[item].includes(\"#\") ? \"accidental\" : \"natural\";\n    return <div className={[c, \"keyNote\"].join(\" \")} key={idx}>{keymaps[item]}</div>\n  }).reverse()\n\n  return <>\n            <div>\n              {header}\n            </div>\n            <div className=\"daw\">\n              <div>\n                {pianoKeys}\n              </div>\n              <div style={{position: \"relative\"}}>\n                {body}\n                <Notes\n                  minNote={minNote}\n                  notes={notes}\n                  offset={maxNote}\n                  tempo={props.bpm}\n                  dawResolution={props.dawResolution}/>\n              </div>\n            </div>\n        </>\n  // return notes.map((item, idx) => {\n  //   return <div key={idx}>{[keymaps[item.pitch], item.duration, item.time_on].join(\"|\")}</div>\n  // })\n}\n\nconst Notes = (props) => {\n  return props.notes.map((note, idx) => {\n    return <Note {...props} note={note} key={idx} />\n  })\n}\n\nconst Note = (props) => {\n  let unitCellHeight=30;\n\n  let cellHeight = unitCellHeight;\n  let cellWidth=(props.tempo*props.note.duration/60)*props.dawResolution;\n  let topOffset=unitCellHeight*(props.offset - props.note.pitch);\n  let leftOffset=props.tempo*(props.note.time_on)/60*props.dawResolution;\n\n  let style = {\n    position: \"absolute\",\n    height:`${cellHeight}px`,\n    width:`${cellWidth}px`,\n    top:`${topOffset}px`,\n    left:`${leftOffset}px`\n  }\n\n  return <div className=\"note\" style={style}></div>\n}\n"]},"metadata":{},"sourceType":"module"}